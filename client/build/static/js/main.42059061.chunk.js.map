{"version":3,"sources":["assets/icons/checkbox-off.js","assets/icons/checkbox-on.js","assets/icons/icon-agents.js","assets/icons/icon-arrow-up.js","assets/icons/icon-articles.js","assets/icons/icon-bell-new.js","assets/icons/icon-contacts.js","assets/icons/icon-ideas.js","assets/icons/icon-logo.js","assets/icons/icon-logout.js","assets/icons/icon-overview.js","assets/icons/icon-search.js","assets/icons/icon-settings.js","assets/icons/icon-subscription.js","assets/icons/icon-tickets.js","components/header/avatar.png","resources/theme.js","resources/slugs.js","config/axios.js","actions/user.js","constants/userConstant.js","resources/utilities.js","components/sidebar/LogoComponent.js","components/sidebar/MenuComponent.js","components/collapsible/CollapsibleContent.js","hooks/useSidebar.js","components/sidebar/MenuItemComponent.js","components/sidebar/SidebarComponent.js","components/sidebar/SidebarContext.js","components/dropdown/DropdownComponent.js","components/dropdown/index.js","components/header/HeaderComponent.js","components/loading/LoadingComponent.js","components/loading/index.js","route/auth/AdminRoutes.js","route/auth/DoctorRoute.js","route/auth/PatientRoute.js","route/auth/SubAdminRoute.js","actions/customers.js","route/admin/customers/List.js","route/admin/customers/Form.js","route/admin/customers/New.js","route/admin/customers/Show.js","route/admin/customers/Edit.js","route/admin/departments/Form.js","actions/employees.js","actions/tickets.js","actions/departments.js","route/admin/departments/List.js","route/admin/departments/Show.js","route/admin/departments/Edit.js","route/subadmin/departments/Form.js","route/subadmin/departments/List.js","route/subadmin/departments/Show.js","route/subadmin/departments/Edit.js","route/admin/employees/List.js","route/admin/employees/Form.js","route/admin/employees/New.js","route/admin/employees/Show.js","route/admin/employees/Edit.js","actions/doctors.js","route/admin/doctors/List.js","route/admin/doctors/Form.js","route/admin/doctors/New.js","route/admin/doctors/Show.js","route/admin/doctors/Edit.js","route/admin/tickets/Tab.js","route/admin/tickets/List.js","route/admin/tickets/Form.js","route/admin/tickets/New.js","route/subadmin/tickets/Form.js","route/subadmin/tickets/New.js","route/admin/tickets/Show.js","route/admin/tickets/Edit.js","route/admin/tickets/Reports.js","route/admin/profile/Sidebar.js","components/ErrorMessage.js","route/admin/profile/Profile.js","route/admin/profile/ChangePassword.js","route/subadmin/tickets/Reports.js","route/subadmin/customers/List.js","route/subadmin/customers/Form.js","route/subadmin/customers/New.js","route/subadmin/customers/Show.js","route/subadmin/customers/Edit.js","route/subadmin/doctors/List.js","route/subadmin/doctors/Form.js","route/subadmin/doctors/New.js","route/subadmin/doctors/Show.js","route/subadmin/doctors/Edit.js","route/subadmin/tickets/Tab.js","route/subadmin/tickets/List.js","route/subadmin/tickets/Show.js","route/subadmin/tickets/Edit.js","route/subadmin/profile/Sidebar.js","route/subadmin/profile/Profile.js","route/subadmin/profile/ChangePassword.js","route/doctor/profile/Sidebar.js","route/doctor/profile/Profile.js","route/doctor/profile/ChangePassword.js","route/doctor/tickets/Tab.js","route/doctor/tickets/List.js","route/doctor/tickets/Form.js","route/doctor/tickets/New.js","route/doctor/tickets/Show.js","route/doctor/tickets/Edit.js","route/patient/profile/Sidebar.js","route/patient/profile/Profile.js","route/patient/profile/ChangePassword.js","route/patient/tickets/Tab.js","route/patient/tickets/List.js","route/patient/tickets/Form.js","route/patient/tickets/New.js","route/patient/tickets/Show.js","route/patient/tickets/Edit.js","route/PrivateRoutes.js","route/PrivateSection.js","route/user/createNewPassword.js","route/user/ForgotPassword.js","route/user/PublicNavbar.js","route/user/Login.js","route/user/PublicDashboard.js","route/user/Register.js","route/PublicRoutes.js","route/index.js","hooks/useWindowSize.js","serviceWorker.js","reducers/userReducer.js","reducers/customersReducer.js","reducers/departmentsReducer.js","reducers/employeesReducer.js","reducers/ticketsReducer.js","reducers/doctorsReducer.js","index.js","store/configureStore.js"],"names":["props","width","height","viewBox","fill","xmlns","cx","cy","r","stroke","strokeWidth","d","strokeLinecap","opacity","id","fillOpacity","clipPath","x1","y1","x2","y2","gradientUnits","stopColor","stopOpacity","offset","module","exports","color","brightBlue","darkGrayishBlue","darkRed","grayishBlue","grayishBlue2","grayishBlue3","lightBlue","lightGrayishBlue","lightGrayishBlue2","paleBlue","paleBlueTransparent","veryDarkGrayishBlue","typography","cardTitle","fontWeight","fontSize","lineHeight","letterSpacing","smallSubtitle","link","textAlign","cursor","textDecoration","itemTitle","title","admindashboard","adprofile","updateadprofile","overview","overviewTwo","overviewThree","tickets","ideas","ideasTwo","ideasThree","contacts","agents","articles","settings","subscription","CustomersList","CustomerNew","CustomerEdit","CustomerShow","DepartmentsList","DepartmentEdit","DepartmentShow","EmployeesList","EmployeeNew","EmployeeEdit","EmployeeShow","DoctorsList","DoctorNew","DoctorEdit","DoctorShow","TicketsList","TicketNew","TicketEdit","TicketShow","Reports","SubReports","subadmindashboard","subCustomersList","subCustomerNew","subCustomerEdit","subCustomerShow","subTicketsList","subTicketNew","subTicketEdit","subTicketShow","subReports","SubDoctorsList","subcustomers","subprofile","docdashboard","docTicketsList","docTicketNew","docTicketEdit","docTicketShow","docprofile","patdashboard","patTicketsList","patTicketNew","patTicketEdit","patTicketShow","patprofile","login","signup","publicdashboard","forgotPassword","axios","Axios","create","baseURL","process","setUser","user","type","payload","startRemoveUser","dispatch","delete","headers","localStorage","getItem","then","response","data","errors","alert","message","clear","updatePasswordAction","userData","console","log","getState","a","config","post","msg","updateProfile","redirect","swal","fire","convertSlugToUrl","slug","parameters","url","Object","entries","forEach","key","value","replace","useStyles","createUseStyles","theme","container","marginLeft","marginRight","LogoComponent","useTheme","classes","className","horizontal","vertical","MenuComponent","children","isMobile","menuStyles","bmBurgerButton","position","left","top","zIndex","bmBurgerBars","background","bmBurgerBarsHover","bmCrossButton","display","bmCross","bmMenuWrap","bmMenu","bmItem","outline","bmMorphShape","bmOverlay","getMenuStyles","useState","isOpen","setIsOpen","noOverlay","disableCloseOnEsc","styles","onStateChange","state","STATUS","CollapsibleContent","transitionStyles","expanded","style","transitionDuration","transitionTimingFunction","onTransitionStart","onTransitionEnd","others","contentContainerRef","useRef","status","setStatus","scrollHeight","useScrollHeight","maxHeight","useEffect","setTimeout","overflow","transitionProperty","ref","defaultProps","SidebarContext","createContext","SidebarProvider","defaultItem","currentItem","setCurrentItem","Provider","activeContainer","backgroundColor","paddingLeft","level","transition","leftBar","borderLeft","isActive","MenuItemComponent","Icon","icon","items","onClick","isCollapsible","length","item","useContext","includes","isExpanded","setIsExpanded","onItemClick","prev","useSidebar","classNameColumn","classNameContainer","join","iconColor","e","map","child","separator","borderTop","marginTop","marginBottom","connect","push","useHistory","window","innerWidth","useSelector","buttons","dangerMode","confirmLogout","SLUGS","paddingTop","paddingBottom","role","dashboard","IconSubscription","IconOverview","IconAgents","IconContacts","IconArticles","IconTickets","customers","IconIdeas","IconSettings","IconLogout","pathname","useLocation","arrowContainer","right","dropdownButton","alignItems","border","padding","dropdownContainer","dropdownItemsContainer","borderRadius","minWidth","bottom","dropdownItem","content","DropdownComponent","label","options","userMenuOpen","setUserMenuOpen","option","index","avatar","name","iconStyles","HeaderComponent","useDispatch","username","src","pic","alt","logout","from","transform","to","noTransparency","minHeight","fullScreen","loading","animationName","animationTimingFunction","animationDuration","animationIterationCount","loadingSpan","LoadingComponent","hideText","AdminRoute","Component","component","rest","render","location","DoctorRoute","PatientRoute","SubAdminRoute","startRemoveCustomer","customer","removeCustomer","catch","err","startAddCustomer","hasOwnProperty","addCustomer","startEditCustomer","put","editCustomer","reload","handleRemove","ticket","flag","tick","_id","confirmRemove","this","Table","striped","email","mobile","Button","React","CustomerForm","handleChange","setState","target","handleSubmit","preventDefault","formData","Form","onSubmit","FormGroup","Label","htmlFor","Input","onChange","history","findCustomer","find","findDepartment","departments","department","findEmployees","employees","employee","match","params","get","Row","Col","md","Container","Card","CardTitle","code","CardBody","CardText","isResolved","DepartmentForm","startRemoveEmployee","removeEmployee","startAddEmployee","addEmployee","startEditEmployee","editEmployee","setTickets","startRemoveTicket","removeTicket","addTicket","startAddTicket","x","arr","arrdoc","doctors","editTicket","startEditTicket","arrb","startEditTicketTwo","doctviv","startEditTicketTwoDoc","startToggleResolve","startRemoveDepartment","removeDepartment","startAddDepartment","addDepartment","startEditDepartment","editDepartment","updateEmployeeDepartment","updateTicketDepartment","document","emp","confirmDelete","ListGroup","dept","ListGroupItem","isConfirmed","EmployeeForm","startRemoveDoctor","doctor","removeDoctor","startAddDoctor","addDoctor","startEditDoctor","editDoctor","DoctorForm","TicketTab","toggle","tab","activeTab","temp","temp2","temp3","findDoctors","temp4","Nav","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","filter","doc","priority","handleResolve","pleasewait","prevState","currentTickets","handleSearch","newTickets","search","allTickets","completedTickets","Math","round","placeholder","aria-label","calculatePercentage","Progress","TicketForm","emps","deptId","test","employeesnew","docs","testdoc","doctorsnew","handleMultiChange","pop","it","handleMultiChangeForDoctors","assign","defaultValue","isMulti","employeenew","doctornew","tag","check","checked","pendingTickets","piedata","chartdata","chartdataTickets","chartType","is3D","chart","Sidebar","ErrorMessage","variant","Alert","Profile","setName","setEmail","gender","setGender","newgender","setNewender","phone","setPhone","dob","setDob","address","setAddress","pin","setPin","country","setCountry","city","setCity","setPic","picMessage","setPicMessage","photoloading","setPhotoloading","Helmet","reverseOrder","toastOptions","boxShadow","selectedValue","wordWrap","File","pics","undefined","FormData","append","fetch","method","body","res","json","toString","postDetails","files","custom","ChangePassword","current","newPassword","userId","fromnew","gencpassword","empviv","disabled","startAddTicketTwo","genpassword","generatePassword","generate","numbers","AdminDashboard","lazy","SubAdminDashboard","DoctorDashboard","PatientDashboard","PrivateRoutes","scrollTo","fallback","exact","path","SubProfile","SubTicketsList","SubTicketNew","SubTicketEdit","SubTicketShow","SubChangePassword","SubDoctorNew","SubDoctorEdit","SubDoctorShow","SubDepartmentsList","SubDepartmentEdit","SubDepartmentShow","SubCustomersList","SubCustomerNew","SubCustomerEdit","SubCustomerShow","DocProfile","DocTicketsList","DocTicketNew","DocTicketEdit","DocTicketShow","DocChangePassword","PatProfile","PatChangePassword","PatTicketsList","PatTicketNew","PatTicketEdit","PatTicketShow","mainBlock","contentBlock","PrivateSection","flexGrow","CreateNewPassword","newPass","setNewPass","conPass","setConPass","token","passReset","error","Group","Control","resetPassword","ForgotPassword","passResetLink","getResetPasswordLink","collapsed","setCollapsed","Navbar","dark","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Login","password","setPassword","redirectToPassChange","setItem","isFirstVisit","isSelfcreated","startSetUser","PublicDashboard","Register","handleClick","registerData","register","startAddUser","PublicRoutes","Routes","size","setSize","useLayoutEffect","updateSize","innerHeight","addEventListener","removeEventListener","useWindowSize","Boolean","hostname","userReducer","action","passResetLinkReducer","passResetReducer","customersReducer","concat","departmentsReducer","employeesReducer","ticketsReducer","doctorsReducer","store","createStore","combineReducers","applyMiddleware","thunk","configureStore","arrm","ReactDOM","Theme","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.42059061.chunk.js","sourcesContent":["import React from 'react';\n\nexport default (props) => (\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle cx=\"10\" cy=\"10\" r=\"9\" stroke=\"#C5C7CD\" strokeWidth=\"2\" />\n    </svg>\n);\n","import React from 'react';\n\nexport default (props) => (\n    <svg width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle cx=\"10\" cy=\"10\" r=\"10\" fill=\"#3751FF\" />\n        <path d=\"M5 11L7.92929 13.9293C7.96834 13.9683 8.03166 13.9683 8.07071 13.9293L15 7\" stroke=\"white\" strokeWidth=\"1.7\" strokeLinecap=\"round\" />\n    </svg>\n);\n","import React from 'react';\n\nexport default (props) => (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path opacity={props.opacity || ''} d=\"M8 8C10.2094 8 12 6.20937 12 4C12 1.79063 10.2094 0 8 0C5.79063 0 4 1.79063 4 4C4 6.20937 5.79063 8 8 8ZM10.9937 9.01875L9.5 15L8.5 10.75L9.5 9H6.5L7.5 10.75L6.5 15L5.00625 9.01875C2.77812 9.125 1 10.9469 1 13.2V14.5C1 15.3281 1.67188 16 2.5 16H13.5C14.3281 16 15 15.3281 15 14.5V13.2C15 10.9469 13.2219 9.125 10.9937 9.01875Z\"\n            fill={props.fill || \"#9FA2B4\"}\n        />\n    </svg>\n);\n","import React from 'react';\n\nexport default (props) => (\n    <svg\n        id={props.id}\n        width={props.height || '15'}\n        height={props.height || '15'}\n        viewBox='0 0 640 640'\n        fill='none'\n        xmlns='http://www.w3.org/2000/svg'\n    >\n        <path\n            d='M319.99 640L21.87 640L170.92 320L319.99 32.21L469.07 320L618.13 640L618.13 640L319.99 640Z'\n            opacity='1'\n            fill='#dfe0eb'\n            fillOpacity='1'\n        />\n        <path\n            d='M469.07 478.15L544.52 640L335.64 640L93.64 640L170.92 478.15L319.99 158.15L469.07 478.15Z'\n            opacity='1'\n            fill='#ffffff'\n            fillOpacity='1'\n        />\n    </svg>\n);\n","import React from 'react';\n\nexport default (props) => (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path opacity={props.opacity || ''} d=\"M15 11.25V0.75C15 0.334375 14.6656 0 14.25 0H4C2.34375 0 1 1.34375 1 3V13C1 14.6562 2.34375 16 4 16H14.25C14.6656 16 15 15.6656 15 15.25V14.75C15 14.5156 14.8906 14.3031 14.7219 14.1656C14.5906 13.6844 14.5906 12.3125 14.7219 11.8313C14.8906 11.6969 15 11.4844 15 11.25ZM5 4.1875C5 4.08437 5.08437 4 5.1875 4H11.8125C11.9156 4 12 4.08437 12 4.1875V4.8125C12 4.91563 11.9156 5 11.8125 5H5.1875C5.08437 5 5 4.91563 5 4.8125V4.1875ZM5 6.1875C5 6.08437 5.08437 6 5.1875 6H11.8125C11.9156 6 12 6.08437 12 6.1875V6.8125C12 6.91563 11.9156 7 11.8125 7H5.1875C5.08437 7 5 6.91563 5 6.8125V6.1875ZM12.9187 14H4C3.44688 14 3 13.5531 3 13C3 12.45 3.45 12 4 12H12.9187C12.8594 12.5344 12.8594 13.4656 12.9187 14Z\"\n            fill={props.fill || \"#9FA2B4\"}\n        />\n    </svg>\n);\n","import React from 'react';\n\nexport default (props) => (\n    <svg width=\"18\" height=\"19\" viewBox=\"0 0 18 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path d=\"M7.99999 19C9.10374 19 9.99905 18.1047 9.99905 17H6.00093C6.00093 18.1047 6.89624 19 7.99999 19ZM14.7309 14.3216C14.1272 13.6728 12.9975 12.6969 12.9975 9.5C12.9975 7.07188 11.295 5.12812 8.99937 4.65125V4C8.99937 3.44781 8.55187 3 7.99999 3C7.44812 3 7.00062 3.44781 7.00062 4V4.65125C4.70499 5.12812 3.00249 7.07188 3.00249 9.5C3.00249 12.6969 1.8728 13.6728 1.26905 14.3216C1.08155 14.5231 0.998429 14.7641 0.999991 15C1.00343 15.5125 1.40562 16 2.00312 16H13.9969C14.5944 16 14.9969 15.5125 15 15C15.0016 14.7641 14.9184 14.5228 14.7309 14.3216Z\" fill=\"#C5C7CD\" />\n        <circle cx=\"13\" cy=\"5\" r=\"3.75\" fill=\"#3751FF\" stroke=\"#F7F8FC\" strokeWidth=\"1.5\" />\n    </svg>\n);\n","import React from 'react';\n\nexport default (props) => (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path opacity={props.opacity || ''} d=\"M2.4 7.2C3.2825 7.2 4 6.4825 4 5.6C4 4.7175 3.2825 4 2.4 4C1.5175 4 0.8 4.7175 0.8 5.6C0.8 6.4825 1.5175 7.2 2.4 7.2ZM13.6 7.2C14.4825 7.2 15.2 6.4825 15.2 5.6C15.2 4.7175 14.4825 4 13.6 4C12.7175 4 12 4.7175 12 5.6C12 6.4825 12.7175 7.2 13.6 7.2ZM14.4 8H12.8C12.36 8 11.9625 8.1775 11.6725 8.465C12.68 9.0175 13.395 10.015 13.55 11.2H15.2C15.6425 11.2 16 10.8425 16 10.4V9.6C16 8.7175 15.2825 8 14.4 8ZM8 8C9.5475 8 10.8 6.7475 10.8 5.2C10.8 3.6525 9.5475 2.4 8 2.4C6.4525 2.4 5.2 3.6525 5.2 5.2C5.2 6.7475 6.4525 8 8 8ZM9.92 8.8H9.7125C9.1925 9.05 8.615 9.2 8 9.2C7.385 9.2 6.81 9.05 6.2875 8.8H6.08C4.49 8.8 3.2 10.09 3.2 11.68V12.4C3.2 13.0625 3.7375 13.6 4.4 13.6H11.6C12.2625 13.6 12.8 13.0625 12.8 12.4V11.68C12.8 10.09 11.51 8.8 9.92 8.8ZM4.3275 8.465C4.0375 8.1775 3.64 8 3.2 8H1.6C0.7175 8 0 8.7175 0 9.6V10.4C0 10.8425 0.3575 11.2 0.8 11.2H2.4475C2.605 10.015 3.32 9.0175 4.3275 8.465Z\"\n            fill={props.fill || \"#9FA2B4\"}\n        />\n    </svg>\n);\n","import React from 'react';\n\nexport default (props) => (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g clipPath=\"url(#clip0)\">\n            <path opacity={props.opacity || ''} d=\"M5.50187 14.1984C5.50219 14.395 5.56031 14.5875 5.66937 14.7512L6.20344 15.5541C6.29467 15.6913 6.41841 15.8039 6.56366 15.8817C6.7089 15.9596 6.87114 16.0003 7.03594 16.0003H8.96438C9.12917 16.0003 9.29141 15.9596 9.43665 15.8817C9.5819 15.8039 9.70564 15.6913 9.79688 15.5541L10.3309 14.7512C10.44 14.5875 10.4982 14.3952 10.4984 14.1984L10.4997 13H5.50031L5.50187 14.1984ZM2.5 5.5C2.5 6.88656 3.01406 8.15156 3.86125 9.11812C4.3775 9.70718 5.185 10.9378 5.49281 11.9759C5.49406 11.9841 5.495 11.9922 5.49625 12.0003H10.5037C10.505 11.9922 10.5059 11.9844 10.5072 11.9759C10.815 10.9378 11.6225 9.70718 12.1388 9.11812C12.9859 8.15156 13.5 6.88656 13.5 5.5C13.5 2.45656 11.0284 -0.00937887 7.98281 -3.87451e-06C4.795 0.00968363 2.5 2.59281 2.5 5.5ZM8 3C6.62156 3 5.5 4.12156 5.5 5.5C5.5 5.77625 5.27625 6 5 6C4.72375 6 4.5 5.77625 4.5 5.5C4.5 3.57 6.07 2 8 2C8.27625 2 8.5 2.22375 8.5 2.5C8.5 2.77625 8.27625 3 8 3Z\"\n                fill={props.fill || \"#9FA2B4\"} />\n            />\n        </g>\n        <defs>\n            <clipPath id=\"clip0\">\n                <rect width=\"16\" height=\"16\" fill=\"white\" />\n            </clipPath>\n        </defs>\n    </svg>\n);\n","import React from 'react';\n\nexport default () => (\n    <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle cx=\"16\" cy=\"16\" r=\"16\" fill=\"#3751FF\" />\n        <path d=\"M11 10C11 9.44772 11.4477 9 12 9H15.9905C18.2127 9 19.9333 9.60955 21.1524 10.8287C22.3841 12.0478 23 13.765 23 15.9803C23 18.2088 22.3841 19.9391 21.1524 21.1713C19.9333 22.3904 18.2127 23 15.9905 23H12C11.4477 23 11 22.5523 11 22V10Z\" fill=\"url(#paint0_linear)\" />\n        <defs>\n            <linearGradient id=\"paint0_linear\" x1=\"11\" y1=\"9\" x2=\"23\" y2=\"23\" gradientUnits=\"userSpaceOnUse\">\n                <stop stopColor=\"white\" stopOpacity=\"0.7\" />\n                <stop offset=\"1\" stopColor=\"white\" />\n            </linearGradient>\n        </defs>\n    </svg>\n);\n","import React from 'react';\n\nexport default (props) => (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 297 297\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path opacity={props.opacity || ''} d=\"M155,6.5c-30.147,0-58.95,9.335-83.294,26.995c-2.789,2.023-3.547,5.853-1.739,8.787L92.83,79.374\n\t\t\t\tc0.962,1.559,2.53,2.649,4.328,3.004c1.796,0.354,3.661-0.054,5.145-1.129c14.23-10.323,31.069-15.78,48.698-15.78\n\t\t\t\tc45.783,0,83.03,37.247,83.03,83.03c0,45.783-37.247,83.03-83.03,83.03c-17.629,0-34.468-5.456-48.698-15.78\n\t\t\t\tc-1.484-1.076-3.349-1.486-5.145-1.129c-1.798,0.355-3.366,1.444-4.328,3.004l-22.863,37.093\n\t\t\t\tc-1.808,2.934-1.05,6.763,1.739,8.787C96.05,281.165,124.853,290.5,155,290.5c78.299,0,142-63.701,142-142S233.299,6.5,155,6.5z\"\n            fill={props.fill || \"#9FA2B4\"}\n        />\n        <path opacity={props.opacity || ''} d=\"M90.401,201.757c1.147-2.142,1.021-4.74-0.326-6.76l-15.463-23.195h93.566c12.849,0,23.302-10.453,23.302-23.302\n            s-10.453-23.302-23.302-23.302H74.612l15.463-23.195c1.348-2.02,1.473-4.618,0.326-6.76c-1.146-2.141-3.377-3.478-5.806-3.478\n            H40.019c-2.201,0-4.258,1.1-5.479,2.933L1.106,144.847c-1.475,2.212-1.475,5.093,0,7.306l33.433,50.149\n            c1.221,1.832,3.278,2.933,5.479,2.933h44.577C87.025,205.235,89.256,203.898,90.401,201.757z\"\n            fill={props.fill || \"#9FA2B4\"}\n        />\n    </svg>\n);\n","import React from 'react';\n\nexport default (props) => (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\">\n        <g clipPath=\"url(#clip0)\">\n            <path opacity={props.opacity || ''} d=\"M15.5232 8.94116H8.54412L13.1921 13.5891C13.3697 13.7667 13.6621 13.7812 13.8447 13.6091C14.9829 12.5367 15.7659 11.0912 15.9956 9.46616C16.035 9.18793 15.8041 8.94116 15.5232 8.94116V8.94116ZM15.0576 7.03528C14.8153 3.52176 12.0076 0.714119 8.49412 0.471767C8.22589 0.453237 8 0.679413 8 0.948236V7.5294H14.5815C14.8503 7.5294 15.0762 7.30352 15.0576 7.03528ZM6.58824 8.94116V1.96206C6.58824 1.68118 6.34147 1.45029 6.06353 1.48971C2.55853 1.985 -0.120585 5.04705 0.00412089 8.71675C0.132356 12.4856 3.37736 15.5761 7.14794 15.5288C8.6303 15.5103 10 15.0326 11.1262 14.2338C11.3585 14.0691 11.3738 13.727 11.1724 13.5256L6.58824 8.94116Z\"\n                fill={props.fill || \"#9FA2B4\"}\n            />\n        </g>\n        <defs>\n            <clipPath id=\"clip0\">\n                <rect width=\"16\" height=\"16\" fill=\"white\" />\n            </clipPath>\n        </defs>\n    </svg>\n);","import React from 'react';\n\nexport default (props) => (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle cx=\"6.5\" cy=\"6.5\" r=\"5.75\" stroke=\"#C5C7CD\" strokeWidth=\"1.5\" />\n        <path d=\"M11 11L15 15\" stroke=\"#C5C7CD\" strokeWidth=\"1.5\" strokeLinecap=\"round\" />\n    </svg>\n);\n","import React from 'react';\n\nexport default (props) => (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path opacity={props.opacity || ''} d=\"M15.2313 9.86557L13.9 9.09682C14.0344 8.37182 14.0344 7.62807 13.9 6.90307L15.2313 6.13432C15.3844 6.04682 15.4531 5.86557 15.4031 5.69682C15.0563 4.58432 14.4656 3.57807 13.6938 2.74057C13.575 2.61244 13.3813 2.58119 13.2313 2.66869L11.9 3.43744C11.3406 2.95619 10.6969 2.58432 10 2.34057V0.806191C10 0.631191 9.87814 0.478066 9.70627 0.440566C8.55939 0.184316 7.38439 0.196816 6.29377 0.440566C6.12189 0.478066 6.00002 0.631191 6.00002 0.806191V2.34369C5.30627 2.59057 4.66252 2.96244 4.10002 3.44057L2.77189 2.67182C2.61877 2.58432 2.42814 2.61244 2.30939 2.74369C1.53752 3.57807 0.946895 4.58432 0.60002 5.69994C0.546895 5.86869 0.61877 6.04994 0.771895 6.13744L2.10314 6.90619C1.96877 7.63119 1.96877 8.37494 2.10314 9.09994L0.771895 9.86869C0.61877 9.95619 0.55002 10.1374 0.60002 10.3062C0.946895 11.4187 1.53752 12.4249 2.30939 13.2624C2.42814 13.3906 2.62189 13.4218 2.77189 13.3343L4.10314 12.5656C4.66252 13.0468 5.30627 13.4187 6.00314 13.6624V15.1999C6.00314 15.3749 6.12502 15.5281 6.29689 15.5656C7.44377 15.8218 8.61877 15.8093 9.70939 15.5656C9.88127 15.5281 10.0031 15.3749 10.0031 15.1999V13.6624C10.6969 13.4156 11.3406 13.0437 11.9031 12.5656L13.2344 13.3343C13.3875 13.4218 13.5781 13.3937 13.6969 13.2624C14.4688 12.4281 15.0594 11.4218 15.4063 10.3062C15.4531 10.1343 15.3844 9.95307 15.2313 9.86557ZM8.00002 10.4999C6.62189 10.4999 5.50002 9.37807 5.50002 7.99994C5.50002 6.62182 6.62189 5.49994 8.00002 5.49994C9.37814 5.49994 10.5 6.62182 10.5 7.99994C10.5 9.37807 9.37814 10.4999 8.00002 10.4999Z\"\n            fill={props.fill || \"#9FA2B4\"}\n        />\n    </svg>\n);\n","import React from 'react';\n\nexport default (props) => (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g clipPath=\"url(#clip0)\">\n            <path opacity={props.opacity || ''} d=\"M5.035 11.3322C4.76344 11.0606 4.905 11.1372 4.25 10.9619C3.95281 10.8822 3.69156 10.7291 3.45531 10.5456L2.0375 14.0219C1.90031 14.3584 2.15656 14.7241 2.51969 14.7103L4.16625 14.6475L5.29875 15.8437C5.54875 16.1075 5.9875 16.0253 6.12469 15.6887L7.75125 11.7006C7.4125 11.8894 7.03656 12 6.64781 12C6.03844 12 5.46594 11.7628 5.035 11.3322ZM13.9625 14.0219L12.5447 10.5456C12.3084 10.7294 12.0472 10.8822 11.75 10.9619C11.0916 11.1381 11.2359 11.0612 10.965 11.3322C10.5341 11.7628 9.96125 12 9.35188 12C8.96313 12 8.58719 11.8891 8.24844 11.7006L9.875 15.6887C10.0122 16.0253 10.4513 16.1075 10.7009 15.8437L11.8338 14.6475L13.4803 14.7103C13.8434 14.7241 14.0997 14.3581 13.9625 14.0219ZM10.2188 10.625C10.6963 10.1391 10.7509 10.1809 11.4309 9.99562C11.865 9.87718 12.2044 9.53187 12.3206 9.08999C12.5544 8.20249 12.4938 8.30968 13.1316 7.66031C13.4494 7.33687 13.5734 6.8653 13.4572 6.42343C13.2238 5.53655 13.2234 5.66031 13.4572 4.77249C13.5734 4.33062 13.4494 3.85906 13.1316 3.53562C12.4938 2.88624 12.5544 2.99312 12.3206 2.10593C12.2044 1.66406 11.865 1.31874 11.4309 1.20031C10.5597 0.962493 10.6647 1.02468 10.0263 0.374993C9.70844 0.0515551 9.245 -0.0750074 8.81094 0.0434301C7.94 0.28093 8.06156 0.281243 7.18906 0.0434301C6.755 -0.0750074 6.29156 0.0512426 5.97375 0.374993C5.33594 1.02437 5.44094 0.962493 4.56938 1.20031C4.13531 1.31874 3.79594 1.66406 3.67969 2.10593C3.44625 2.99312 3.50656 2.88624 2.86875 3.53562C2.55094 3.85906 2.42656 4.33062 2.54313 4.77249C2.77656 5.65874 2.77688 5.53499 2.54313 6.42312C2.42688 6.86499 2.55094 7.33656 2.86875 7.66031C3.50656 8.30968 3.44594 8.20249 3.67969 9.08999C3.79594 9.53187 4.13531 9.87718 4.56938 9.99562C5.26875 10.1862 5.32094 10.1562 5.78125 10.625C6.19469 11.0459 6.83875 11.1212 7.33563 10.8069C7.53432 10.6807 7.76481 10.6137 8.00016 10.6137C8.23551 10.6137 8.466 10.6807 8.66469 10.8069C9.16125 11.1212 9.80531 11.0459 10.2188 10.625ZM5.05188 5.49874C5.05188 3.84156 6.37188 2.49812 8 2.49812C9.62813 2.49812 10.9481 3.84156 10.9481 5.49874C10.9481 7.15593 9.62813 8.49937 8 8.49937C6.37188 8.49937 5.05188 7.15593 5.05188 5.49874Z\"\n                fill={props.fill || \"#9FA2B4\"}\n            />\n        </g>\n        <defs>\n            <clipPath id=\"clip0\">\n                <rect width=\"16\" height=\"16\" fill=\"white\" />\n            </clipPath>\n        </defs>\n    </svg>\n);\n","import React from 'react';\n\nexport default (props) => (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path opacity={props.opacity || ''} d=\"M3.55556 5.33334H12.4444V10.6667H3.55556V5.33334ZM14.6667 8C14.6667 8.73639 15.2636 9.33334 16 9.33334V12C16 12.7364 15.4031 13.3333 14.6667 13.3333H1.33333C0.596944 13.3333 0 12.7364 0 12V9.33334C0.736389 9.33334 1.33333 8.73639 1.33333 8C1.33333 7.26362 0.736389 6.66667 0 6.66667V4.00001C0 3.26362 0.596944 2.66667 1.33333 2.66667H14.6667C15.4031 2.66667 16 3.26362 16 4.00001V6.66667C15.2636 6.66667 14.6667 7.26362 14.6667 8ZM13.3333 5.11112C13.3333 4.74292 13.0349 4.44445 12.6667 4.44445H3.33333C2.96514 4.44445 2.66667 4.74292 2.66667 5.11112V10.8889C2.66667 11.2571 2.96514 11.5556 3.33333 11.5556H12.6667C13.0349 11.5556 13.3333 11.2571 13.3333 10.8889V5.11112Z\"\n        fill={props.fill || \"#9FA2B4\"} />\n    </svg>\n);\n","module.exports = __webpack_public_path__ + \"static/media/avatar.bfaa46de.png\";","const color = {\n    brightBlue: '#3498db',\n    darkGrayishBlue: '#8b8d94',\n    darkRed: '#a90000',\n    grayishBlue: '#A4A6B3',\n    grayishBlue2: '#9fa2b4',\n    grayishBlue3: '#bdc3c7',\n    lightBlue: '#3751FF',\n    lightGrayishBlue: '#F7F8FC', // background color\n    lightGrayishBlue2: '#DFE0EB',\n    paleBlue: '#DDE2FF',\n    paleBlueTransparent: 'rgba(221, 226, 255, 0.08)',\n    veryDarkGrayishBlue: '#373a47'\n};\n\nconst typography = {\n    cardTitle: {\n        fontWeight: 'bold',\n        fontSize: 19,\n        lineHeight: '24px',\n        letterSpacing: '0.4px'\n    },\n    smallSubtitle: {\n        fontSize: 12,\n        lineHeight: '16px',\n        letterSpacing: '0.1px'\n    },\n    link: {\n        fontWeight: '600',\n        fontSize: 14,\n        lineHeight: '20px',\n        letterSpacing: '0.2px',\n        color: color.lightBlue,\n        textAlign: 'right',\n        cursor: 'pointer',\n        textDecoration: 'underline',\n        '&:hover': {\n            color: color.grayishBlue\n        }\n    },\n    itemTitle: {\n        fontWeight: 600,\n        fontSize: 14,\n        lineHeight: '20px',\n        letterSpacing: 0.2\n    },\n    title: {\n        fontWeight: 'bold',\n        fontSize: 24,\n        lineHeight: '30px',\n        letterSpacing: 0.3\n    }\n};\n\nexport default {\n    // https://www.colorhexa.com/A4A6B3\n    color,\n    typography\n};\n","export default {\n    // private\n    admindashboard: '/admindashboard',\n    adprofile: '/users/adprofile',\n    updateadprofile: '/user/updateadprofile',\n    overview: '/overview',\n    overviewTwo: '/overview/two',\n    overviewThree: '/overview/three',\n    tickets: '/tickets',\n    ideas: '/ideas',\n    ideasTwo: '/ideas/two',\n    ideasThree: '/ideas/three',\n    contacts: '/contacts',\n    agents: '/agents',\n    articles: '/articles',\n    settings: '/settings',\n    subscription: '/subscription',\n\n    CustomersList: '/customers',\n    CustomerNew: '/customers/new',\n    CustomerEdit: '/customers/edit/:id', \n    CustomerShow: '/customers/:id',\n\n    DepartmentsList: '/departments',\n    DepartmentEdit: '/departments/edit/:id',\n    DepartmentShow: '/departments/:id',\n\n    \n    // SubDepartmentsList: '/departments',\n    // SubDepartmentEdit: '/departments/edit/:id',\n    // SubDepartmentShow: '/departments/:id',\n\n    EmployeesList: '/employees',\n    EmployeeNew: '/employees/new',\n    EmployeeEdit: '/employees/edit/:id',\n    EmployeeShow: '/employees/:id',\n\n\n    DoctorsList: '/doctors',\n    DoctorNew: '/doctors/new',\n    DoctorEdit: '/doctors/edit/:id',\n    DoctorShow: '/doctors/:id',\n\n    TicketsList: '/tickets',\n    TicketNew: '/tickets/new',\n    TicketEdit: '/tickets/edit/:id',\n    TicketShow: '/tickets/:id',\n    Reports: '/reports',\n\n    SubReports:'/subreports',\n    // test\n\n    // admin\n\n    //subadmin\n    subadmindashboard: '/subadmindashboard', \n\n    subCustomersList: '/subcustomers',\n    subCustomerNew: '/subcustomers/new',\n    subCustomerEdit: '/subcustomers/edit/:id',\n    subCustomerShow: '/subcustomers/:id',\n\n    subTicketsList: '/subtickets',\n    subTicketNew: '/subtickets/new',\n    subTicketEdit: '/subtickets/edit/:id',\n    subTicketShow: '/subtickets/:id',\n    subReports: '/subreports',\n\n    SubDoctorsList:'/subdoctors',\n    subcustomers:'/subcustomers',\n\n    subprofile: '/subprofile',\n\n    //doctor\n    docdashboard: '/docdashboard',\n\n    docTicketsList: '/doctickets',\n    docTicketNew: '/doctickets/new',\n    docTicketEdit: '/doctickets/edit/:id',\n    docTicketShow: '/doctickets/:id',\n\n    docprofile: '/docprofile',\n\n    //patient \n    patdashboard: '/patdashboard',\n\n    patTicketsList: '/pattickets',\n    patTicketNew: '/pattickets/new',\n    patTicketEdit: '/pattickets/edit/:id', \n    patTicketShow: '/pattickets/:id',\n\n    patprofile: '/patprofile',\n\n    // auth\n    login: '/login',\n    signup: '/signup',\n    publicdashboard: '/publicdashboard',\n    forgotPassword: '/forgot_password'\n};\n\n\n\n\n\n\n\n\n                    // testing\n                    //     <AdminRoute path='/customers' component={CustomersList} exact={true} />\n                    //     <AdminRoute path='/customers/new' component={CustomerNew} />\n                    //     <AdminRoute path='/customers/edit/:id' component={CustomerEdit} />\n                    //     <AdminRoute path='/customers/:id' component={CustomerShow} />\n\n                    //     <AdminRoute path='/departments' component={DepartmentsList} exact={true} />\n                    //     <AdminRoute path='/departments/edit/:id' component={DepartmentEdit} />\n                    //     <AdminRoute path='/departments/:id' component={DepartmentShow} />\n\n                    //     <AdminRoute path='/employees' component={EmployeesList} exact={true} />\n                    //     <AdminRoute path='/employees/new' component={EmployeeNew} />\n                    //     <AdminRoute path='/employees/edit/:id' component={EmployeeEdit} />\n                    //     <AdminRoute path='/employees/:id' component={EmployeeShow} />\n\n                    //     <AdminRoute path='/tickets' component={TicketsList} exact={true} />\n                    //     <AdminRoute path='/tickets/new' component={TicketNew} />\n                    //     <AdminRoute path='/tickets/edit/:id' component={TicketEdit} />\n                    //     <AdminRoute path='/tickets/:id' component={TicketShow} />\n                    //     <AdminRoute path='/reports' component={Reports} />\n                    // testing\n\n\n\n\n//             <Route path=\"/users/profile\" component={Profile} exact={true} />\n//             <Route path=\"/updatePassword\" exact component={ChangePassword} />\n//             <Route path=\"/forgot-password\" component={ForgotPassword} />;\n//             <Route\n//               path=\"/createNewPassword/:token\"\n//               component={CreateNewPassword}\n//             />","import Axios from 'axios'\n// const axios = Axios.create({\n//     baseURL:'http://localhost:3050'\n// })\n\nconst axios = Axios.create({\n    baseURL: process.env.REACT_APP_BACKEND\n});\n\nexport default axios","import axios from '../config/axios'\nimport swal from 'sweetalert2'\n\n\nimport {\n    PASSWORD_RESET_LINK_REQUEST,\n    PASSWORD_RESET_LINK_FAIL,\n    PASSWORD_RESET_LINK_SUCCESS,\n    RESET_PASSWORD_SUCCESS,\n    RESET_PASSWORD_FAIL,\n    RESET_PASSWORD_REQUEST,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_LOGIN_SUCCESS,\n    USER_UPDATE_FAIL\n} from '../constants/userConstant.js';\n\n\nexport const setUser = (user) => {\n    return {\n        type: 'SET_USER',\n        payload: user\n    }\n}\n\n\nexport const setChangedPass = (info) => {\n  return {\n    type: \"SET_MESSAGE\",\n    payload: info,\n  };\n};\n\nexport const removeUser = ()=>{\n    return {\n        type: 'REMOVE_USER'\n    }\n}\n\nexport const startSetUser = (login, redirect, redirectToPassChange) => {\n  return (dispatch) => {\n    axios.post(\"/users/login\", login).then((response) => {\n      if (response.data.hasOwnProperty(\"errors\")) {\n        swal.fire(`${response.data.errors}`, \" \", \"error\");\n      } else {\n        swal.fire(\"Successfully logged in\", \"\", \"success\");\n        localStorage.setItem(\"authToken\", response.data.token);\n        console.log(response.data);\n        console.log(response.data.user.isFirstVisit);\n        const config = {\n          headers: {\n            \"x-auth\": localStorage.getItem(\"authToken\"),\n          },\n        };\n\n        if (\n          response.data.user.isFirstVisit === true &&\n          response.data.user.isSelfcreated === false\n        ) {\n            console.log('INSIDE TESTING');\n            axios.post('/newstatuschange', { _id: response.data.user._id }, config).then((data) => {\n                console.log(data);\n                alert('work done');\n            });\n            dispatch(setUser(response.data.user));\n            redirectToPassChange(response.data.user);\n            document.location.reload();\n        }\n        else{\n          dispatch(setUser(response.data.user));\n          redirect(response.data.user);\n          document.location.reload();\n        }\n      }\n    });\n  };\n};\n\nexport const startAddUser = (register,redirect) => {\n    return(dispatch => {\n        axios.post('/users/register',register)\n        .then(response => {\n            if(response.data.hasOwnProperty('errors')) {\n                swal.fire(`${response.data.errors}`,\" \",\"error\")\n\n            } else {\n                swal.fire(\"Successfully Registered \",\"\",\"success\")\n                // localStorage.setItem('authToken',response.data.token)\n                redirect()\n                dispatch(setUser(response.data.user))\n\n            }\n        })\n    })\n\n}\n\nexport const startRemoveUser = () =>{\n    return(dispatch=>{\n        axios.delete('/users/logout',{\n            headers : {\n                'x-auth':localStorage.getItem('authToken')\n            }\n        })\n        .then(response=>{\n            if(response.data.errors){\n                alert(response.data.message)\n            } else {\n                localStorage.clear()\n                dispatch(removeUser())\n            }\n        })\n    })\n}\n\n\n\nexport const updatePasswordAction = (userData) => {\n  console.log(userData);\n    return async (dispatch, getState) => {\n      console.log(localStorage.getItem(\"authToken\"));\n      // const token = localStorage.getItem(\"authToken\");\n      const config = {\n        headers: {\n          \"x-auth\": localStorage.getItem(\"authToken\"),\n        },\n      };\n      try {\n        const { data } = await axios.post(\"/updatePassword\", userData, config);\n        dispatch(setChangedPass(data.msg));\n        alert(\"password updated successfully\")\n      } catch (error) {\n        console.log(error)\n      }\n    };\n};\n\n\n//password reset during login\n\nexport const getResetPasswordLink = (email) => async (dispatch) => {\n  try {\n    dispatch({\n      type: PASSWORD_RESET_LINK_REQUEST,\n    });\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    const { data } = await axios.post(\n      `/api/users/getResetPasswordLink`,\n      { email },\n      config\n    );\n    dispatch({\n      type: PASSWORD_RESET_LINK_SUCCESS,\n      payload: data.message,\n    });\n  } catch (error) {\n    dispatch({\n      type: PASSWORD_RESET_LINK_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n//password reset during login\nexport const resetPassword = (token, newPass, conPass) => async (dispatch) => {\n  try {\n    dispatch({\n      type: RESET_PASSWORD_REQUEST,\n    });\n    const config = {\n      headers: {\n        \"x-auth\": localStorage.getItem(\"authToken\"),\n      },\n    };\n\n    const { data } = await axios.post(\n      `/api/users/resetPassword/${token}`,\n      { newPass, conPass },\n      config\n    );\n    console.log(data);\n\n   if(data.error)\n   {\n     dispatch({\n         type: RESET_PASSWORD_FAIL,\n         payload:data.error\n     });\n   }\n   else{\n      dispatch({\n          type: RESET_PASSWORD_SUCCESS,\n          payload: data.status\n      });\n   }\n  } catch (error) {\n    dispatch({\n      type: RESET_PASSWORD_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\n\n// profile section\nexport const updateProfile = (user, redirect) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: USER_UPDATE_REQUEST });\n\n        const config = {\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        };\n\n        const { data } = await axios.post('/users/profile', user, config);\n        redirect();\n        console.log(data);\n\n        dispatch({ type: USER_UPDATE_SUCCESS, payload: data });\n\n        dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n        dispatch(setUser(data));\n        // /users/adprofile\n\n        swal.fire('Profile updated successfully', '', 'success');\n\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message\n        });\n    }\n};\n\n// profile section\n\n\n","export const PASSWORD_RESET_LINK_REQUEST = \"PASSWORD_RESET_LINK_REQUEST\";\r\nexport const PASSWORD_RESET_LINK_SUCCESS = \"PASSWORD_RESET_LINK_SUCCESS\";\r\nexport const PASSWORD_RESET_LINK_FAIL = \"PASSWORD_RESET_LINK_FAIL\";\r\nexport const PASSWORD_RESET_LINK_RESET = \"PASSWORD_RESET_LINK_RESET\";\r\n\r\nexport const RESET_PASSWORD_REQUEST = \"RESET_PASSWORD_REQUEST\";\r\nexport const RESET_PASSWORD_SUCCESS = \"RESET_PASSWORD_SUCCESS\";\r\nexport const RESET_PASSWORD_FAIL = \"RESET_PASSWORD_FAIL\";\r\nexport const RESET_PASSWORD_RESET = \"RESET_PASSWORD_RESET\";\r\n\r\n\r\n//profile\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\n","export function convertSlugToUrl(slug, parameters) {\n    let url = slug;\n    Object.entries(parameters).forEach(([key, value]) => {\n        url = url.replace(`:${key}`, value);\n    });\n    return url;\n}\n","import React from 'react';\nimport { Row } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { IconLogo } from 'assets/icons';\n\nconst useStyles = createUseStyles((theme) => ({\n    container: {\n        marginLeft: 32,\n        marginRight: 32\n    },\n    title: {\n        ...theme.typography.cardTitle,\n        color: theme.color.grayishBlue,\n        opacity: 0.7,\n        marginLeft: 12\n    }\n}));\n\nfunction LogoComponent() {\n    const theme = useTheme();\n    const classes = useStyles({ theme });\n    return (\n        <Row className={classes.container} horizontal='center' vertical='center'>\n            <IconLogo />\n            <span className={classes.title}>OneSmarter HealthCare</span>\n        </Row>\n    );\n}\n\nexport default LogoComponent;\n","import React, { useState } from 'react';\nimport { useTheme } from 'react-jss';\nimport { slide as Menu } from 'react-burger-menu';\n\nconst getMenuStyles = ({ theme }) => ({\n    bmBurgerButton: {\n        position: 'absolute',\n        width: 26,\n        height: 20,\n        left: 30,\n        top: 40,\n        zIndex: 19\n    },\n    bmBurgerBars: {\n        background: theme.color.veryDarkGrayishBlue\n    },\n    bmBurgerBarsHover: {\n        background: theme.color.darkRed\n    },\n    bmCrossButton: {\n        display: 'none'\n    },\n    bmCross: {\n        background: theme.color.grayishBlue3\n    },\n    bmMenuWrap: {\n        position: 'fixed',\n        height: '100%',\n        width: 255,\n        zIndex: 30\n    },\n    bmMenu: {\n        background: theme.color.veryDarkGrayishBlue\n    },\n    bmItem: {\n        outline: 'none',\n        '&:focus': {\n            outline: 'none'\n        }\n    },\n    bmMorphShape: {\n        fill: theme.color.veryDarkGrayishBlue\n    },\n    bmOverlay: {\n        background: 'rgba(0, 0, 0, 0.3)',\n        zIndex: 20\n    }\n});\n\nfunction MenuComponent({ children, isMobile }) {\n    const theme = useTheme();\n    const menuStyles = getMenuStyles({ theme });\n    const [isOpen, setIsOpen] = useState(false);\n\n    return (\n        <Menu\n            isOpen={!isMobile || isOpen}\n            noOverlay={!isMobile}\n            disableCloseOnEsc\n            styles={menuStyles}\n            onStateChange={(state) => setIsOpen(state.isOpen)}\n        >\n            {children}\n        </Menu>\n    );\n}\n\nexport default MenuComponent;\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useScrollHeight } from 'react-collapsible-content';\n\nconst STATUS = {\n    COLLAPSED: 'COLLAPSED',\n    PRE_EXPANDED: 'PRE_EXPANDED',\n    EXPANDED: 'EXPANDED',\n    PRE_COLLAPSED: 'PRE_COLLAPSED'\n};\n\nfunction CollapsibleContent({\n    children,\n    expanded,\n    style,\n    transitionDuration,\n    transitionTimingFunction,\n    onTransitionStart,\n    onTransitionEnd,\n    ...others\n}) {\n    const contentContainerRef = useRef(null);\n    const [status, setStatus] = useState(expanded ? STATUS.EXPANDED : STATUS.COLLAPSED);\n    const { scrollHeight } = useScrollHeight(contentContainerRef, {\n        onTransitionStart,\n        onTransitionEnd\n    });\n    let transitionStyles;\n    switch (status) {\n        case STATUS.EXPANDED:\n            transitionStyles = { maxHeight: '100vh', transitionDuration: '.001s' };\n            break;\n        case STATUS.PRE_COLLAPSED:\n            transitionStyles = { maxHeight: scrollHeight, transitionDuration: '.001s' };\n            break;\n        case STATUS.PRE_EXPANDED:\n            transitionStyles = { maxHeight: scrollHeight };\n            break;\n        case STATUS.COLLAPSED:\n            transitionStyles = { maxHeight: 0 };\n            break;\n        default:\n            transitionStyles = { maxHeight: scrollHeight, transitionDuration: '.001s' };\n    }\n\n    useEffect(() => {\n        if (expanded) {\n            if (status === STATUS.COLLAPSED) {\n                setStatus(STATUS.PRE_EXPANDED);\n            } else if (status === STATUS.PRE_EXPANDED) {\n                setTimeout(() => setStatus(STATUS.EXPANDED), 800);\n            }\n        } else if (!expanded) {\n            if (status === STATUS.EXPANDED) {\n                setStatus(STATUS.PRE_COLLAPSED);\n            } else if (status === STATUS.PRE_COLLAPSED) {\n                setTimeout(() => setStatus(STATUS.COLLAPSED), 100);\n            }\n        }\n    }, [expanded, status]);\n\n    return (\n        <div\n            {...others}\n            style={{\n                overflow: 'hidden',\n                transitionProperty: 'max-height',\n                transitionTimingFunction,\n                transitionDuration,\n                ...transitionStyles,\n                ...style\n            }}\n            ref={contentContainerRef}\n        >\n            {children}\n        </div>\n    );\n}\n\nCollapsibleContent.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.element), PropTypes.element])\n        .isRequired,\n    expanded: PropTypes.bool,\n    onTransitionStart: PropTypes.func,\n    onTransitionEnd: PropTypes.func,\n    style: PropTypes.object,\n    transitionDuration: PropTypes.string,\n    transitionTimingFunction: PropTypes.string\n};\n\nCollapsibleContent.defaultProps = {\n    transitionDuration: '.425s',\n    transitionTimingFunction: 'ease-in-out'\n};\n\nexport default CollapsibleContent;\n","import React, { useState, useEffect, useContext, createContext } from 'react';\n\nexport const SidebarContext = createContext();\n\nexport function SidebarProvider({ children, defaultItem }) {\n    const [currentItem, setCurrentItem] = useState(defaultItem);\n    useEffect(() => {\n        if (defaultItem !== currentItem) {\n            return setCurrentItem(defaultItem);\n        }\n    }, [currentItem, defaultItem]);\n    return (\n        <SidebarContext.Provider value={{ currentItem, setCurrentItem }}>\n            {children}\n        </SidebarContext.Provider>\n    );\n}\n\nexport const useSidebar = ({ isCollapsible, item, items = [] } = {}) => {\n    const { currentItem, setCurrentItem } = useContext(SidebarContext);\n    const isActive = item === currentItem || items.includes(currentItem);\n    const [isExpanded, setIsExpanded] = useState(isActive);\n\n    useEffect(() => {\n        if (!isActive && isExpanded) {\n            return setIsExpanded(false);\n        }\n        if (isActive && !isExpanded) {\n            return setIsExpanded(true);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentItem]);\n\n    const onItemClick = () => {\n        if (!isCollapsible) {\n            setCurrentItem(item);\n        }\n        setIsExpanded((prev) => !prev);\n    };\n\n    return {\n        isExpanded,\n        isActive,\n        onItemClick\n    };\n};\n","import React from 'react';\nimport { any, arrayOf, func, string } from 'prop-types';\nimport { Column, Row } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport CollapsibleContent from 'components/collapsible/CollapsibleContent';\nimport { useSidebar } from 'hooks/useSidebar';\n\nconst useStyles = createUseStyles({\n    activeContainer: {\n        backgroundColor: ({ theme }) => theme.color.paleBlueTransparent\n    },\n    container: {\n        display: 'flex',\n        height: 56,\n        cursor: 'pointer',\n        '&:hover': {\n            backgroundColor: ({ theme }) => theme.color.paleBlueTransparent\n        },\n        paddingLeft: ({ level }) => 32 * level,\n        transition: 'all 0.2s ease-in-out'\n    },\n    leftBar: {\n        borderLeft: ({ theme, level }) =>\n            level > 1 ? 'none' : `3px solid ${theme.color.darkGrayishBlue}`\n    },\n    title: {\n        fontSize: 16,\n        lineHeight: '20px',\n        letterSpacing: '0.2px',\n        color: ({ theme, isActive }) => (isActive ? theme.color.paleBlue : theme.color.grayishBlue),\n        marginLeft: 24\n    }\n});\n\nfunction MenuItemComponent({ children, icon: Icon, id, items = [], level = 1, onClick, title }) {\n    const theme = useTheme();\n    const isCollapsible = children && children.length > 0;\n    const { isExpanded, isActive, onItemClick } = useSidebar({\n        isCollapsible,\n        item: id,\n        items\n    });\n    const classes = useStyles({ theme, level, isActive });\n    const classNameColumn = isActive ? classes.leftBar : '';\n    const classNameContainer = [classes.container, isActive && classes.activeContainer].join(' ');\n    const iconColor = isActive ? theme.color.paleBlue : theme.color.grayishBlue2;\n\n    function onItemClicked(e) {\n        if (onClick) {\n            onClick(e);\n        }\n        onItemClick();\n    }\n\n    return (\n        <Column key={id} className={classNameColumn}>\n            <Row vertical='center' onClick={onItemClicked} className={classNameContainer}>\n                <Icon fill={iconColor} opacity={!isActive && '0.4'} />\n                <span className={classes.title}>{title}</span>\n            </Row>\n            {isCollapsible && (\n                <CollapsibleContent expanded={isExpanded}>\n                    {children.map((child) => child.type({ ...child.props }))}\n                </CollapsibleContent>\n            )}\n        </Column>\n    );\n}\n\nMenuItemComponent.defaultProps = {};\n\nMenuItemComponent.propTypes = {\n    children: any,\n    icon: func,\n    id: string,\n    onClick: func,\n    items: arrayOf(string),\n    title: string\n};\n\nexport default MenuItemComponent;\n","import React from 'react';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { useHistory } from 'react-router-dom';\nimport SLUGS from 'resources/slugs';\nimport { useSelector } from 'react-redux';\n\n\n\nimport swal from 'sweetalert2';\nimport { connect } from 'react-redux';\nimport { startRemoveUser } from '../../actions/user';  \n\n\nimport {\n    IconAgents,\n    IconArticles,\n    IconContacts,\n    IconIdeas,\n    IconLogout,\n    IconOverview,\n    IconSettings,\n    IconSubscription,\n    IconTickets\n} from 'assets/icons';\nimport { convertSlugToUrl } from 'resources/utilities';\nimport LogoComponent from './LogoComponent';\nimport Menu from './MenuComponent';\nimport MenuItem from './MenuItemComponent';\n\nconst useStyles = createUseStyles({\n    separator: {\n        borderTop: ({ theme }) => `1px solid ${theme.color.lightGrayishBlue}`,\n        marginTop: 16,\n        marginBottom: 16,\n        opacity: 0.06\n    }\n});\n\nfunction SidebarComponent(props) {\n    const { push } = useHistory();\n    const theme = useTheme();\n    const classes = useStyles({ theme });\n    const isMobile = window.innerWidth <= 1080;\n      const user = useSelector((state) => state.user);\n    //   console.log(user);\n\n\n     async function logout() {\n         swal.fire({\n             title: 'Are you sure to log out?',\n             icon: 'warning',\n             buttons: true,\n             dangerMode: true\n         }).then((confirmLogout) => {\n             if (confirmLogout) {\n                 props.dispatch(startRemoveUser());\n                 swal.fire('Successfully Logged out', { icon: 'success' });\n                 push(SLUGS.login);\n             }\n         });\n     }\n\n    function onClick(slug, parameters = {}) {\n        push(convertSlugToUrl(slug, parameters));\n    }\n\n    return (\n        <Menu isMobile={isMobile}>\n            <div style={{ paddingTop: 30, paddingBottom: 30 }}>\n                <LogoComponent />\n            </div>\n            {user.role === 1 && (\n                <MenuItem\n                    id={SLUGS.dashboard}\n                    title='Dashboard'\n                    icon={IconSubscription}\n                    onClick={() => onClick(SLUGS.admindashboard)}\n                />\n            )}\n            {user.role === 2 && (\n                <MenuItem\n                    id={SLUGS.dashboard}\n                    title='Dashboard'\n                    icon={IconSubscription}\n                    onClick={() => onClick(SLUGS.subadmindashboard)}\n                />\n            )}\n            {user.role === 3 && (\n                <MenuItem\n                    id={SLUGS.dashboard}\n                    title='Dashboard'\n                    icon={IconSubscription}\n                    onClick={() => onClick(SLUGS.docdashboard)}\n                />\n            )}\n            {user.role === 4 && (\n                <MenuItem\n                    id={SLUGS.dashboard}\n                    title='Dashboard'\n                    icon={IconSubscription}\n                    onClick={() => onClick(SLUGS.patdashboard)}\n                />\n            )}\n            {user.role === 1 && (\n                <MenuItem\n                    id={SLUGS.overview}\n                    items={[SLUGS.overviewTwo, SLUGS.overviewThree]}\n                    title='Overview'\n                    icon={IconOverview}\n                >\n                    <MenuItem\n                        id={SLUGS.overview}\n                        title='Customers'\n                        level={2}\n                        icon={IconAgents}\n                        onClick={() => onClick(SLUGS.CustomersList)}\n                    />\n\n                    <MenuItem\n                        id={SLUGS.overviewTwo}\n                        title='Employees'\n                        level={2}\n                        icon={IconContacts}\n                        onClick={() => onClick(SLUGS.EmployeesList)}\n                    />\n\n                    <MenuItem\n                        id={SLUGS.overviewThree}\n                        title='Departments'\n                        level={2}\n                        icon={IconArticles}\n                        onClick={() => onClick(SLUGS.DepartmentsList)}\n                    />\n                </MenuItem>\n            )}\n\n            {user.role==1 && (\n                <MenuItem\n                id={SLUGS.tickets}\n                title='Tickets'\n                icon={IconTickets}\n                onClick={() => onClick(SLUGS.TicketsList)}\n            />\n            )}\n\n          {user.role==3 && (\n                <MenuItem\n                id={SLUGS.tickets}\n                title='Tickets'\n                icon={IconTickets}\n                onClick={() => onClick(SLUGS.docTicketsList)}\n            />\n            )}\n\n\n\n            {user.role==4 && (\n                <MenuItem\n                id={SLUGS.tickets}\n                title='Tickets'\n                icon={IconTickets}\n                onClick={() => onClick(SLUGS.patTicketsList)} \n            />\n            )}\n            {user.role==2 && (\n                <MenuItem\n                id={SLUGS.tickets}\n                title='Tickets'\n                icon={IconTickets}\n                onClick={() => onClick(SLUGS.subTicketsList)} \n            />\n            )}\n            \n               \n            {(user.role === 1) && (\n                <MenuItem\n                    id={SLUGS.DoctorsList}\n                    title='Doctors'\n                    icon={IconSubscription}\n                    onClick={() => onClick(SLUGS.DoctorsList)}\n                />\n            )}\n\n           {(user.role === 2) && (\n                <MenuItem\n                    id={SLUGS.SubDoctorsList}\n                    title='Doctors'\n                    icon={IconSubscription}\n                    onClick={() => onClick(SLUGS.SubDoctorsList)}\n                />\n            )}\n \n               {user.role==2 && (<MenuItem\n                        id={SLUGS.customers}\n                        title='Customers'\n                        icon={IconAgents}\n                        onClick={() => onClick(SLUGS.subcustomers)}\n                    />)}\n\n            <MenuItem\n                id={SLUGS.ideas}\n                items={[SLUGS.ideasTwo, SLUGS.ideasThree]}\n                title='Ideas'\n                icon={IconIdeas}\n            >\n                <MenuItem\n                    id={SLUGS.ideas}\n                    title='Sub Item 1'\n                    level={2}\n                    icon={IconAgents}\n                    onClick={() => onClick(SLUGS.ideas)}\n                />\n                <MenuItem\n                    id={SLUGS.ideasTwo}\n                    title='Sub Item 2'\n                    level={2}\n                    icon={IconContacts}\n                    onClick={() => onClick(SLUGS.ideasTwo)}\n                />\n                <MenuItem\n                    id={SLUGS.ideasThree}\n                    title='Sub Item 3'\n                    level={2}\n                    icon={IconArticles}\n                    onClick={() => onClick(SLUGS.ideasThree)}\n                />\n            </MenuItem>\n            {/* <MenuItem\n                id={SLUGS.SubReports}\n                title='Reports'\n                icon={IconContacts}\n                onClick={() => onClick(SLUGS.Reports)}\n            /> */}\n\n            {(user.role==2 || user.role==1) && (<MenuItem\n                id={SLUGS.SubReports}\n                title='Reports'\n                icon={IconContacts}\n                onClick={() => onClick(SLUGS.SubReports)}\n            />)}\n            <MenuItem\n                id={SLUGS.agents}\n                title='Payments' \n                icon={IconAgents}\n                onClick={() => onClick(SLUGS.agents)}\n            />\n            <MenuItem\n                id={SLUGS.articles}\n                title='Articles'\n                icon={IconArticles}\n                onClick={() => onClick(SLUGS.articles)}\n            />\n            <div className={classes.separator}></div>\n\n            {user.role === 1 && (\n                <MenuItem\n                    id={SLUGS.settings}\n                    title='Settings'\n                    icon={IconSettings}\n                    onClick={() => onClick(SLUGS.adprofile)}\n                />\n            )}\n            {user.role === 2 && (\n                <MenuItem\n                    id={SLUGS.settings}\n                    title='Settings'\n                    icon={IconSettings}\n                    onClick={() => onClick(SLUGS.subprofile)}\n                />\n            )}\n            {user.role === 3 && (\n                <MenuItem\n                    id={SLUGS.settings}\n                    title='Settings'\n                    icon={IconSettings}\n                    onClick={() => onClick(SLUGS.docprofile)}\n                />\n            )}\n            {user.role === 4 && (\n                <MenuItem\n                    id={SLUGS.settings}\n                    title='Settings'\n                    icon={IconSettings}\n                    onClick={() => onClick(SLUGS.patprofile)}\n                />\n            )}\n            {/* subprofile */}\n            <MenuItem id='logout' title='Logout' icon={IconLogout} onClick={logout} />\n        </Menu>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        user: state.user\n    };\n};\n\nexport default connect(mapStateToProps)(SidebarComponent);","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { SidebarProvider } from 'hooks/useSidebar';\n\nfunction SidebarContext({ children }) {\n    const { pathname } = useLocation();\n    return <SidebarProvider defaultItem={pathname}>{children}</SidebarProvider>;\n}\nexport default SidebarContext;\n","import React, { useState } from 'react';\nimport { arrayOf, element, func, number, oneOfType, shape, string } from 'prop-types';\nimport { Column } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { IconArrowUp } from 'assets/icons';\n\nconst useStyles = createUseStyles((theme) => ({\n    arrowContainer: {\n        position: 'absolute',\n        top: -19,\n        right: 15\n    },\n    dropdownButton: {\n        alignItems: 'center',\n        background: 'transparent',\n        border: 'none',\n        cursor: 'pointer',\n        display: 'flex',\n        padding: 0,\n        outline: 'none'\n    },\n    dropdownContainer: {\n        position: 'relative'\n    },\n    dropdownItemsContainer: {\n        background: 'white',\n        border: `1px solid ${theme.color.lightGrayishBlue2}`,\n        borderRadius: 5,\n        minWidth: 170,\n        padding: 0,\n        position: 'absolute',\n        width: '100%',\n        top: ({ position }) => position.top,\n        right: ({ position }) => position.right,\n        bottom: ({ position }) => position.bottom,\n        left: ({ position }) => position.left,\n        '& button:first-of-type:hover div > svg > path': {\n            fill: theme.color.paleBlue\n        }\n    },\n    dropdownItem: {\n        cursor: 'pointer',\n        background: 'transparent',\n        border: 'none',\n        fontSize: 16,\n        outline: 'none',\n        padding: '10px 10px',\n        '&:hover': {\n            background: theme.color.paleBlue\n        },\n        '&:after': {\n            content: '\" \"',\n            display: 'block',\n            position: 'relative',\n            bottom: -10,\n            width: '100%',\n            height: 1,\n            background: theme.color.paleBlue\n        },\n        '&:last-child:after': {\n            content: '',\n            display: 'none'\n        }\n    }\n}));\n\nfunction DropdownComponent({ label, options, position }) {\n    const [userMenuOpen, setUserMenuOpen] = useState(false);\n    const theme = useTheme();\n    const classes = useStyles({ theme, position });\n\n    function onDropdownClick() {\n        setUserMenuOpen((prev) => !prev);\n    }\n\n    function onItemClick(onClick) {\n        setUserMenuOpen(false);\n        onClick && onClick();\n    }\n\n    return (\n        <Column className={classes.dropdownContainer}>\n            <button className={classes.dropdownButton} onClick={onDropdownClick}>\n                {label}\n            </button>\n            {userMenuOpen && (\n                <Column className={classes.dropdownItemsContainer}>\n                    {options.map((option, index) => (\n                        <button\n                            key={`option-${index}`}\n                            className={classes.dropdownItem}\n                            onClick={() => onItemClick(option.onClick)}\n                        >\n                            {option.label}\n                            {index === 0 && (\n                                <div className={classes.arrowContainer}>\n                                    <IconArrowUp />\n                                </div>\n                            )}\n                        </button>\n                    ))}\n                </Column>\n            )}\n        </Column>\n    );\n}\n\nDropdownComponent.propTypes = {\n    label: oneOfType([string, element]),\n    options: arrayOf(\n        shape({\n            label: oneOfType([string, arrayOf(element)]),\n            onClick: func\n        })\n    ),\n    position: shape({\n        top: number,\n        right: number,\n        bottom: number,\n        left: number\n    })\n};\n\nDropdownComponent.defaultProps = {\n    position: {\n        top: 52,\n        right: -6\n    }\n};\n\nexport default DropdownComponent;\n","import DropdownComponent from './DropdownComponent';\n\nexport default DropdownComponent;\n","import React, { useContext } from 'react';\nimport { string } from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { Row } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { SidebarContext } from 'hooks/useSidebar';\nimport { useSelector,useDispatch } from 'react-redux';\nimport SLUGS from 'resources/slugs';\nimport { IconBell, IconSearch } from 'assets/icons';\nimport DropdownComponent from 'components/dropdown';\nimport swal from 'sweetalert2';\nimport { startRemoveUser } from '../../actions/user';\n\n\n\nimport Avata from \"./avatar.png\"\n\nconst useStyles = createUseStyles((theme) => ({\n    avatar: {\n        height: 35,\n        width: 35,\n        minWidth: 35,\n        borderRadius: 50,\n        marginLeft: 14,\n        border: `1px solid ${theme.color.lightGrayishBlue2}`,\n        '@media (max-width: 768px)': {\n            marginLeft: 14\n        }\n    },\n    container: {\n        height: 40\n    },\n    name: {\n        ...theme.typography.itemTitle,\n        textAlign: 'right',\n        '@media (max-width: 768px)': {\n            display: 'none'\n        }\n    },\n    separator: {\n        borderLeft: `1px solid ${theme.color.lightGrayishBlue2}`,\n        marginLeft: 32,\n        marginRight: 32,\n        height: 32,\n        width: 2,\n        '@media (max-width: 768px)': {\n            marginLeft: 14,\n            marginRight: 0\n        }\n    },\n    title: {\n        ...theme.typography.title,\n        '@media (max-width: 1080px)': {\n            marginLeft: 50\n        },\n        '@media (max-width: 468px)': {\n            fontSize: 20\n        }\n    },\n    iconStyles: {\n        cursor: 'pointer',\n        marginLeft: 25,\n        '@media (max-width: 768px)': {\n            marginLeft: 12\n        }\n    }\n}));\n\nfunction HeaderComponent(props) {\n    const { push } = useHistory();\n    const { currentItem } = useContext(SidebarContext);\n    const theme = useTheme();\n    const classes = useStyles({ theme });\n    const dispatch = useDispatch()\n    const user = useSelector((state) => state.user);\n\n\n     async function logout() {\n         swal.fire({\n             title: 'Are you sure to log out?',\n             icon: 'warning',\n             buttons: true,\n             dangerMode: true\n         }).then((confirmLogout) => {\n             if (confirmLogout) {\n                 dispatch(startRemoveUser());\n                 swal.fire('Successfully Logged out', { icon: 'success' });\n                 push(SLUGS.login);\n             }\n         });\n     }\n\n\n    let title;\n    switch (true) {\n        case currentItem === SLUGS.admindashboard:\n            title = 'Dashboard';\n            break;\n        case [SLUGS.CustomersList, SLUGS.EmployeesList, SLUGS.DepartmentsList].includes(\n            currentItem\n        ):\n            title = 'Overview';\n            break;\n        case currentItem === SLUGS.tickets:\n            title = 'Tickets';\n            break;\n        case [SLUGS.ideas, SLUGS.ideasTwo, SLUGS.ideasThree].includes(currentItem):\n            title = 'Ideas';\n            break;\n        case currentItem === SLUGS.contacts:\n            title = 'Contacts';\n            break;\n        case currentItem === SLUGS.agents:\n            title = 'Agents';\n            break;\n        case currentItem === SLUGS.articles:\n            title = 'Articles';\n            break;\n        case currentItem === SLUGS.DoctorsList:\n            title = 'Doctors';\n            break;\n        case currentItem === SLUGS.settings:\n            title = 'Settings';\n            break;\n        default:\n            title = '';\n    }\n\n    function onSettingsClick() {\n        if (user.role === 1) {\n            push(SLUGS.adprofile);\n        } else if (user.role === 2) {\n            push(SLUGS.subprofile);\n        } else if (user.role === 3) {\n            push(SLUGS.docprofile);\n        } else if (user.role === 4) {\n            push(SLUGS.patprofile);\n        }\n    }\n\n    return (\n        <Row className={classes.container} vertical='center' horizontal='space-between'>\n            <span className={classes.title}>{title}</span>\n            <Row vertical='center'>\n                <div className={classes.iconStyles}>\n                    <IconSearch />\n                </div>\n                <div className={classes.iconStyles}>\n                    <DropdownComponent\n                        label={<IconBell />}\n                        options={[\n                            {\n                                label: 'Notification #1',\n                                onClick: () => console.log('Notification #1')\n                            },\n                            {\n                                label: 'Notification #2',\n                                onClick: () => console.log('Notification #2')\n                            },\n                            {\n                                label: 'Notification #3',\n                                onClick: () => console.log('Notification #3')\n                            },\n                            {\n                                label: 'Notification #4',\n                                onClick: () => console.log('Notification #4')\n                            }\n                        ]}\n                        position={{\n                            top: 42,\n                            right: -14\n                        }}\n                    />\n                </div>\n                <div className={classes.separator}></div>\n                <DropdownComponent\n                    label={\n                        <>\n                            <span className={classes.name}>Welcome {user.username}</span>\n                            <img src={user.pic} alt='avatar' className={classes.avatar} />\n                        </>\n                    }\n                    options={[\n                        {\n                            label: 'Profile',\n                            onClick: onSettingsClick\n                        },\n                        {\n                            label: 'Logout',\n                            onClick: () => logout()\n                        }\n                    ]}\n                    position={{\n                        top: 52,\n                        right: -6\n                    }}\n                />\n            </Row>\n        </Row>\n    );\n}\n\nHeaderComponent.propTypes = {\n    title: string\n};\n\nexport default HeaderComponent;\n","import React from 'react';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { Column } from 'simple-flexbox';\n\nconst useStyles = createUseStyles({\n    '@keyframes loadingSpin': {\n        from: { transform: 'rotate(0deg)' },\n        to: { transform: 'rotate(360deg)' }\n    },\n    container: {\n        backgroundColor: ({ theme, noTransparency, backgroundColor }) => {\n            if (backgroundColor) {\n                return noTransparency ? backgroundColor : `${backgroundColor}A0`;\n            }\n            return noTransparency\n                ? theme.color.veryDarkGrayishBlue\n                : `${theme.color.veryDarkGrayishBlue}A0`;\n        },\n        height: '100%',\n        minHeight: ({ fullScreen }) => (fullScreen ? '100vh' : '100%'),\n        width: ({ fullScreen }) => (fullScreen ? '100vw' : '100%'),\n        position: ({ fullScreen }) => (fullScreen ? 'fixed' : 'relative'),\n        top: 0,\n        left: 0,\n        zIndex: ({ zIndex }) => zIndex\n    },\n    loading: {\n        border: ({ theme }) => `16px solid ${theme.color.lightGrayishBlue}`,\n        borderRadius: '50%',\n        borderTop: ({ theme }) => `16px solid ${theme.color.brightBlue}`,\n        width: 120,\n        height: 120,\n        animationName: '$loadingSpin',\n        animationTimingFunction: 'linear',\n        animationDuration: '2s',\n        animationIterationCount: 'infinite'\n    },\n    loadingSpan: {\n        color: 'white',\n        marginTop: 10,\n        fontSize: 18\n    }\n});\n\nfunction LoadingComponent({\n    backgroundColor,\n    children,\n    fullScreen,\n    height,\n    hideText,\n    loading,\n    noTransparency,\n    width,\n    zIndex\n}) {\n    const theme = useTheme();\n    const classes = useStyles({ theme, fullScreen, noTransparency, backgroundColor, zIndex });\n    return (\n        <div style={{ position: 'relative', height, width }}>\n            {loading && (\n                <Column className={classes.container} horizontal='center' vertical='center'>\n                    <div className={classes.loading}></div>\n                    {!hideText && <span className={classes.loadingSpan}>Loading...</span>}\n                </Column>\n            )}\n            {children || <div />}\n        </div>\n    );\n}\n\nLoadingComponent.defaultProps = {\n    fullScreen: true,\n    zIndex: 10\n};\n\nexport default LoadingComponent;\n","import LoadingComponent from './LoadingComponent';\n\nexport default LoadingComponent;\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => {\r\n\r\n    const user = useSelector(state=>state.user)\r\n    // console.log(user);\r\n\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                user && user.role===1 ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: '/login',\r\n                            state: { from: props.location }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default AdminRoute;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst DoctorRoute = ({ component: Component, ...rest }) => {\r\n    const user = useSelector((state) => state.user);\r\n    console.log(user);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                user && user.role === 3 ? ( \r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: '/users/login',\r\n                            state: { from: props.location }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default DoctorRoute;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst PatientRoute = ({ component: Component, ...rest }) => {\r\n    const user = useSelector((state) => state.user);\r\n    // console.log(user);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                user && user.role === 4 ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: '/users/login',\r\n                            state: { from: props.location }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PatientRoute;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n// import SLUGS from \"../../resources/slugs\";\r\n\r\nconst SubAdminRoute = ({ component: Component, ...rest }) => { \r\n    const user = useSelector((state) => state.user);\r\n    console.log(user);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                user && user.role === 2 ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: '/login',\r\n                            state: { from: props.location }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default SubAdminRoute;\r\n","import axios from '../config/axios'\n\nimport swal from 'sweetalert2'\n//import {updateTicketCustomer} from '../actions/tickets'\n\nexport const setCustomers = (customer) => {\n    return {\n        type: 'SET_CUSTOMERS',\n        payload : customer\n    }\n}\n\nexport const setSubCustomers = (customer) => {\n    return {\n        type: 'SET_SUB_CUSTOMERS',\n        payload : customer\n    }\n}\n\n\nexport const startSetCustomers = () => {\n    return (dispatch) => {\n        axios.get('/customers',{\n                    headers: {\n                        'x-auth': localStorage.getItem('authToken')\n                    }\n                })\n            .then(response=>{\n                const customers = response.data\n                dispatch(setCustomers(customers))\n            })\n            .catch(err=>{\n                console.log(err)\n            })\n\n    }\n}\n\nexport const removeCustomer = (customer) => {\n    return {\n        type: 'REMOVE_CUSTOMER',\n        payload: customer\n    }\n}\n\nexport const startRemoveCustomer = (id) => {\n    return (dispatch) => {\n        axios.delete(`/customers/${id}`,{\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then(response=>{\n            const customer = response.data\n            console.log(\"Inside start remove\",customer)\n            dispatch(removeCustomer(customer))\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n}\nexport const addCustomer = (customer) => {\n    return {\n        type: 'ADD_CUSTOMER',\n        payload: customer\n    }\n}\n\nexport const startAddCustomer = (customer,redirect) => {\n    return (dispatch) => {\n        axios.post('/customers',customer,{\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then(response=>{\n            if(response.data.hasOwnProperty('errors')){\n                swal.fire(`${response.data.message}`,\"\",\"error\")\n            } else {\n                const customer = response.data\n                redirect()\n                dispatch(addCustomer(customer))\n            }\n        })\n    }\n}\n\nexport const editCustomer = (customer) => {\n    return {\n        type: 'EDIT_CUSTOMER',\n        payload: customer\n    }\n}\n\nexport const startEditCustomer = (customer,id,redirect) => { \n    return(dispatch) => {\n        axios.put(`/customers/${id}`,customer,{\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then(response => {\n            console.log(response.data)\n            if (response.data.errors) {\n                swal.fire(`${response.data.message}`,\"\",\"error\")\n            } else {\n                const customer = response.data\n                redirect()\n                dispatch(editCustomer(customer))\n                window.location.reload()\n                //dispatch(updateTicketCustomer(customer))\n            }\n        })\n    }\n}\n\n\n\nexport const startSetCustomersForSubadmins=()=>{\n    return (dispatch) => {\n        axios.get('/subcustomers',{\n                    headers: {\n                        'x-auth': localStorage.getItem('authToken')\n                    }\n                })\n            .then(response=>{\n                const customers = response.data\n                dispatch(setSubCustomers(customers))\n            })\n            .catch(err=>{\n                console.log(err)\n            })\n\n    }\n}","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport {connect} from 'react-redux'\n\nimport { Table,Button } from 'reactstrap'\n\nimport swal from 'sweetalert2'\n\n// import {startRemoveCustomer} from '../../actions/customers'\nimport {startRemoveCustomer} from '../../../actions/customers'\n\nclass CustomersList extends React.Component {\n\n    handleRemove = (id) => {\n        console.log(this.props.ticket)\n        var flag = 0;\n        this.props.ticket.map(tick=>{\n            if(tick.customer._id===id)\n            {\n              flag=1;\n\n            }\n            return tick;\n        })\n       if(flag===0){\n         swal.fire({\n             title: \"Are you want to Delete?\",\n             icon: \"warning\",\n             buttons: true,\n             dangerMode: true,\n           })\n           .then((confirmRemove) => {\n             if (confirmRemove) {\n                 swal.fire(\n                     '',\n                     'You deleted successfully!',\n                     'success'\n                   )\n               this.props.dispatch(startRemoveCustomer(id))\n             }\n           })\n       }\n       else{\n         alert(\"cant delete customer, please delete all tickets of this customer first \")\n         flag=0\n       }\n\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <h2>Customers - {this.props.customers.length}</h2>\n\n                <Table striped>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Mobile</th>\n                            <th>Actions</th>\n                            <th>Remove</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.customers.map((customer,index)=>{\n                            return (\n                                <tr key ={customer._id}>\n                                    <td>{index+1}</td>\n                                    <td>{customer.name}</td>\n                                    <td>{customer.email}</td>\n                                    <td>{customer.mobile}</td>\n                                    <td>\n                                        <Link to={`/customers/${customer._id}`}>\n                                        <Button color=\"info\">show</Button></Link>\n                                        </td>\n                                    <td>\n                                        <Button color=\"danger\" onClick={()=>{\n                                            this.handleRemove(customer._id)\n                                            }}>remove</Button></td>\n\n                                </tr>\n                            )\n\n                        })}\n                    </tbody>\n\n                </Table>\n\n                <Link to=\"customers/new\" className=\"btn btn-primary\">Add Customer</Link>\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n      customers: state.customers,\n      ticket: state.tickets,\n    };\n}\n\nexport default connect(mapStateToProps)(CustomersList)","import React from 'react'\nimport { Button, Form, FormGroup, Label, Input} from 'reactstrap'\n\n\nclass CustomerForm extends React.Component { \n    constructor(props) {\n        console.log('form customer constructor')\n        super(props) \n        this.state = {\n            name: props.customer?props.customer.name : '',\n            email: props.customer?props.customer.email : '', \n            mobile: props.customer?props.customer.mobile : ''\n           \n        }\n      \n    }\n    \n\n    handleChange = (e) =>{\n        this.setState({ \n            [e.target.name] : e.target.value \n        })\n    }\n\n    \n    handleSubmit  = (e) => {\n        e.preventDefault()\n        const formData = {\n            name : this.state.name,\n            email : this.state.email,\n            mobile : this.state.mobile\n        }\n        console.log(formData)\n        this.props.handleSubmit(formData)\n    }\n    render() {\n        console.log('form customer render')\n        return (\n            <div> \n                <Form onSubmit={this.handleSubmit}> \n                    <FormGroup>\n                        <Label htmlFor=\"name\">Name</Label>\n                        <Input type=\"text\" id=\"name\" value={this.state.name} onChange={this.handleChange} name=\"name\" /> \n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label htmlFor=\"email\">Email</Label>\n                        <Input type=\"text\"  id=\"email\" value={this.state.email} onChange={this.handleChange} name=\"email\" />\n                    </FormGroup>\n​\n                    <FormGroup>\n                        <Label htmlFor=\"mobile\">Mobile</Label>\n                        <Input type=\"text\" value={this.state.mobile} onChange={this.handleChange} name=\"mobile\" />\n                    </FormGroup>\n​\n                    <Button type=\"submit\" value=\"submit\" >Submit</Button>\n                </Form> \n            </div>\n        )\n    }\n}\n\nexport default CustomerForm ","import React from 'react'\nimport CustomerForm from './Form'\n\nimport {connect} from 'react-redux'\n// import { startAddCustomer } from '../../actions/customers'\nimport { startAddCustomer } from '../../../actions/customers'\n\n\nclass CustomerNew extends React.Component {\n    handleSubmit = (customer) => {\n\n        const redirect = () => this.props.history.push('/customers')\n        this.props.dispatch(startAddCustomer(customer,redirect))\n    }\n\n    render(){\n        return (\n            <div>\n                <h2>Add Customer</h2>\n                <CustomerForm handleSubmit={this.handleSubmit}/>\n            </div>\n        )\n    }\n}\n\nexport default connect()(CustomerNew)","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport axios from '../../../config/axios'\n\nimport {connect} from 'react-redux'\nimport {Card, Button, CardText, CardBody, Col, Row,\n    CardTitle, Container } from 'reactstrap'\n\n\n\nclass CustomerShow extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            tickets: []\n        }\n    }\n\n    componentDidMount(){\n        const id = this.props.match.params.id\n        axios.get(`/customers/${id}`,{\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then(response=>{\n\n            this.setState({tickets:response.data.tickets})\n\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n    findCustomer =  (id) => {\n        return this.props.customers.find(customer => customer._id === id )\n    }\n\n    findDepartment = (id) => {\n        return this.props.departments.find(department => department._id === id)\n    }\n\n    findEmployees = (id) => {\n        return this.props.employees.find(employee => employee._id === id)\n    }\n\n    render(){\n        return(\n            <div className=\"mt-3\">\n                {this.props.customer && (\n                    <Row>\n                    <Col md=\"9\">\n                         <h3>{this.props.customer.name} - {this.props.customer.email}</h3>\n                    </Col>\n                    <Col md= \"3\">\n                        <Link to={`/customers/edit/${this.props.customer._id}`}> <h3>Edit Details</h3> </Link>\n                    </Col>\n\n                    </Row>\n                )}\n                <Container>\n                    <Row><Col><h6>Customer Tickets-{this.state.tickets.length}</h6></Col></Row>\n                    <Row>\n                        {\n                            this.state.tickets.map(ticket=>{\n                                console.log(ticket)\n                                return (\n                                    <Col md=\"3\"className=\"mb-1\" key={ticket._id}>\n                                        <Card>\n                                            <CardTitle className=\"text-center\">{ticket.code}</CardTitle>\n                                            <CardBody>\n                                                <CardText>Message : {ticket.message}</CardText>\n                                                <CardText> Ticket Status: {ticket.isResolved?<span style={{color:\"green\"}}>Resolved</span>:<span style={{color:\"red\"}}>Pending</span>}</CardText>\n                                                <Link to={`/tickets/${ticket._id}`}><Button color=\"primary\">View Tickets</Button></Link>\n                                            </CardBody>\n                                        </Card>\n                                    </Col>\n\n                                )\n\n                            })\n                        }\n\n                    </Row>\n\n\n                </Container>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    return {\n        customer: state.customers.find(customer=> customer._id === id),\n        customers : state.customers,\n        departments: state.departments,\n        employees: state.employees\n    }\n}\n\nexport default connect(mapStateToProps)(CustomerShow)","import React from 'react'\nimport CustomerForm from './Form'\n\nimport {connect} from 'react-redux'\n// import { startEditCustomer } from '../../actions/customers'\nimport { startEditCustomer } from '../../../actions/customers'\n\n class CustomerEdit extends React.Component{\n\n    handleSubmit = (customer) => {\n        const id = this.props.match.params.id\n        const redirect = () => this.props.history.push(`/customers/${id}`)\n        this.props.dispatch(startEditCustomer(customer,id,redirect))\n    }\n    render(){\n        return (\n            <div>\n                {this.props.customer && (\n                    <div>\n                    <h2>Edit Customer</h2>\n                     {this.props.customer.name && <CustomerForm customer = {this.props.customer} handleSubmit = {this.handleSubmit} />}\n                    </div>\n                )}\n\n            </div>\n        )}\n}\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    return {\n        customer: state.customers.find(customer=>customer._id === id)\n    }\n}\n\nexport default connect(mapStateToProps)(CustomerEdit)","import React from 'react'\nimport { Button, Form, FormGroup, Label } from 'reactstrap'\n\n\n\nclass DepartmentForm extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            name: props.department ? props.department.name : '' \n        }\n\n    }\n\n    handleChange =(e)=>{\n        const name = e.target.value\n        this.setState({name})\n    }\n    handleSubmit = (e)=>{\n        e.preventDefault()\n        const formData = {\n            name:this.state.name\n        }\n        this.props.handleSubmit(formData)\n        this.setState({name:''})\n    }\n\n    render(){\n        return (\n            <div>\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label htmlFor=\"text\"></Label>\n                        <input type=\"text\" id=\"text\" value={this.state.name} onChange={this.handleChange}/>\n                    </FormGroup>\n                    <Button type=\"submit\" value=\"add\">Add</Button>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default DepartmentForm","import axios from '../config/axios'\n\n\nimport swal from 'sweetalert2'\n\nexport const setEmployees = (employee) => {\n    return {\n        type: 'SET_EMPLOYEES',\n        payload: employee\n    }\n}\n\nexport const startSetEmployees = () => {\n    return (dispatch) => {\n        axios.get('/employees',{\n                    headers: {\n                        'x-auth': localStorage.getItem('authToken')\n                    }\n                })\n            .then(response=>{\n                const employees = response.data\n                dispatch(setEmployees(employees))\n            })\n            .catch(err=>{\n                console.log(err)\n            })\n\n    }\n}\n\nexport const removeEmployee = (employee) => {\n    return {\n        type: 'REMOVE_EMPLOYEE',\n        payload: employee\n    }\n}\n\nexport const startRemoveEmployee = (id) => {\n    return (dispatch) => {\n        axios.delete(`/employees/${id}`,{\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then(response=>{\n            const employee = response.data\n            dispatch(removeEmployee(employee))\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n}\n\nexport const addEmployee = (employee) => {\n    return {\n        type: 'ADD_EMPLOYEE',\n        payload: employee\n    }\n}\n\nexport const startAddEmployee = (employee,redirect) => {\n    return (dispatch) => {\n        axios.post('/employees',employee,{\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then(response=>{\n            if(response.data.errors){\n                swal.fire(`${response.data.message}`,\"\",\"error\")\n            } else {\n                const employee = response.data\n                redirect()\n                dispatch(addEmployee(employee))\n            }\n        })\n    }\n}\n\nexport const editEmployee = (employee) => {\n    return {\n        type: 'EDIT_EMPLOYEE',\n        payload: employee\n    }\n}\n\nexport const startEditEmployee = (employee,redirect) => {\n    console.log(employee)\n    return(dispatch) => {\n        axios.put(`/employees/${employee.id}`,employee,{\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then(response => {\n            console.log(response.data)\n            if (response.data.errors) {\n                swal.fire(`${response.data.message}`,\"\",\"error\")\n            } else {\n                const employee = response.data\n                redirect()\n                dispatch(editEmployee(employee))\n                window.location.reload()\n                // dispatch(updateTicketEmployee(employee))\n            }\n        })\n    }\n}\n\nexport const updateEmployeeDepartment = (department) => {\n    return {\n        type: 'UPDATE_EMPLOYEE_DEPARTMENT',\n        payload: department\n    }\n}","import axios from '../config/axios'\n\nimport swal from 'sweetalert2'\n\nexport const setTickets = (ticket) => {\n    return {\n        type: 'SET_TICKETS',\n        payload: ticket\n    }\n}\n\n\nexport const startSetTickets = (role, email) => {\n    return (dispatch) => {\n        if (role == 1) {\n            axios.get('/tickets', {\n                headers: {\n                    'x-auth': localStorage.getItem('authToken')\n                }\n            })\n                .then(response => {\n                    const tickets = response.data\n                    dispatch(setTickets(tickets))\n                })\n                .catch(err => {\n                    console.log(err)\n                })\n        }\n        else\n            if (role == 4) {\n                axios.get('/pattickets', {\n                    headers: {\n                        'x-auth': localStorage.getItem('authToken')\n                    }\n                })\n                    .then(response => {\n                        //  console.log(response.data);\n                        const tickets = response.data.filter(item => {\n\n                            return item.customer.email == email;\n                        })\n                        //  console.log(tickets);\n\n\n                        dispatch(setTickets(tickets))\n                    })\n                    .catch(err => {\n                        console.log(err)\n                    })\n            }\n\n            // test\n            else\n                if (role == 3) {\n                    axios.get('/doctickets', {\n                        headers: {\n                            'x-auth': localStorage.getItem('authToken')\n                        }\n                    })\n                        .then(response => {\n                             console.log(response.data);\n                             var arrm = [];\n                            const tickets = response.data.filter(item => {\n                                item.doctors.map(it=>{\n                                    if(it.email==email)\n                                    {\n                                        arrm.push(item);\n                                    }\n                                });\n                                return item;\n                            })\n\n                             console.log(tickets);\n                             console.log(arrm);\n\n\n                            dispatch(setTickets(arrm))\n                        })\n                        .catch(err => {\n                            console.log(err)\n                        })\n                }\n                else\n                if(role==2)\n                {\n                    axios.get('/subadtickets', {\n                        headers: {\n                            'x-auth': localStorage.getItem('authToken')\n                        }\n                    })\n                        .then(response => {\n                            const tickets = response.data\n                            dispatch(setTickets(tickets))\n                        })\n                        .catch(err => {\n                            console.log(err)\n                        })\n                }\n        // test\n\n\n\n    }\n}\n\n// ekkkenbkn\n\n// ekkkenbkn\n\n\n\n\n\nexport const removeTicket = (ticket) => {\n    return {\n        type: 'REMOVE_TICKET',\n        payload: ticket\n    }\n}\n\nexport const startRemoveTicket = (id) => {\n    return (dispatch) => {\n        axios.delete(`/tickets/${id}`, {\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n            .then(response => {\n                const ticket = response.data\n                dispatch(removeTicket(ticket))\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    }\n}\n\nexport const addTicket = (ticket) => {\n    return {\n        type: 'ADD_TICKET',\n        payload: ticket\n    }\n}\n\nexport const startAddTicket = (ticket, x, redirect) => {\n    console.log(ticket)\n\n    var arr = [];\n    ticket.employees.map((option) => { \n        console.log(option.id);\n        const { id } = option;\n        arr.push(id);\n        return option.value;\n    });\n    console.log(arr);\n    ticket.employees = arr;\n\n    //  arrdoc test\n    var arrdoc = [];\n    x.map((option) => {\n        console.log(option.id);\n        const { id } = option;\n        arrdoc.push(id);\n        return option.value;\n    });\n    console.log(arrdoc);\n    ticket.doctors = arrdoc;\n    //  arrdoc test\n\n\n    ticket.isResolved = false;\n\n    return (dispatch) => {\n        axios.post('/tickets', ticket, {\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n            .then(response => {\n                if (response.data.errors) {\n                    swal.fire(`${response.data.message}`, \"\", \"error\")\n                } else {\n                    const ticket = response.data\n                    dispatch(addTicket(ticket))\n                    redirect()\n                }\n            })\n    }\n}\n\n\n\n// &&&&&&&&&&&\nexport const startAddTicketTwo = (ticket, redirect) => {\n    console.log(ticket)\n\n    // var arr = [];\n    // arr.push(ticket.empviv);\n    // console.log(arr);\n    ticket.employees.push(ticket.empviv);\n    ticket.doctors.push(ticket.doctviv);\n\n\n\n\n    ticket.isResolved = false;\n\n    return (dispatch) => {\n        axios.post('/tickets', ticket, {\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n            .then(response => {\n                if (response.data.errors) {\n                    swal.fire(`${response.data.message}`, \"\", \"error\")\n                } else {\n                    const ticket = response.data\n                    dispatch(addTicket(ticket))\n                    redirect()\n                }\n            })\n    }\n}\n\n// &&&&&&&&&&&\nexport const editTicket = (ticket) => {\n    return {\n        type: 'EDIT_TICKET',\n        payload: ticket\n    }\n}\n\n\n\nexport const startEditTicket = (ticket, x, redirect) => {\n    console.log(ticket);\n    console.log(ticket.employees.length);\n    if (ticket.code) {\n        var arr = [];\n        ticket.employees.map((option) => {\n            console.log(option.id)\n            const { id } = option;\n            arr.push(id)\n            return option.value;\n        });\n        console.log(arr);\n        ticket.employees = arr;\n\n        // trerfmk\n        var arrb = [];\n        x.map((option) => {\n            console.log(option.id);\n            const { id } = option;\n            arrb.push(id);\n            return option.value;\n        });\n        console.log(arrb);\n        ticket.doctors = arrb;\n        // trerfmk\n\n        return (dispatch) => {\n            axios\n                .put(`/tickets/${ticket.id}`, ticket, {\n                    headers: {\n                        \"x-auth\": localStorage.getItem(\"authToken\"),\n                    },\n                })\n                .then((response) => {\n                    console.log(response.data);\n                    if (response.data.errors) {\n                        swal.fire(`${response.data.message}`, \"\", \"error\");\n                    } else {\n                        const ticket = response.data;\n                        redirect();\n                        dispatch(editTicket(ticket));\n                        window.location.reload();\n                    }\n                });\n        };\n    }\n    else {\n        return (dispatch) => {\n            axios.put(`/tickets/${ticket.id}`, ticket, {\n                headers: {\n                    'x-auth': localStorage.getItem('authToken')\n                }\n            })\n                .then(response => {\n                    console.log(response.data)\n                    if (response.data.errors) {\n                        swal.fire(`${response.data.message}`, \"\", \"error\")\n                    } else {\n                        const ticket = response.data\n                        redirect()\n                        dispatch(editTicket(ticket))\n                        window.location.reload();\n\n                    }\n                })\n        }\n    }\n\n}\n\n\n// kkegkegkk\n// for patients\nexport const startEditTicketTwo = (ticket, redirect) => {\n    console.log(ticket);\n    console.log(ticket.employees.length);\n    if (ticket.code) {\n        var arr = [];\n        ticket.employees.map((option) => {\n            console.log(option.id)\n            const { id } = option;\n            arr.push(id)\n            return option.value;\n        });\n        console.log(arr);\n        ticket.employees = arr;\n\n        ticket.doctors.push(ticket.doctviv);\n\n        // trerfmk\n        //  var arrb = [];\n        //  x.map((option) => {\n        //      console.log(option.id);\n        //      const { id } = option;\n        //      arrb.push(id);\n        //      return option.value;\n        //  });\n        //  console.log(arrb);\n        //  ticket.doctors = arrb;\n        // trerfmk\n\n        return (dispatch) => {\n            axios\n                .put(`/tickets/${ticket.id}`, ticket, {\n                    headers: {\n                        \"x-auth\": localStorage.getItem(\"authToken\"),\n                    },\n                })\n                .then((response) => {\n                    console.log(response.data);\n                    if (response.data.errors) {\n                        swal.fire(`${response.data.message}`, \"\", \"error\");\n                    } else {\n                        const ticket = response.data;\n                        redirect();\n                        dispatch(editTicket(ticket));\n                        window.location.reload();\n                    }\n                });\n        };\n    }\n    else {\n        return (dispatch) => {\n            axios.put(`/tickets/${ticket.id}`, ticket, {\n                headers: {\n                    'x-auth': localStorage.getItem('authToken')\n                }\n            })\n                .then(response => {\n                    console.log(response.data)\n                    if (response.data.errors) {\n                        swal.fire(`${response.data.message}`, \"\", \"error\")\n                    } else {\n                        const ticket = response.data\n                        redirect()\n                        dispatch(editTicket(ticket))\n                        window.location.reload();\n\n                    }\n                })\n        }\n    }\n\n}\n// kkegkegkk\n\n// jnvdjvjdvjvivdoc\n\nexport const startEditTicketTwoDoc = (ticket, redirect) => {\n    alert(\"kknfkedn\");\n    console.log(ticket);\n    console.log(ticket.employees.length);\n    if (ticket.code) {\n        var arr = [];\n        ticket.employees.map((option) => {\n            console.log(option.id)\n            const { id } = option;\n            arr.push(id)\n            return option.value;\n        });\n        console.log(arr);\n        ticket.employees = arr;\n\n        // ticket.doctors.push(ticket.doctviv);\n\n        // trerfmk\n        //  var arrb = [];\n        //  x.map((option) => {\n        //      console.log(option.id);\n        //      const { id } = option;\n        //      arrb.push(id);\n        //      return option.value;\n        //  });\n        //  console.log(arrb);\n        //  ticket.doctors = arrb;\n        // trerfmk\n\n        return (dispatch) => {\n            axios\n                .put(`/tickets/${ticket.id}`, ticket, {\n                    headers: {\n                        \"x-auth\": localStorage.getItem(\"authToken\"),\n                    },\n                })\n                .then((response) => {\n                    console.log(response.data);\n                    if (response.data.errors) {\n                        swal.fire(`${response.data.message}`, \"\", \"error\");\n                    } else {\n                        const ticket = response.data;\n                        redirect();\n                        dispatch(editTicket(ticket));\n                        window.location.reload();\n                    }\n                });\n        };\n    }\n    else {\n        return (dispatch) => {\n            axios.put(`/tickets/${ticket.id}`, ticket, {\n                headers: {\n                    'x-auth': localStorage.getItem('authToken')\n                }\n            })\n                .then(response => {\n                    console.log(response.data)\n                    if (response.data.errors) {\n                        swal.fire(`${response.data.message}`, \"\", \"error\")\n                    } else {\n                        const ticket = response.data\n                        redirect()\n                        dispatch(editTicket(ticket))\n                        window.location.reload();\n\n                    }\n                })\n        }\n    }\n\n}\n// jnvdjvjdvjviv\n\nexport const toggleResolve = (ticket) => {\n    return {\n        type: 'TOGGLE_RESOLVE',\n        payload: ticket\n    }\n}\n\nexport const startToggleResolve = (id, isResolved) => {\n    return (dispatch) => {\n        axios.put(`/tickets/${id}`, { isResolved: !isResolved }, {\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        dispatch(toggleResolve(id))\n\n    }\n}\n\nexport const searchTicket = (search) => {\n    return {\n        type: 'SEARCH_TICKET',\n        payload: search\n    }\n}\n\nexport const updateTicketCustomer = (customer) => {\n    return {\n        type: 'UPDATE_TICKET_CUSTOMER',\n        payload: customer\n    }\n}\n\nexport const updateTicketDepartment = (department) => {\n    return {\n        type: 'UPDATE_TICKET_DEPARTMENT',\n        payload: department\n    }\n}","import axios from '../config/axios'\nimport { updateEmployeeDepartment } from '../actions/employees'\nimport {updateTicketDepartment} from '../actions/tickets'\n\nimport swal from 'sweetalert2'\n\nexport const setDepartments = (department) => {\n    return {\n        type: 'SET_DEPARTMENTS',\n        payload: department\n    }\n}\n\nexport const startSetDepartments = () => {\n    return (dispatch) => {\n        axios.get('/departments',{\n                    headers: {\n                        'x-auth': localStorage.getItem('authToken')\n                    }\n                })\n            .then(response=>{\n                const departments = response.data\n                dispatch(setDepartments(departments))\n            })\n            .catch(err=>{\n                console.log(err)\n            })\n\n    }\n}\n\nexport const removeDepartment = (department) => {\n    return {\n        type: 'REMOVE_DEPARTMENT',\n        payload: department\n    }\n}\n\nexport const startRemoveDepartment = (id) => {\n    return (dispatch) => {\n        axios.delete(`/departments/${id}`,{\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then(response=>{\n            const department = response.data\n            dispatch(removeDepartment(department))\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n}\n\nexport const addDepartment = (department) => {\n    return {\n        type: 'ADD_DEPARTMENT',\n        payload: department\n    }\n}\n\nexport const startAddDepartment = (department,redirect) => {\n    return (dispatch) => {\n        axios.post('/departments',department,{\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then(response=>{\n            if(response.data.errors){\n                swal.fire(`${response.data.message}`,\"\",\"error\")\n            } else {\n                const department = response.data\n                redirect()\n                dispatch(addDepartment(department))\n            }\n        })\n    }\n}\n\nexport const editDepartment = (department) => {\n    return {\n        type: 'EDIT_DEPARTMENT',\n        payload: department\n    }\n}\n\nexport const startEditDepartment = (department,id,redirect) => {\n    return(dispatch) => {\n        axios.put(`/departments/${id}`,department,{\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then(response => {\n            console.log(response.data)\n            if (response.data.errors) {\n                swal.fire(`${response.data.message}`,\"\",\"error\")\n            } else {\n                const department = response.data\n                redirect()\n                dispatch(editDepartment(department))\n                dispatch(updateEmployeeDepartment(department))\n                dispatch(updateTicketDepartment(department))\n                document.location.reload();\n            }\n        })\n    }\n}","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport { ListGroup, ListGroupItem,Button } from 'reactstrap'\n\nimport {connect} from 'react-redux'\n\nimport DepartmentForm from './Form'\n// import { startRemoveDepartment, startAddDepartment } from '../../actions/departments'\nimport { startRemoveDepartment, startAddDepartment } from '../../../actions/departments'\n\nimport swal from 'sweetalert2'\n\nclass DepartmentsList extends React.Component {\n\n    handleSubmit = (department) => {\n    const redirect = () => this.props.history.push('/departments')\n    this.props.dispatch(startAddDepartment(department,redirect))\n }\n\n\n  handleRemove = (id) =>{\n\n    var flag=0\n    this.props.employees.map(emp=>{\n      if(emp.department._id===id)\n      {\n        flag=1\n      }\n      return emp;\n    })\n    if(flag===1)\n    {\n      alert(\"Cant delete department, please delete all employees working in this department first\")\n      flag = 0;\n\n    }\n    else{\n      swal.fire({\n          title: \"Are you sure you want to Delete?\",\n          icon: \"warning\",\n          buttons: true,\n          dangerMode: true,\n        })\n        .then((confirmDelete) => {\n          if (confirmDelete) {\n            swal.fire(\"Successfully Deleted!!\", {\n              icon: \"success\",\n            });\n            this.props.dispatch(startRemoveDepartment(id))\n          }\n        })\n    }\n\n\n\n    // console.log(this.props.employees);\n\n\n\n  }\n    render(){\n        return (\n            <div>\n                <h2>Departments - {this.props.departments.length}</h2>\n                    <ListGroup>\n                        {this.props.departments.map(dept=>{\n                           return <ListGroupItem key={dept._id}>{dept.name}\n                                <Button className=\"float-right\" color=\"danger\" onClick={()=>{\n                               this.handleRemove(dept._id)\n                           }}>remove</Button>\n                        <Link to={`/departments/${dept._id}`}><Button className=\"float-right mr-5\" color=\"info\">show</Button></Link>\n                        </ListGroupItem> }\n                        )}\n                    </ListGroup>\n                    <br/>\n                    <h3>Add Department</h3>\n                    <DepartmentForm handleSubmit = {this.handleSubmit}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      departments: state.departments,\n      employees: state.employees,\n    };\n}\n\nexport default connect(mapStateToProps)(DepartmentsList)\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport {connect} from 'react-redux'\n\n\nclass DepartmentShow extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n            tickets: []\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                {this.props.department && (\n                    <div>\n                     <h2>Name - {this.props.department.name}</h2>\n                     <Link to={`/departments/edit/${this.props.department._id}`}>Edit</Link>\n\n\n                    </div>\n                )}\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    return {\n        department: state.departments.find(department=>department._id === id)\n    }\n}\n\nexport default connect(mapStateToProps)(DepartmentShow)","import React from 'react'\n\nimport {connect} from 'react-redux'\n\nimport DepartmentForm from './Form'\n// import { startEditDepartment } from '../../actions/departments'\nimport { startEditDepartment } from '../../../actions/departments'\n\n\nclass DepartmentEdit extends React.Component{\n\n    handleSubmit = (department) => {\n        const id = this.props.match.params.id\n        const redirect = () => this.props.history.push(`/departments/${id}`)\n        this.props.dispatch(startEditDepartment(department,id,redirect))\n    }\n\n\n    render(){\n        return (\n            <div>\n                {this.props.department && (\n                    <div>\n                         <h2>Edit Department</h2>\n                         {this.props.department.name && <DepartmentForm department = {this.props.department} handleSubmit = {this.handleSubmit} />}\n                    </div>\n                )}\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    return {\n        department: state.departments.find(department => department._id === id)\n    }\n}\n\nexport default connect(mapStateToProps)(DepartmentEdit)\n","import React from 'react'\nimport { Button, Form, FormGroup, Label } from 'reactstrap'\n\n\n\nclass DepartmentForm extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            name: props.department ? props.department.name : '' \n        }\n\n    }\n\n    handleChange =(e)=>{\n        const name = e.target.value\n        this.setState({name})\n    }\n    handleSubmit = (e)=>{\n        e.preventDefault()\n        const formData = {\n            name:this.state.name\n        }\n        this.props.handleSubmit(formData)\n        this.setState({name:''})\n    }\n\n    render(){\n        return (\n            <div>\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label htmlFor=\"text\"></Label>\n                        <input type=\"text\" id=\"text\" value={this.state.name} onChange={this.handleChange}/>\n                    </FormGroup>\n                    <Button type=\"submit\" value=\"add\">Add</Button>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default DepartmentForm","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport { ListGroup, ListGroupItem,Button } from 'reactstrap'\n\nimport {connect} from 'react-redux'\n\nimport DepartmentForm from './Form'\n// import { startRemoveDepartment, startAddDepartment } from '../../actions/departments'\nimport { startRemoveDepartment, startAddDepartment } from '../../../actions/departments'\n\nimport swal from 'sweetalert2'\n\nclass DepartmentsList extends React.Component {\n\n    handleSubmit = (department) => {\n    const redirect = () => this.props.history.push('/departments')\n    this.props.dispatch(startAddDepartment(department,redirect))\n }\n\n\n  handleRemove = (id) =>{\n\n    var flag=0\n    this.props.employees.map(emp=>{\n      if(emp.department._id===id)\n      {\n        flag=1\n      }\n      return emp;\n    })\n    if(flag===1)\n    {\n      alert(\"Cant delete department, please delete all employees working in this department first\")\n      flag = 0;\n\n    }\n    else{\n      swal.fire({\n          title: \"Are you sure you want to Delete?\",\n          icon: \"warning\",\n          buttons: true,\n          dangerMode: true,\n        })\n        .then((confirmDelete) => {\n          if (confirmDelete) {\n            swal.fire(\"Successfully Deleted!!\", {\n              icon: \"success\",\n            });\n            this.props.dispatch(startRemoveDepartment(id))\n          }\n        })\n    }\n\n\n\n    // console.log(this.props.employees);\n\n\n\n  }\n    render(){\n        return (\n            <div>\n                <h2>Departments - {this.props.departments.length}</h2>\n                    <ListGroup>\n                        {this.props.departments.map(dept=>{\n                           return <ListGroupItem key={dept._id}>{dept.name}\n                                <Button className=\"float-right\" color=\"danger\" onClick={()=>{\n                               this.handleRemove(dept._id)\n                           }}>remove</Button>\n                        <Link to={`/departments/${dept._id}`}><Button className=\"float-right mr-5\" color=\"info\">show</Button></Link>\n                        </ListGroupItem> }\n                        )}\n                    </ListGroup>\n                    <br/>\n                    <h3>Add Department</h3>\n                    <DepartmentForm handleSubmit = {this.handleSubmit}/>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      departments: state.departments,\n      employees: state.employees,\n    };\n}\n\nexport default connect(mapStateToProps)(DepartmentsList)\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport {connect} from 'react-redux'\n\n\nclass DepartmentShow extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n            tickets: []\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                {this.props.department && (\n                    <div>\n                     <h2>Name - {this.props.department.name}</h2>\n                     <Link to={`/departments/edit/${this.props.department._id}`}>Edit</Link>\n\n\n                    </div>\n                )}\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    return {\n        department: state.departments.find(department=>department._id === id)\n    }\n}\n\nexport default connect(mapStateToProps)(DepartmentShow)","import React from 'react'\n\nimport {connect} from 'react-redux'\n\nimport DepartmentForm from './Form'\n// import { startEditDepartment } from '../../actions/departments'\nimport { startEditDepartment } from '../../../actions/departments'\n\n\nclass DepartmentEdit extends React.Component{\n\n    handleSubmit = (department) => {\n        const id = this.props.match.params.id\n        const redirect = () => this.props.history.push(`/departments/${id}`)\n        this.props.dispatch(startEditDepartment(department,id,redirect))\n    }\n\n\n    render(){\n        return (\n            <div>\n                {this.props.department && (\n                    <div>\n                         <h2>Edit Department</h2>\n                         {this.props.department.name && <DepartmentForm department = {this.props.department} handleSubmit = {this.handleSubmit} />}\n                    </div>\n                )}\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    return {\n        department: state.departments.find(department => department._id === id)\n    }\n}\n\nexport default connect(mapStateToProps)(DepartmentEdit)\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport {connect} from 'react-redux'\n\nimport { Table,Button } from 'reactstrap'\n\nimport swal from 'sweetalert2'\n\n// import {startRemoveEmployee} from '../../actions/employees'\nimport {startRemoveEmployee} from '../../../actions/employees'\n\n\nclass EmployeesList extends React.Component {\n\n    handleRemove = (id) => {\n        console.log(this.props.ticket);\n        var flag = 0;\n        this.props.ticket.map((tick) => {\n          tick.employees.map(emp=>{\n              if(emp._id===id)\n              {\n                  flag=1;\n              }\n              return emp;\n          })\n          return tick;\n        });\n        if(flag===1)\n        {\n            alert(\"Cant delete employee, please delete all tickets assigned to this employee first\")\n        }\n       else{\n         swal.fire({\n             title: \"Are you sure you want to Delete?\",\n             icon: \"warning\",\n             buttons: true,\n             dangerMode: true,\n           })\n           .then((confirmRemove) => {\n               console.log(confirmRemove);\n             if (confirmRemove.isConfirmed) {\n               swal.fire(\"Successfully Deleted\", {\n                 icon: \"success\",\n               });\n               this.props.dispatch(startRemoveEmployee(id))\n             }\n           })\n       }\n    }\n\n    findDepartment(id) {\n         return this.props.departments.find(dept => dept._id === id)\n    }\n\n\n\n    render(){\n        return(\n            <div>\n                    <h2>Employees - {this.props.employees.length}</h2>\n                    <Table striped>\n                    <thead>\n                        <tr>\n                            <th>Id</th>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Mobile</th>\n                            <th>Department</th>\n                            <th>Actions</th>\n                            <th>Remove</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                                {this.props.employees.map((employee,index) => {\n                                    return (\n                                        <tr key={employee._id}>\n                                        <td>{index+1}</td>\n                                        <td>{employee.name}</td>\n                                        <td>{employee.email}</td>\n                                        <td>{employee.mobile}</td>\n                                        <td>{employee.department.name ? employee.department.name : this.findDepartment(employee.department).name}</td>\n                                        <td><Link to={`/employees/${employee._id}`}><Button color=\"info\">show</Button></Link></td>\n                                        <td><Button color=\"danger\" onClick = {()=>{\n                                             this.handleRemove(employee._id)\n                                        }}>Remove</Button></td>\n                                    </tr>\n                                    )\n\n                                })}\n\n                   </tbody>\n\n                   </Table>\n                    <Link to=\"/employees/new\" className=\"btn btn-primary\">Add Employee</Link>\n            </div>\n            )\n        }\n    }\n\nconst mapStateToProps = (state) => {\n    return {\n      employees: state.employees,\n      departments: state.departments,\n      ticket: state.tickets,\n    };\n}\n\nexport default connect(mapStateToProps)(EmployeesList)","import React from 'react'\nimport { Button, Form, FormGroup, Label, Input} from 'reactstrap'\n\nimport {connect} from 'react-redux'\n\n\n\nclass EmployeeForm extends React.Component {\n    constructor(props){\n        super(props)\n        console.log(props.employee)\n        this.state = {\n          name: props.employee ? props.employee.name : \"\",\n          email: props.employee ? props.employee.email : \"\",\n          mobile: props.employee ? props.employee.mobile : \"\",\n          department: props.employee ? props.employee.department._id : \"\",\n          id: props.employee ? props.employee._id : \"\",\n        };\n    }\n\n        handleChange = (e) => {\n            this.setState({\n                [e.target.name]:e.target.value\n            })\n        }\n\n        handleSubmit = (e) => {\n            e.preventDefault()\n            const formData = {\n                name:this.state.name,\n                email:this.state.email,\n                mobile:this.state.mobile,\n                department:this.state.department,\n                id:this.state.id\n            }\n            console.log(formData)\n            this.props.handleSubmit(formData)\n        }\n\n        // componentWillReceiveProps(nextProps){\n        //     if(nextProps.employee !== undefined){\n        //     const {name,email,mobile,department} = nextProps.employee\n        //     this.setState({name,email,mobile,department})\n        //     }\n        // }\n\n\n    render(){\n        //\n        return(\n            <div>\n                <Form onSubmit={this.handleSubmit}>\n\n                    <FormGroup>\n                    <Label htmlFor=\"name\">Name</Label>\n                    <Input type=\"text\" id=\"name\" value={this.state.name} onChange={this.handleChange} name=\"name\"/>\n                    </FormGroup>\n\n                    <FormGroup>\n                    <Label htmlFor=\"email\">Email</Label>\n                        <Input type=\"text\" id=\"email\" value={this.state.email} onChange={this.handleChange} name=\"email\"/>\n                    </FormGroup>\n\n                    <FormGroup>\n                    <Label htmlFor=\"mobile\">Mobile</Label>\n                        <Input type=\"text\" id=\"mobile\" value={this.state.mobile} onChange={this.handleChange} name=\"mobile\"/>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label htmlFor=\"department\">Department</Label>\n                        <Input type=\"select\" id=\"department\" value={this.state.department} onChange={this.handleChange} name=\"department\">\n                        <option value=\"\">select</option>\n                        {this.props.departments.map(department=>{\n                             return < option key={department._id} value={department._id}>{department.name} </option>\n                        })}\n                        </Input>\n                    </FormGroup>\n                    <Button type=\"submit\" value=\"submit\">Submit</Button>\n                </Form>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        departments: state.departments\n    }\n}\n\nexport default connect(mapStateToProps)(EmployeeForm)","import React from 'react'\nimport EmployeeForm from './Form'\n\n\nimport {connect} from 'react-redux'\n// import {startAddEmployee} from '../../actions/employees'\nimport {startAddEmployee} from '../../../actions/employees'\n\nclass EmployeeNew extends React.Component{\n\n    handleSubmit = (employee) => {\n\n            const redirect = () => this.props.history.push('/employees')\n            this.props.dispatch(startAddEmployee(employee,redirect))\n        }\n\n\n    render(){\n        return (\n            <div>\n                    <h2>Add Employee</h2>\n                    <EmployeeForm handleSubmit = {this.handleSubmit}/>\n\n            </div>\n        )\n    }\n}\n\nexport default connect()(EmployeeNew)","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport {connect} from 'react-redux'\n\n\nclass EmployeeShow extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            tickets: []\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                {this.props.employee && (\n                    <div>\n                        <h2>{this.props.employee.name} - {this.props.employee.email}</h2>\n                        <Link to={`/employees/edit/${this.props.employee._id}`}>Edit</Link>\n\n                    </div>\n                )}\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    return {\n        employee: state.employees.find(employee=>employee._id === id)\n    }\n}\n\nexport default connect(mapStateToProps)(EmployeeShow)","import React from 'react'\nimport EmployeeForm from './Form'\n\n\nimport {connect} from 'react-redux'\n// import { startEditEmployee } from '../../actions/employees'\nimport { startEditEmployee } from '../../../actions/employees'\n\nclass EmployeeEdit extends React.Component{\n\n\n    handleSubmit = (employee) => {\n        const id = this.props.match.params.id\n        console.log(id)\n\n        const redirect = () => this.props.history.push(`/employees/${employee.id}`)\n        this.props.dispatch(startEditEmployee(employee,redirect))\n    }\n\n    render(){\n        return (\n            <div>\n            {this.props.employee && (\n                <div>\n                    <h2>Edit Employee</h2>\n\n                    {this.props.employee.name &&  <EmployeeForm employee = {this.props.employee} handleSubmit = {this.handleSubmit}/>}\n                </div>\n            )}\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    return {\n        employee: state.employees.find(employee=> employee._id === id)\n    }\n}\n\nexport default connect(mapStateToProps)(EmployeeEdit)","import axios from '../config/axios';\r\n\r\nimport swal from 'sweetalert2';\r\n\r\nexport const setDoctors = (doctor) => { \r\n    return {\r\n        type: 'SET_DOCTORS',\r\n        payload: doctor\r\n    };\r\n};\r\n\r\nexport const setSubDoctors = (doctor) => { \r\n    return {\r\n        type: 'SET_SUB_DOCTORS',\r\n        payload: doctor\r\n    };\r\n};\r\n\r\n\r\nexport const startSetDoctors = () => {\r\n    console.log('testing from startSetDoctors');\r\n    return (dispatch) => {\r\n        axios\r\n            .get('/doctors', {\r\n                headers: {\r\n                    'x-auth': localStorage.getItem('authToken')\r\n                }\r\n            })\r\n            .then((response) => {\r\n                const doctors = response.data;\r\n                console.log(doctors);\r\n                dispatch(setDoctors(doctors));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const removeDoctor = (doctor) => {\r\n    return {\r\n        type: 'REMOVE_DOCTOR',\r\n        payload: doctor\r\n    };\r\n};\r\n\r\nexport const startRemoveDoctor = (id) => {\r\n    return (dispatch) => {\r\n        axios\r\n            .delete(`/doctors/${id}`, {\r\n                headers: {\r\n                    'x-auth': localStorage.getItem('authToken')\r\n                }\r\n            })\r\n            .then((response) => {\r\n                const doctor = response.data;\r\n                dispatch(removeDoctor(doctor));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const addDoctor = (doctor) => {\r\n    return {\r\n        type: 'ADD_DOCTOR',\r\n        payload: doctor\r\n    };\r\n};\r\n\r\nexport const startAddDoctor = (doctor, redirect) => {\r\n    return (dispatch) => {\r\n        axios\r\n            .post('/doctors', doctor, {\r\n                headers: {\r\n                    'x-auth': localStorage.getItem('authToken')\r\n                }\r\n            })\r\n            .then((response) => {\r\n                if (response.data.errors) {\r\n                    swal.fire(`${response.data.message}`, '', 'error');\r\n                } else {\r\n                    const doctor = response.data;\r\n                    redirect();\r\n                    dispatch(addDoctor(doctor));\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\nexport const editDoctor = (doctor) => {\r\n    return {\r\n        type: 'EDIT_DOCTOR',\r\n        payload: doctor\r\n    };\r\n};\r\n\r\nexport const startEditDoctor = (doctor, redirect) => {\r\n    console.log(doctor);\r\n    return (dispatch) => {\r\n        axios\r\n            .put(`/doctors/${doctor.id}`, doctor, {\r\n                headers: {\r\n                    'x-auth': localStorage.getItem('authToken')\r\n                }\r\n            })\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                if (response.data.errors) {\r\n                    swal.fire(`${response.data.message}`, '', 'error');\r\n                } else {\r\n                    const doctor = response.data;\r\n                    redirect();\r\n                    dispatch(editDoctor(doctor));\r\n                    window.location.reload();\r\n                    // dispatch(updateTicketEmployee(employee))\r\n                }\r\n            });\r\n    };\r\n};\r\n\r\nexport const updateDoctorDepartment = (department) => {\r\n    return {\r\n        type: 'UPDATE_DOCTOR_DEPARTMENT',\r\n        payload: department\r\n    };\r\n};\r\n\r\nexport const startSetDoctorsForSubadmins = ()=>{\r\n    // console.log('testing from substartSetDoctors');\r\n    return (dispatch) => {\r\n        axios\r\n            .get('/subdoctors', {\r\n                headers: {\r\n                    'x-auth': localStorage.getItem('authToken')\r\n                }\r\n            })\r\n            .then((response) => {\r\n                const doctors = response.data;\r\n                console.log(doctors);\r\n                dispatch(setSubDoctors(doctors));\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n}\r\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport {connect} from 'react-redux'\n\nimport { Table,Button } from 'reactstrap'\n\nimport swal from 'sweetalert2'\n\nimport {startRemoveDoctor} from '../../../actions/doctors'\n\n\nclass DoctorsList extends React.Component {\n\n    handleRemove = (id) => {\n        console.log(this.props.ticket);\n        var flag = 0;\n        this.props.ticket.map((tick) => {\n          tick.doctors.map(emp=>{\n              if(emp._id===id)\n              {\n                  flag=1;\n              }\n              return emp;\n          })\n          return tick;\n        });\n        if(flag===1)\n        {\n            alert(\"Cant delete doctor, please delete all tickets assigned to this doctor first\")\n        }\n       else{\n         swal.fire({\n             title: \"Are you sure you want to Delete?\",\n             icon: \"warning\",\n             buttons: true,\n             dangerMode: true,\n           })\n           .then((confirmRemove) => {\n               console.log(confirmRemove);\n             if (confirmRemove.isConfirmed) {\n               swal.fire(\"Successfully Deleted\", {\n                 icon: \"success\",\n               });\n               this.props.dispatch(startRemoveDoctor(id))\n             }\n           })\n       }\n    }\n\n    findDepartment(id) {\n         return this.props.departments.find(dept => dept._id === id)\n    }\n\n\n\n    render(){\n        return(\n            <div>\n                    <h2>Doctors - {this.props.doctors.length}</h2>\n                    <Table striped>\n                    <thead>\n                        <tr>\n                            <th>Id</th>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Mobile</th>\n                            <th>Department</th>\n                            <th>Actions</th>\n                            <th>Remove</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                                {this.props.doctors.map((doctor,index) => {\n                                    return (\n                                        <tr key={doctor._id}>\n                                        <td>{index+1}</td>\n                                        <td>{doctor.name}</td>\n                                        <td>{doctor.email}</td>\n                                        <td>{doctor.mobile}</td>\n                                        <td>{doctor.department.name ? doctor.department.name : this.findDepartment(doctor.department).name}</td>\n                                        <td><Link to={`/doctors/${doctor._id}`}><Button color=\"info\">show</Button></Link></td>\n                                        <td><Button color=\"danger\" onClick = {()=>{\n                                             this.handleRemove(doctor._id)\n                                        }}>Remove</Button></td>\n                                    </tr>\n                                    )\n\n                                })}\n\n                   </tbody>\n\n                   </Table>\n                    <Link to=\"/doctors/new\" className=\"btn btn-primary\">Add Doctor</Link>\n            </div>\n            )\n        }\n    }\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n      doctors: state.doctors,\n      departments: state.departments,\n      ticket: state.tickets,\n    };\n}\n\nexport default connect(mapStateToProps)(DoctorsList);","import React from 'react'\nimport { Button, Form, FormGroup, Label, Input} from 'reactstrap'\n\nimport {connect} from 'react-redux'\n\n\n\nclass DoctorForm extends React.Component {\n    constructor(props){\n        super(props)\n        console.log(props.doctor)\n        this.state = {\n            name: props.doctor ? props.doctor.name : '',\n            email: props.doctor ? props.doctor.email : '',\n            mobile: props.doctor ? props.doctor.mobile : '',\n            department: props.doctor ? props.doctor.department._id : '',\n            id: props.doctor ? props.doctor._id : ''\n        };\n    }\n\n        handleChange = (e) => {\n            this.setState({\n                [e.target.name]:e.target.value\n            })\n        }\n\n        handleSubmit = (e) => {\n            e.preventDefault()\n            const formData = {\n                name:this.state.name,\n                email:this.state.email,\n                mobile:this.state.mobile,\n                department:this.state.department,\n                id:this.state.id\n            }\n            console.log(formData)\n            this.props.handleSubmit(formData)\n        }\n\n        // componentWillReceiveProps(nextProps){\n        //     if(nextProps.employee !== undefined){\n        //     const {name,email,mobile,department} = nextProps.employee\n        //     this.setState({name,email,mobile,department})\n        //     }\n        // }\n\n\n    render(){\n        //\n        return(\n            <div>\n                <Form onSubmit={this.handleSubmit}>\n\n                    <FormGroup>\n                    <Label htmlFor=\"name\">Name</Label>\n                    <Input type=\"text\" id=\"name\" value={this.state.name} onChange={this.handleChange} name=\"name\"/>\n                    </FormGroup>\n\n                    <FormGroup>\n                    <Label htmlFor=\"email\">Email</Label>\n                        <Input type=\"text\" id=\"email\" value={this.state.email} onChange={this.handleChange} name=\"email\"/>\n                    </FormGroup>\n\n                    <FormGroup>\n                    <Label htmlFor=\"mobile\">Mobile</Label>\n                        <Input type=\"text\" id=\"mobile\" value={this.state.mobile} onChange={this.handleChange} name=\"mobile\"/>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label htmlFor=\"department\">Department</Label>\n                        <Input type=\"select\" id=\"department\" value={this.state.department} onChange={this.handleChange} name=\"department\">\n                        <option value=\"\">select</option>\n                        {this.props.departments.map(department=>{\n                             return < option key={department._id} value={department._id}>{department.name} </option>\n                        })}\n                        </Input>\n                    </FormGroup>\n                    <Button type=\"submit\" value=\"submit\">Submit</Button>\n                </Form>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        departments: state.departments\n    }\n}\n\nexport default connect(mapStateToProps)(DoctorForm);","import React from 'react'\nimport DoctorForm from './Form'\n\n\nimport {connect} from 'react-redux'\n// import {startAddEmployee} from '../../actions/employees'\nimport {startAddDoctor} from '../../../actions/doctors'\n\nclass DoctorNew extends React.Component{\n\n    handleSubmit = (doctor) => {\n\n            const redirect = () => this.props.history.push('/doctors')\n            this.props.dispatch(startAddDoctor(doctor,redirect))\n        }\n\n\n    render(){\n        return (\n            <div>\n                    <h2>Add Doctor</h2>\n                    <DoctorForm handleSubmit = {this.handleSubmit}/>\n\n            </div>\n        )\n    }\n}\n\nexport default connect()(DoctorNew);","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport {connect} from 'react-redux'\n\n\nclass DoctorShow extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            tickets: []\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                {this.props.doctor && (\n                    <div>\n                        <h2>\n                            {this.props.doctor.name} - {this.props.doctor.email}\n                        </h2>\n                        <Link to={`/doctors/edit/${this.props.doctor._id}`}>Edit</Link>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    return {\n        doctor: state.doctors.find((doctor) => doctor._id === id)\n    };\n}\n\nexport default connect(mapStateToProps)(DoctorShow);","import React from 'react'\nimport DoctorForm from './Form'\n\n\nimport {connect} from 'react-redux'\nimport { startEditDoctor } from '../../../actions/doctors'\n\n\nclass DoctorEdit extends React.Component{\n\n\n    handleSubmit = (doctor) => {\n        const id = this.props.match.params.id\n        console.log(id)\n\n        const redirect = () => this.props.history.push(`/doctors/${doctor.id}`)\n        this.props.dispatch(startEditDoctor(doctor,redirect))\n    }\n\n    render(){\n        return (\n            <div>\n            {this.props.doctor && (\n                <div>\n                    <h2>Edit Doctor</h2>\n\n                    {this.props.doctor.name &&  <DoctorForm doctor = {this.props.doctor} handleSubmit = {this.handleSubmit}/>}\n                </div>\n            )}\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    return {\n        doctor: state.doctors.find(doctor=> doctor._id === id)\n    }\n}\n\nexport default connect(mapStateToProps)(DoctorEdit);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { TabContent, Button, TabPane, Nav, NavItem, NavLink, Table } from 'reactstrap';\nimport classnames from 'classnames';\n\nimport { connect } from 'react-redux';\n\nclass TicketTab extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeTab: '1'\n        };\n    }\n\n    toggle = (tab) => {\n        if (this.state.activeTab !== tab) {\n            this.setState({ activeTab: tab });\n        }\n    };\n\n    findCustomer = async (id) => {\n        const temp = await this.props.customers.find((customer) => customer._id === id);\n        return temp;\n    };\n\n    findDepartment = async (id) => {\n        const temp2 = await this.props.departments.find((department) => department._id === id);\n        return temp2;\n    };\n\n    findEmployees = async (id) => {\n        const temp3 = await this.props.employees.find((employee) => employee._id === id);\n        return temp3;\n    };\n\n    // doctors test\n    findDoctors = async (id) => {\n        const temp4 = await this.props.doctors.find((doctor) => doctor._id === id);\n        return temp4;\n    };\n\n    // doctors test\n\n    render() {\n        const { tickets } = this.props;\n        return (\n            <div>\n                <Nav tabs className='mb-3'>\n                    <NavItem>\n                        <NavLink\n                            className={classnames({ active: this.state.activeTab === '1' })}\n                            onClick={() => {\n                                this.toggle('1');\n                            }}\n                        >\n                            <div style={{ cursor: 'pointer' }}>Pending</div>\n                        </NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink\n                            className={classnames({ active: this.state.activeTab === '2' })}\n                            onClick={() => {\n                                this.toggle('2');\n                            }}\n                        >\n                            <div style={{ cursor: 'pointer' }}>Completed</div>\n                        </NavLink>\n                    </NavItem>\n                </Nav>\n                <TabContent activeTab={this.state.activeTab}>\n                    <TabPane tabId='1'>\n                        {this.state.activeTab === '1' ? (\n                            <div>\n                                <h2>\n                                    Tickets -{' '}\n                                    {tickets.filter((ticket) => !ticket.isResolved).length}\n                                </h2>\n                                <Table striped>\n                                    <thead>\n                                        <tr>\n                                            <th>Code No</th>\n                                            <th>Customer</th>\n                                            <th>Department</th>\n                                            <th>Employees</th>\n                                            <th>Doctors</th>\n                                            <th>Message</th>\n                                            <th>Priority</th>\n                                            <th>Actions</th>\n                                            <th>Remove</th>\n                                            <th>Complete</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {tickets.map((ticket) => {\n                                            return (\n                                                !ticket.isResolved && (\n                                                    <tr key={ticket._id}>\n                                                        <td>{ticket.code}</td>\n                                                        <td>\n                                                            {ticket.customer.name\n                                                                ? ticket.customer.name\n                                                                : this.findCustomer(ticket.customer)\n                                                                      .name}{' '}\n                                                        </td>\n                                                        <td>\n                                                            {ticket.department.name\n                                                                ? ticket.department.name\n                                                                : this.findDepartment(\n                                                                      ticket.department\n                                                                  ).name}{' '}\n                                                        </td>\n                                                        <td>\n                                                            {ticket.employees[0].name\n                                                                ? ticket.employees.map(\n                                                                      (emp, index) =>\n                                                                          index ===\n                                                                          ticket.employees.length -\n                                                                              1\n                                                                              ? `${emp.name}`\n                                                                              : `${emp.name}, `\n                                                                  )\n                                                                : ticket.employees.map(\n                                                                      (emp, index) =>\n                                                                          index ===\n                                                                          ticket.employees.length -\n                                                                              1\n                                                                              ? `${\n                                                                                    this.findEmployees(\n                                                                                        emp\n                                                                                    ).name\n                                                                                }`\n                                                                              : `${\n                                                                                    this.findEmployees(\n                                                                                        emp\n                                                                                    ).name\n                                                                                }, `\n                                                                  )}\n                                                        </td>\n                                                        {/* doctors test */}\n                                                        <td>\n                                                            {ticket.doctors[0].name\n                                                                ? ticket.doctors.map((doc, index) =>\n                                                                      index ===\n                                                                      ticket.doctors.length - 1\n                                                                          ? `${doc.name}`\n                                                                          : `${doc.name}, `\n                                                                  )\n                                                                : ticket.doctors.map((doc, index) =>\n                                                                      index ===\n                                                                      ticket.doctors.length - 1\n                                                                          ? `${\n                                                                                this.findDoctors(\n                                                                                    doc\n                                                                                ).name\n                                                                            }`\n                                                                          : `${\n                                                                                this.findDoctors(\n                                                                                    doc\n                                                                                ).name\n                                                                            }, `\n                                                                  )}\n                                                        </td>\n                                                        {/* doctors test */}\n                                                        <td>{ticket.message} </td>\n                                                        <td>{ticket.priority}</td>\n                                                        <td>\n                                                            <Link to={`/tickets/${ticket._id}`}>\n                                                                <Button color='info'>show</Button>\n                                                            </Link>\n                                                        </td>\n                                                        <td>\n                                                            <Button\n                                                                color='danger'\n                                                                onClick={() => {\n                                                                    this.props.handleRemove(\n                                                                        ticket._id\n                                                                    );\n                                                                }}\n                                                            >\n                                                                remove\n                                                            </Button>\n                                                        </td>\n                                                        <td>\n                                                            <input\n                                                                type='checkbox'\n                                                                onClick={() => {\n                                                                    this.props.handleResolve(\n                                                                        ticket._id\n                                                                    );\n                                                                }}\n                                                            />\n                                                        </td>\n                                                    </tr>\n                                                )\n                                            );\n                                        })}\n                                    </tbody>\n                                </Table>\n                            </div>\n                        ) : null}\n                    </TabPane>\n                    <TabPane tabId='2'>\n                        {this.state.activeTab === '2' ? (\n                            <div>\n                                <h2>\n                                    Tickets - {tickets.filter((ticket) => ticket.isResolved).length}\n                                </h2>\n                                <Table striped>\n                                    <thead>\n                                        <tr>\n                                            <th>Code No</th>\n                                            <th>Customer</th>\n                                            <th>Department</th>\n                                            <th>Employees</th>\n                                            <th>Doctors</th>\n                                            <th>Message</th>\n                                            <th>Priority</th>\n                                            <th>Actions</th>\n                                            <th>Remove</th>\n                                            <th>Not Complete</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {tickets.map((ticket) => {\n                                            console.log(ticket);\n                                            return (\n                                                ticket.isResolved && (\n                                                    <tr key={ticket._id}>\n                                                        <td>{ticket.code}</td>\n                                                        <td>\n                                                            {ticket.customer.name\n                                                                ? ticket.customer.name\n                                                                : this.findCustomer(ticket.customer)\n                                                                      .name}{' '}\n                                                        </td>\n                                                        {console.log(ticket.department)}\n                                                        <td>\n                                                            {ticket.department.name\n                                                                ? ticket.department.name\n                                                                : this.findCustomer(\n                                                                      ticket.department\n                                                                  ).name}{' '}\n                                                        </td>\n                                                        <td>\n                                                            {ticket.employees[0].name\n                                                                ? ticket.employees.map(\n                                                                      (emp, index) =>\n                                                                          index ===\n                                                                          ticket.employees.length -\n                                                                              1\n                                                                              ? `${emp.name}`\n                                                                              : `${emp.name}, `\n                                                                  )\n                                                                : ticket.employees.map(\n                                                                      (emp, index) =>\n                                                                          index ===\n                                                                          ticket.employees.length -\n                                                                              1\n                                                                              ? `${\n                                                                                    this.findEmployees(\n                                                                                        emp\n                                                                                    ).name\n                                                                                }`\n                                                                              : `${\n                                                                                    this.findEmployees(\n                                                                                        emp\n                                                                                    ).name\n                                                                                }, `\n                                                                  )}\n                                                        </td>\n\n                                                        {/* doctors test sec */}\n                                                        <td>\n                                                            {ticket.doctors[0].name\n                                                                ? ticket.doctors.map(\n                                                                      (doc, index) =>\n                                                                          index ===\n                                                                          ticket.doctors.length -\n                                                                              1\n                                                                              ? `${doc.name}`\n                                                                              : `${doc.name}, `\n                                                                  )\n                                                                : ticket.doctors.map(\n                                                                      (doc, index) =>\n                                                                          index ===\n                                                                          ticket.doctors.length -\n                                                                              1\n                                                                              ? `${\n                                                                                    this.findDoctors(\n                                                                                        doc\n                                                                                    ).name\n                                                                                }`\n                                                                              : `${\n                                                                                    this.findDoctors(\n                                                                                        doc\n                                                                                    ).name\n                                                                                }, `\n                                                                  )}\n                                                        </td>\n                                                        {/* doctors test sec */}\n\n                                                        <td>{ticket.message}</td>\n                                                        <td>{ticket.priority}</td>\n                                                        <td>\n                                                            <Link to={`/tickets/${ticket._id}`}>\n                                                                <Button color='info'>show</Button>\n                                                            </Link>\n                                                        </td>\n                                                        <td>\n                                                            <Button\n                                                                color='danger'\n                                                                onClick={() => {\n                                                                    this.props.handleRemove(\n                                                                        ticket._id\n                                                                    );\n                                                                }}\n                                                            >\n                                                                Remove\n                                                            </Button>\n                                                        </td>\n                                                        <td>\n                                                            <input\n                                                                type='checkbox'\n                                                                onClick={() => {\n                                                                    this.props.handleResolve(\n                                                                        ticket._id\n                                                                    );\n                                                                }}\n                                                            />\n                                                        </td>\n                                                    </tr>\n                                                )\n                                            );\n                                        })}\n                                    </tbody>\n                                </Table>\n                            </div>\n                        ) : null}\n                    </TabPane>\n                </TabContent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        customers: state.customers,\n        departments: state.departments,\n        employees: state.employees,\n        doctors: state.doctors\n    };\n};\n\nexport default connect(mapStateToProps)(TicketTab);\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport TicketTab from './Tab'\n\nimport { Container, Row, Col } from 'reactstrap'\n\nimport swal from 'sweetalert2'\nimport {Progress} from 'reactstrap'\n\nimport {connect}  from 'react-redux'\n// import {startToggleResolve} from '../../actions/tickets'\nimport {startToggleResolve} from '../../../actions/tickets'\nimport {startRemoveTicket} from '../../../actions/tickets'\n\n\nclass TicketsList extends React.Component{\n    constructor(props){\n        console.log(props);\n        super(props)\n        this.state = {\n            search:'',\n            currentTickets: this.props.tickets\n        }\n    }\n\n    findDepartment = async (id) => {\n        const pleasewait = await this.props.departments.find(\n          (dept) => dept._id === id\n        );\n        return pleasewait;\n    }\n\n    handleRemove = (id) => {\n        swal.fire({\n            title: \"Are you sure you want to Delete?\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n          })\n          .then((confirmRemove) => {\n            if (confirmRemove) {\n              swal.fire(\"Successfully Deleted\", {\n                icon: \"success\",\n              });\n              this.props.dispatch(startRemoveTicket(id))\n              this.setState(prevState=>({\n                currentTickets: prevState.currentTickets.filter(ticket=>ticket._id !== id)\n            }))\n                }\n             })\n    }\n\n    handleResolve = (id) =>{\n        const ticket = this.props.tickets.find(ticket=>ticket._id === id)\n        const isResolved = ticket.isResolved\n\n        this.props.dispatch(startToggleResolve(id,isResolved))\n    }\n\n    handleSearch = (e) => {\n\n        let newTickets = this.props.tickets.filter(ticket=>ticket.code.includes(e.target.value))\n        this.setState({\n            search: e.target.value,\n            currentTickets: newTickets\n        })\n    }\n\n\n\n    calculatePercentage(){\n        const allTickets = this.props.tickets.length\n        const completedTickets = this.props.tickets.filter(ticket=>ticket.isResolved).length\n        const percent = Math.round((completedTickets/allTickets)*100)\n        return percent\n    }\n\n    render(){\n\n\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <form className=\"form-inline float-left mt-3\" onSubmit={this.handleSubmit}>\n                            <input className=\"form-control mr-sm-2\" type=\"search\"  placeholder=\"Search Code\" aria-label=\"Search\" onChange={this.handleSearch}/>\n                        </form>\n                    </Col>\n                    <Col>\n                    <div className=\"text-center\">Completed Tickets: {this.calculatePercentage()}%</div>\n                    <Progress className=\"mb-5\" striped value={`${this.calculatePercentage()}`}/>\n                    </Col>\n\n                </Row>\n                <Row>\n                <Col>\n                        {console.log(this.props)}\n                    <TicketTab tickets= {this.state.currentTickets.length === 0? this.props.tickets : this.state.currentTickets} handleResolve={this.handleResolve} handleRemove={this.handleRemove}/>\n\n                    <Link to =\"/tickets/new\" className=\"mb-4 mt btn btn-primary\">Add Ticket</Link>\n                 </Col>\n\n\n\n             </Row>\n            </Container>\n        )\n\n    }\n}\n\nconst mapsStateToProps = (state) => {\n    console.log(state);\n    return {\n        tickets: state.tickets,\n        departments: state.departments\n    }\n}\n\nexport default connect(mapsStateToProps)(TicketsList)","import React from \"react\";\nimport axios from \"../../../config/axios\";\nimport Select from \"react-select\";\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\n\nimport { connect } from \"react-redux\";\n\nclass TicketForm extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(props.ticket);\n        this.state = {\n            code: props.ticket ? props.ticket.code : '',\n            customer: props.ticket ? props.ticket.customer._id : '',\n            // department: props.ticket ? props.ticket.department._id : '',\n            department:'',\n            emps: [],\n            employee: props.ticket\n                ? props.ticket.employees.map((option) =>\n                      Object.assign(\n                          {},\n                          {\n                              id: option._id,\n                              value: option._id,\n                              label: option.name,\n                              deptId: option.department\n                          }\n                      )\n                  )\n                : [],\n            employeesnew: [],\n            // test\n            docs: [],\n            doctor: props.ticket\n                ? props.ticket.doctors.map((option) =>\n                      Object.assign(\n                          {},\n                          {\n                              id: option._id,\n                              value: option._id,\n                              label: option.name,\n                              deptId: option.department\n                          }\n                      )\n                  )\n                : [],\n            doctorsnew: [],\n            // test\n            message: props.ticket ? props.ticket.message : '',\n            priority: props.ticket ? props.ticket.priority : '',\n            isResolved: props.ticket ? props.ticket.isResolved : ''\n        };\n    }\n    handleChange = async (e) => {\n      const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        });\n\n        if (name === 'department') {\n            console.log(value);\n            // var arr = []\n\n            const test = await this.state.emps.filter((employee) => {\n                console.log(employee);\n                if (employee.deptId === value) {\n                    return employee;\n                }\n                return employee;\n            });\n            //  arr.push(test)\n\n            this.setState({\n                employeesnew: test\n            });\n            console.log('employeesnew', this.state.employeesnew);\n\n            // for doctors\n             const testdoc = await this.state.docs.filter((doctor) => {\n                 console.log(doctor);\n                 if (doctor.deptId === value) {\n                     return doctor;\n                 }\n                 return doctor;\n             });\n             //  arr.push(test)\n\n             this.setState({\n                 doctorsnew: testdoc\n             });\n             console.log('doctorsnew', this.state.doctorsnew);\n            // for doctors\n        }\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state.employee);\n        console.log(this.state.doctor);\n        const formData = {\n            code: this.state.code,\n            customer: this.state.customer,\n            department: this.state.department,\n            employees: this.state.employee,\n            message: this.state.message,\n            priority: this.state.priority,\n            isResolved: this.state.isResolved,\n            doctors:[],\n        };\n        console.log(formData.doctors);\n        console.log(typeof formData.doctors);\n        console.log(formData.employees);\n        console.log(typeof formData.employees);\n        this.props.ticket && (formData.id = this.props.ticket._id);\n        this.props.handleSubmit(formData, this.state.doctor);\n        console.log(formData);\n    };\n\n    async componentDidMount() {\n        await axios\n            .get('/employees', {\n                headers: {\n                    'x-auth': localStorage.getItem('authToken')\n                }\n            })\n            .then((response) => {\n                console.log(response.data);\n                const employees = response.data;\n                let emps = [];\n                employees.map((employee) => {\n                    return emps.push({\n                        id: employee._id,\n                        value: employee._id,\n                        label: employee.name,\n                        deptId: employee.department._id\n                    });\n                });\n                this.setState({ emps });\n            });\n\n            // test for doctors\n            await axios\n                .get('/doctors', {\n                    headers: {\n                        'x-auth': localStorage.getItem('authToken')\n                    }\n                })\n                .then((response) => {\n                  console.log(response.data);\n                    const doctors = response.data;\n                    let docs = [];\n                    doctors.map((doctor) => {\n                        return docs.push({\n                            id: doctor._id,\n                            value: doctor._id,\n                            label: doctor.name,\n                            deptId: doctor.department._id\n                        });\n                    });\n                    this.setState({ docs });\n                }).catch(err=>{\n                  console.log(err);\n                })\n            // test for doctors\n    }\n\n    handleMultiChange = async (option) => {\n        console.log(option);\n        // console.log(this.state.employeesnew);\n\n        if (option === null) {\n            this.setState(() => {\n                while (this.state.employee.length) {\n                    this.state.employee.pop();\n                }\n                // this.state.employee.splice(0, this.state.employee.length);\n            });\n        } else {\n            // this.state.employee.splice(0, this.state.employee.length);\n            while (this.state.employee.length) {\n                this.state.employee.pop();\n            }\n            option.map((it) => {\n                this.state.employee.push(it);\n                return it;\n            });\n        }\n        //   if (this.state.employeesnew.length !== 0) {\n        //     await this.state.employeesnew.map((itemo) => {\n        //       this.setState(() => {\n        //         console.log(option.id);\n        //         this.state.employee.push(itemo);\n        //         this.state.employeesnew.splice(0, this.state.employeesnew.length);\n        //       });\n        //     });\n        //   } else {\n\n        //      await option.map((itemo) => {\n        //      const index = this.state.employee.indexOf(itemo);\n        //      if (index > -1) {\n        //        this.state.employee.splice(index);\n        //      }\n        //        this.setState(() => {\n        //          console.log(itemo);\n        //          this.state.employee.push(itemo);\n        //        });\n        //      });\n\n        //   }\n        // }\n\n        console.log('employee', this.state.employee);\n        // console.log(\"option\", option);\n        // //   }\n    };\n\n    //for doctors\n    handleMultiChangeForDoctors = async (option) => {\n        console.log(option);\n        // console.log(this.state.employeesnew);\n\n        if (option === null) {\n            this.setState(() => {\n                while (this.state.doctor.length) {\n                    this.state.doctor.pop();\n                }\n                // this.state.employee.splice(0, this.state.employee.length);\n            });\n        } else {\n            // this.state.employee.splice(0, this.state.employee.length);\n            while (this.state.doctor.length) {\n                this.state.doctor.pop();\n            }\n            option.map((it) => {\n                this.state.doctor.push(it);\n                return it;\n            });\n        }\n        //   if (this.state.employeesnew.length !== 0) {\n        //     await this.state.employeesnew.map((itemo) => {\n        //       this.setState(() => {\n        //         console.log(option.id);\n        //         this.state.employee.push(itemo);\n        //         this.state.employeesnew.splice(0, this.state.employeesnew.length);\n        //       });\n        //     });\n        //   } else {\n\n        //      await option.map((itemo) => {\n        //      const index = this.state.employee.indexOf(itemo);\n        //      if (index > -1) {\n        //        this.state.employee.splice(index);\n        //      }\n        //        this.setState(() => {\n        //          console.log(itemo);\n        //          this.state.employee.push(itemo);\n        //        });\n        //      });\n\n        //   }\n        // }\n\n        console.log('doctor', this.state.doctor);\n        // console.log(\"option\", option);\n        // //   }\n    };\n    //for doctors\n\n    render() {\n        return (\n            <div>\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label htmlFor='code'>Code</Label>\n                        <Input\n                            type='text'\n                            id='code'\n                            value={this.state.code}\n                            onChange={this.handleChange}\n                            name='code'\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label htmlFor='customer'>Customer</Label>\n                        <Input\n                            type='select'\n                            id='customer'\n                            value={this.state.customer}\n                            onChange={this.handleChange}\n                            name='customer'\n                        >\n                            <option value=''>select</option>\n                            {this.props.customers.map((customer) => {\n                                return (\n                                    <option key={customer._id} value={customer._id}>\n                                        {customer.name}{' '}\n                                    </option>\n                                );\n                            })}\n                        </Input>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label htmlFor='department'>Department</Label>\n                        <Input\n                            type='select'\n                            id='department'\n                            value={this.state.department}\n                            onChange={this.handleChange}\n                            name='department'\n                        >\n                            <option value=''>\n                                select\n                            </option>\n                            {this.props.departments.map((department) => {\n                                return (\n                                    <option key={department._id} value={department._id}>\n                                        {department.name}\n                                    </option>\n                                );\n                            })}\n                        </Input>\n                    </FormGroup>\n\n                    <label>Employees</label>\n                    <Select\n                        name='employee'\n                        placeholder='Select'\n                        defaultValue={this.state.employee}\n                        options={this.state.employeesnew}\n                        onChange={this.handleMultiChange}\n                        isMulti\n                    />\n                    {console.log(this.state.employeenew)}\n                    <br />\n                    <label>Doctors</label>\n                    {console.log(this.state.doctor)}\n\n                    <Select\n                        name='doctor'\n                        placeholder='Select'\n                        defaultValue={this.state.doctor}\n                        options={this.state.doctorsnew}\n                        onChange={this.handleMultiChangeForDoctors}\n                        isMulti\n                    />\n                    {console.log(this.state.doctornew)}\n                    <br />\n                    <FormGroup>\n                        <Label htmlFor='message'>Message</Label>\n                        <Input\n                            type='textarea'\n                            value={this.state.message}\n                            onChange={this.handleChange}\n                            name='message'\n                        />\n                    </FormGroup>\n\n                    <FormGroup tag='fieldset'>\n                        <legend>Priority</legend>\n                        <FormGroup check>\n                            <Label check>\n                                <Input\n                                    type='radio'\n                                    value='high'\n                                    checked={this.state.priority === 'high'}\n                                    onChange={this.handleChange}\n                                    name='priority'\n                                />{' '}\n                                High\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                                <Input\n                                    type='radio'\n                                    value='medium'\n                                    checked={this.state.priority === 'medium'}\n                                    onChange={this.handleChange}\n                                    name='priority'\n                                />{' '}\n                                Medium\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                                <Input\n                                    type='radio'\n                                    value='low'\n                                    checked={this.state.priority === 'low'}\n                                    onChange={this.handleChange}\n                                    name='priority'\n                                />{' '}\n                                Low\n                            </Label>\n                        </FormGroup>\n                    </FormGroup>\n                    <br />\n\n                    <Button type='submit'>Submit</Button>\n                </Form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    customers: state.customers,\n    departments: state.departments,\n    employees: state.employees,\n    doctors:state.doctors\n  };\n};\n\nexport default connect(mapStateToProps)(TicketForm);\n","import React from 'react'\n\nimport TicketForm from './Form'\n\nimport {connect} from 'react-redux'\nimport {startAddTicket} from '../../../actions/tickets'\n\nclass TicketNew extends React.Component{\n    handleSubmit = (ticket,x) => {\n         console.log(ticket);\n         console.log(x);\n        const redirect = () => this.props.history.push('/tickets')\n        // const redirect = () => alert(\"testing\")\n        this.props.dispatch(startAddTicket(ticket,x,redirect))\n        setTimeout(() => {\n            window.location.reload();\n        }, 1000);\n}\n\n    render(){\n        return (\n            <div>\n                <h2>Add Ticket</h2>\n                <TicketForm handleSubmit = {this.handleSubmit}/>\n            </div>\n        )\n    }\n}\n\n\n\nexport default connect()(TicketNew)\n","import React from \"react\";\nimport axios from \"../../../config/axios\";\nimport Select from \"react-select\";\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\n\nimport { connect } from \"react-redux\";\n\nclass TicketForm extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log(props.ticket);\n        this.state = {\n            code: props.ticket ? props.ticket.code : '',\n            customer: props.ticket ? props.ticket.customer._id : '',\n            // department: props.ticket ? props.ticket.department._id : '',\n            department:'',\n            emps: [],\n            employee: props.ticket\n                ? props.ticket.employees.map((option) =>\n                      Object.assign(\n                          {},\n                          {\n                              id: option._id,\n                              value: option._id,\n                              label: option.name,\n                              deptId: option.department\n                          }\n                      )\n                  )\n                : [],\n            employeesnew: [],\n            // test\n            docs: [],\n            doctor: props.ticket\n                ? props.ticket.doctors.map((option) =>\n                      Object.assign(\n                          {},\n                          {\n                              id: option._id,\n                              value: option._id,\n                              label: option.name,\n                              deptId: option.department\n                          }\n                      )\n                  )\n                : [],\n            doctorsnew: [],\n            // test\n            message: props.ticket ? props.ticket.message : '',\n            priority: props.ticket ? props.ticket.priority : '',\n            isResolved: props.ticket ? props.ticket.isResolved : ''\n        };\n    }\n    handleChange = async (e) => {\n      const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        });\n\n        if (name === 'department') {\n            console.log(value);\n            // var arr = []\n\n            const test = await this.state.emps.filter((employee) => {\n                console.log(employee);\n                if (employee.deptId === value) {\n                    return employee;\n                }\n                return employee;\n            });\n            //  arr.push(test)\n\n            this.setState({\n                employeesnew: test\n            });\n            console.log('employeesnew', this.state.employeesnew);\n\n            // for doctors\n             const testdoc = await this.state.docs.filter((doctor) => {\n                 console.log(doctor);\n                 if (doctor.deptId === value) {\n                     return doctor;\n                 }\n                 return doctor;\n             });\n             //  arr.push(test)\n\n             this.setState({\n                 doctorsnew: testdoc\n             });\n             console.log('doctorsnew', this.state.doctorsnew);\n            // for doctors\n        }\n    };\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state.employee);\n        console.log(this.state.doctor);\n        const formData = {\n            code: this.state.code,\n            customer: this.state.customer,\n            department: this.state.department,\n            employees: this.state.employee,\n            message: this.state.message,\n            priority: this.state.priority,\n            isResolved: this.state.isResolved,\n            doctors:[],\n        };\n        console.log(formData.doctors);\n        console.log(typeof formData.doctors);\n        console.log(formData.employees);\n        console.log(typeof formData.employees);\n        this.props.ticket && (formData.id = this.props.ticket._id);\n        this.props.handleSubmit(formData, this.state.doctor);\n        console.log(formData);\n    };\n\n    async componentDidMount() {\n        await axios\n            .get('/employees', {\n                headers: {\n                    'x-auth': localStorage.getItem('authToken')\n                }\n            })\n            .then((response) => {\n                console.log(response.data);\n                const employees = response.data;\n                let emps = [];\n                employees.map((employee) => {\n                    return emps.push({\n                        id: employee._id,\n                        value: employee._id,\n                        label: employee.name,\n                        deptId: employee.department._id\n                    });\n                });\n                this.setState({ emps });\n            });\n\n            // test for doctors\n            await axios\n                .get('/doctors', {\n                    headers: {\n                        'x-auth': localStorage.getItem('authToken')\n                    }\n                })\n                .then((response) => {\n                  console.log(response.data);\n                    const doctors = response.data;\n                    let docs = [];\n                    doctors.map((doctor) => {\n                        return docs.push({\n                            id: doctor._id,\n                            value: doctor._id,\n                            label: doctor.name,\n                            deptId: doctor.department._id\n                        });\n                    });\n                    this.setState({ docs });\n                }).catch(err=>{\n                  console.log(err);\n                })\n            // test for doctors\n    }\n\n    handleMultiChange = async (option) => {\n        console.log(option);\n        // console.log(this.state.employeesnew);\n\n        if (option === null) {\n            this.setState(() => {\n                while (this.state.employee.length) {\n                    this.state.employee.pop();\n                }\n                // this.state.employee.splice(0, this.state.employee.length);\n            });\n        } else {\n            // this.state.employee.splice(0, this.state.employee.length);\n            while (this.state.employee.length) {\n                this.state.employee.pop();\n            }\n            option.map((it) => {\n                this.state.employee.push(it);\n                return it;\n            });\n        }\n        //   if (this.state.employeesnew.length !== 0) {\n        //     await this.state.employeesnew.map((itemo) => {\n        //       this.setState(() => {\n        //         console.log(option.id);\n        //         this.state.employee.push(itemo);\n        //         this.state.employeesnew.splice(0, this.state.employeesnew.length);\n        //       });\n        //     });\n        //   } else {\n\n        //      await option.map((itemo) => {\n        //      const index = this.state.employee.indexOf(itemo);\n        //      if (index > -1) {\n        //        this.state.employee.splice(index);\n        //      }\n        //        this.setState(() => {\n        //          console.log(itemo);\n        //          this.state.employee.push(itemo);\n        //        });\n        //      });\n\n        //   }\n        // }\n\n        console.log('employee', this.state.employee);\n        // console.log(\"option\", option);\n        // //   }\n    };\n\n    //for doctors\n    handleMultiChangeForDoctors = async (option) => {\n        console.log(option);\n        // console.log(this.state.employeesnew);\n\n        if (option === null) {\n            this.setState(() => {\n                while (this.state.doctor.length) {\n                    this.state.doctor.pop();\n                }\n                // this.state.employee.splice(0, this.state.employee.length);\n            });\n        } else {\n            // this.state.employee.splice(0, this.state.employee.length);\n            while (this.state.doctor.length) {\n                this.state.doctor.pop();\n            }\n            option.map((it) => {\n                this.state.doctor.push(it);\n                return it;\n            });\n        }\n        //   if (this.state.employeesnew.length !== 0) {\n        //     await this.state.employeesnew.map((itemo) => {\n        //       this.setState(() => {\n        //         console.log(option.id);\n        //         this.state.employee.push(itemo);\n        //         this.state.employeesnew.splice(0, this.state.employeesnew.length);\n        //       });\n        //     });\n        //   } else {\n\n        //      await option.map((itemo) => {\n        //      const index = this.state.employee.indexOf(itemo);\n        //      if (index > -1) {\n        //        this.state.employee.splice(index);\n        //      }\n        //        this.setState(() => {\n        //          console.log(itemo);\n        //          this.state.employee.push(itemo);\n        //        });\n        //      });\n\n        //   }\n        // }\n\n        console.log('doctor', this.state.doctor);\n        // console.log(\"option\", option);\n        // //   }\n    };\n    //for doctors\n\n    render() {\n        return (\n            <div>\n                <Form onSubmit={this.handleSubmit}>\n                    <FormGroup>\n                        <Label htmlFor='code'>Code</Label>\n                        <Input\n                            type='text'\n                            id='code'\n                            value={this.state.code}\n                            onChange={this.handleChange}\n                            name='code'\n                        />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label htmlFor='customer'>Customer</Label>\n                        <Input\n                            type='select'\n                            id='customer'\n                            value={this.state.customer}\n                            onChange={this.handleChange}\n                            name='customer'\n                        >\n                            <option value=''>select</option>\n                            {this.props.customers.map((customer) => {\n                                return (\n                                    <option key={customer._id} value={customer._id}>\n                                        {customer.name}{' '}\n                                    </option>\n                                );\n                            })}\n                        </Input>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label htmlFor='department'>Department</Label>\n                        <Input\n                            type='select'\n                            id='department'\n                            value={this.state.department}\n                            onChange={this.handleChange}\n                            name='department'\n                        >\n                            <option value=''>\n                                select\n                            </option>\n                            {this.props.departments.map((department) => {\n                                return (\n                                    <option key={department._id} value={department._id}>\n                                        {department.name}\n                                    </option>\n                                );\n                            })}\n                        </Input>\n                    </FormGroup>\n\n                    <label>Employees</label>\n                    <Select\n                        name='employee'\n                        placeholder='Select'\n                        defaultValue={this.state.employee}\n                        options={this.state.employeesnew}\n                        onChange={this.handleMultiChange}\n                        isMulti\n                    />\n                    {console.log(this.state.employeenew)}\n                    <br />\n                    <label>Doctors</label>\n                    {console.log(this.state.doctor)}\n\n                    <Select\n                        name='doctor'\n                        placeholder='Select'\n                        defaultValue={this.state.doctor}\n                        options={this.state.doctorsnew}\n                        onChange={this.handleMultiChangeForDoctors}\n                        isMulti\n                    />\n                    {console.log(this.state.doctornew)}\n                    <br />\n                    <FormGroup>\n                        <Label htmlFor='message'>Message</Label>\n                        <Input\n                            type='textarea'\n                            value={this.state.message}\n                            onChange={this.handleChange}\n                            name='message'\n                        />\n                    </FormGroup>\n\n                    <FormGroup tag='fieldset'>\n                        <legend>Priority</legend>\n                        <FormGroup check>\n                            <Label check>\n                                <Input\n                                    type='radio'\n                                    value='high'\n                                    checked={this.state.priority === 'high'}\n                                    onChange={this.handleChange}\n                                    name='priority'\n                                />{' '}\n                                High\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                                <Input\n                                    type='radio'\n                                    value='medium'\n                                    checked={this.state.priority === 'medium'}\n                                    onChange={this.handleChange}\n                                    name='priority'\n                                />{' '}\n                                Medium\n                            </Label>\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                                <Input\n                                    type='radio'\n                                    value='low'\n                                    checked={this.state.priority === 'low'}\n                                    onChange={this.handleChange}\n                                    name='priority'\n                                />{' '}\n                                Low\n                            </Label>\n                        </FormGroup>\n                    </FormGroup>\n                    <br />\n\n                    <Button type='submit'>Submit</Button>\n                </Form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    customers: state.customers,\n    departments: state.departments,\n    employees: state.employees,\n    doctors:state.doctors\n  };\n};\n\nexport default connect(mapStateToProps)(TicketForm);\n","import React from 'react'\n\nimport TicketForm from './Form'\n\nimport {connect} from 'react-redux'\nimport {startAddTicket} from '../../../actions/tickets'\n\nclass TicketNew extends React.Component{\n    handleSubmit = (ticket,x) => {\n         console.log(ticket);\n         console.log(x);\n        const redirect = () => this.props.history.push('/tickets')\n        // const redirect = () => alert(\"testing\")\n        this.props.dispatch(startAddTicket(ticket,x,redirect))\n        setTimeout(() => {\n            window.location.reload();\n        }, 1000);\n}\n\n    render(){\n        return (\n            <div>\n                <h2>Add Ticket</h2>\n                <TicketForm handleSubmit = {this.handleSubmit}/>\n            </div>\n        )\n    }\n}\n\n\n\nexport default connect()(TicketNew)\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport {connect} from 'react-redux'\n\nimport { ListGroup, ListGroupItem } from 'reactstrap'\n\n class TicketShow extends React.Component {\n     findCustomer = (id) => {\n         return this.props.customers.find((customer) => customer._id === id);\n     };\n\n     findDepartment = (id) => {\n         return this.props.departments.find((department) => department._id === id);\n     };\n\n     findEmployees = (id) => {\n         return this.props.employees.find((employee) => employee._id === id);\n     };\n\n     // for doctors\n     findDoctors = (id) => {\n         return this.props.doctors.find((doctor) => doctor._id === id);\n     };\n     // for doctors\n\n     render() {\n         return (\n             <div>\n                 {this.props.ticket && (\n                     <div>\n                         <h2>Code Number - {this.props.ticket.code}</h2>\n                         <ListGroup>\n                             <ListGroupItem>\n                                 Customer -\n                                 {this.props.ticket.customer.name\n                                     ? this.props.ticket.customer.name\n                                     : this.findCustomer(this.props.ticket.customer).name}{' '}\n                             </ListGroupItem>\n                             <ListGroupItem>\n                                 Employees -{' '}\n                                 {this.props.ticket.employees[0].name\n                                     ? this.props.ticket.employees.map((emp, index) =>\n                                           index === this.props.ticket.employees.length - 1\n                                               ? `${emp.name}`\n                                               : `${emp.name}, `\n                                       )\n                                     : this.props.ticket.employees.map((emp, index) =>\n                                           index === this.props.ticket.employees.length - 1\n                                               ? `${this.findEmployees(emp).name}`\n                                               : `${this.findEmployees(emp).name}, `\n                                       )}{' '}\n                             </ListGroupItem>\n                             <ListGroupItem>\n                                 Doctors -{' '}\n                                 {this.props.ticket.doctors.length>0 && this.props.ticket.doctors[0].name\n                                     ? this.props.ticket.doctors.map((doc, index) =>\n                                           index === this.props.ticket.doctors.length - 1\n                                               ? `${doc.name}`\n                                               : `${doc.name}, `\n                                       )\n                                     : this.props.ticket.doctors.map((doc, index) =>\n                                           index === this.props.ticket.doctors.length - 1\n                                               ? `${this.findDoctors(doc).name}`\n                                               : `${this.findDoctors(doc).name}, `\n                                       )}{' '}\n                             </ListGroupItem>\n                             <ListGroupItem>\n                                 Department -{' '}\n                                 {this.props.ticket.department.name\n                                     ? this.props.ticket.department.name\n                                     : this.findDepartment(this.props.ticket.department).name}\n                             </ListGroupItem>\n                             <ListGroupItem>Message - {this.props.ticket.message}</ListGroupItem>\n                             <ListGroupItem>Priority - {this.props.ticket.priority}</ListGroupItem>\n                         </ListGroup>\n                         <Link className='ml-1' to={`/tickets/edit/${this.props.ticket._id}`}>\n                             Edit\n                         </Link>\n                     </div>\n                 )}\n             </div>\n         );\n     }\n }\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    return {\n        ticket: state.tickets.find(ticket=> ticket._id === id ),\n        employees: state.employees,\n        customers: state.customers,\n        departments: state.departments,\n        doctors:state.doctors\n    }\n}\n\nexport default connect(mapStateToProps)(TicketShow)\n","import React from 'react'\nimport TicketForm from './Form'\n\nimport {connect} from 'react-redux'\n// import {startEditTicket} from '../../actions/tickets'\nimport {startEditTicket} from '../../../actions/tickets'\n\nclass TicketEdit extends React.Component{\n    handleSubmit = (ticket,x) => {\n        console.log(ticket);\n\n        const redirect = () => this.props.history.push(`/tickets/${ticket.id}`)\n        // const redirect = () => console.log(\"new testing\");\n        this.props.dispatch(startEditTicket(ticket,x,redirect))\n\n    }\n    render(){\n        return (\n            <div>\n                {this.props.ticket && (\n                    <div>\n                        <h2>Edit Ticket</h2>\n                         {this.props.ticket && <TicketForm ticket = {this.props.ticket} handleSubmit = {this.handleSubmit}/>}\n                     </div>\n                )}\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    console.log(state.tickets);\n    return {\n        ticket: state.tickets.find(ticket=>ticket._id === id)\n    }\n}\n\n\nexport default connect(mapStateToProps)(TicketEdit)\n","import React from 'react';\n// import { Link } from 'react-router-dom';\n\nimport { Container, Row, Col } from 'reactstrap';\n\nimport Chart from 'react-google-charts';\n\nimport { connect } from 'react-redux';\n\nfunction Reports(props) {\n    const pendingTickets = props.tickets.filter((ticket) => !ticket.isResolved);\n    const pendingHighTickets = pendingTickets.filter((ticket) => ticket.priority === 'high').length;\n    const pendingMediumTickets = pendingTickets.filter(\n        (ticket) => ticket.priority === 'medium'\n    ).length;\n    const pendingLowTickets = pendingTickets.filter((ticket) => ticket.priority === 'low').length;\n    const piedata = [\n        ['Priority', 'Tickets per Category'],\n        ['High', pendingHighTickets],\n        ['Medium', pendingMediumTickets],\n        ['Low', pendingLowTickets]\n    ];\n    const options = {\n        title: 'Ticket Priority',\n        is3D: true\n    };\n\n    const chartdata = [];\n    const Header = ['Departments', 'Tickets', { role: 'style' }];\n    chartdata.push(Header);\n    props.departments.map((dept) => {\n        const temp = [];\n        temp.push(`${dept.name}`);\n        temp.push(\n            pendingTickets.filter(\n                (ticket) =>\n                    (ticket.department.name\n                        ? ticket.department.name\n                        : this.findDepartment(ticket.department).name) === dept.name\n            ).length\n        );\n        temp.push('blue');\n        chartdata.push(temp);\n        return dept;\n    });\n\n\n    const chartdataTickets = [\n        ['Tickets', 'Counts', { role: 'style' }],\n        ['Unresolved', pendingTickets.length, 'color: gray'],\n        ['Resolved', props.tickets.length - pendingTickets.length, 'color: #76A7FA']\n    ];\n\n    return (\n        <Container>\n            <h3 className='d-flex justify-content-center mb-3'>Data on Pending Tickets</h3>\n            <Row>\n                <Col md='6'>\n                    <Chart\n                        chartType='PieChart'\n                        width='100%'\n                        height='400px'\n                        data={piedata}\n                        options={options}\n                    />\n                </Col>\n\n                <Col md='6'>\n                    <Chart\n                        chartType='Bar'\n                        width='100%'\n                        height='400px'\n                        data={chartdata}\n                        options={{\n                            chart: {\n                                title: 'Tickets By Department'\n                            }\n                        }}\n                    />\n                </Col>\n                <Col md='6'>\n                    <Chart\n                        chartType='Bar'\n                        width='100%'\n                        height='400px'\n                        data={chartdataTickets}\n                        options={{\n                            chart: {\n                                title: 'Tickets By Department'\n                            }\n                        }}\n                    />\n                </Col>\n            </Row>\n        </Container>\n    );\n}\nconst mapsStateToProps = (state) => {\n    console.log(state.departments);\n    console.log(state.tickets);\n    return {\n        tickets: state.tickets,\n        departments: state.departments\n    };\n};\n\nexport default connect(mapsStateToProps)(Reports);\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nconst Sidebar = () => {\r\n  return (\r\n      <div className='sidebar'>\r\n          <div className='sidebar__element'>\r\n              <h3>Setting</h3>\r\n          </div>\r\n          <div className='sidebar__element mt-1 btn' style={{ border: '1px solid red' }}>\r\n              <Link to='/users/adprofile' style={{ color: 'black', textDecoration: 'none' }}>\r\n                  Edit Profile\r\n              </Link>\r\n          </div>\r\n          <div className='sidebar__element mt-1 btn' style={{ border: '1px solid red' }}>\r\n              <Link to='/updatePassword' style={{ color: 'black', textDecoration: 'none' }}>\r\n                  Change Password\r\n              </Link>\r\n          </div>\r\n      </div>\r\n  );\r\n};\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst ErrorMessage = ({ variant = 'info', children }) => {\r\n    return (\r\n        <Alert variant={variant} style={{ fontSize: 20 }}>\r\n            <strong>{children}</strong>\r\n        </Alert>\r\n    );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, { useState,useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n// import DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\"\r\nimport { Toaster } from 'react-hot-toast';\r\nimport { RadioGroup,Radio } from 'react-radio-group';\r\n// import moment from \"moment\";\r\n// import { Country, State, City } from 'country-state-city';\r\n// import { FormGroup, Label, Input } from 'reactstrap';\r\n\r\nimport { Form } from 'react-bootstrap';\r\n\r\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\r\n\r\nimport {updateProfile} from \"../../../actions/user\"\r\n// import axios from 'axios';\r\n// import Loader from \"./Loader\";\r\nimport Sidebar from './Sidebar';\r\nimport '../../user/commonProfile.css';\r\nimport LoadingComponent from 'components/loading';\r\nimport ErrorMessage from 'components/ErrorMessage';\r\n\r\nconst Profile = () => {\r\n    // console.log(Country.getAllCountries());\r\n    // console.log(State.getAllStates());\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useSelector((state) => state.user);\r\n                // console.log(user);\r\n    const history=useHistory();\r\n\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n\r\n    const [gender, setGender] = useState(null);\r\n    const [newgender, setNewender] = useState(null);\r\n    const [phone, setPhone] = useState('');\r\n    const [dob, setDob] = useState(\"\");\r\n    const [address, setAddress] = useState('');\r\n\r\n    const [pin, setPin] = useState('');\r\n\r\n    const [country, setCountry] = useState('');\r\n    const [state, setState] = useState('');\r\n    const [city, setCity] = useState('');\r\n\r\n    const [pic, setPic] = useState();\r\n    const [picMessage, setPicMessage] = useState();\r\n    const [photoloading, setPhotoloading] = useState(false);\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            history.push('/');\r\n        } else {\r\n            setName(user.username);\r\n            setEmail(user.email);\r\n            setPic(user.pic);\r\n            setPin(user.pin);\r\n            setGender(user.gender);\r\n            setPhone(user.phone);\r\n            setDob(user.dob);\r\n            setAddress(user.address);\r\n            setCountry(user.country);\r\n            setState(user.state);\r\n            setCity(user.city);\r\n        }\r\n    }, [history, user]);\r\n\r\n    useEffect(() => {\r\n    //  setGender(gender)\r\n    setNewender(gender)\r\n    }, [gender])\r\n\r\n    const postDetails = (pics) => {\r\n        setPhotoloading(true);\r\n        setPicMessage(null);\r\n        console.log(pics);\r\n        if (pics !== undefined) {\r\n            if (pics.type === 'image/jpeg' || pics.type === 'image/png') {\r\n                const data = new FormData();\r\n                data.append('file', pics);\r\n                data.append('upload_preset', 'ml_default');\r\n                data.append('cloud_name', 'vivekbhore');\r\n                fetch('https://api.cloudinary.com/v1_1/vivekbhore/image/upload', {\r\n                    method: 'post',\r\n                    body: data\r\n                })\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        setPic(data.url.toString());\r\n                        setPhotoloading(false);\r\n                        console.log(pic);\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err);\r\n                        setPhotoloading(false);\r\n                    });\r\n            } else {\r\n                setPhotoloading(false);\r\n                return setPicMessage('Please Select an Image');\r\n            }\r\n        } else {\r\n            setPhotoloading(false);\r\n        }\r\n    };\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const redirect=()=>{\r\n        history.push('/users/adprofile');\r\n        window.location.reload()\r\n        //   alert(\"testing\")\r\n       }\r\n\r\n\r\n\r\n        dispatch(\r\n            updateProfile(\r\n                { name, email, pic, pin, state, country, city, phone, newgender, dob, address },\r\n                redirect\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>User Dashboard</title>\r\n                <meta name='description' content='User Dashboard' />\r\n            </Helmet>\r\n            <Toaster\r\n                position='top-center'\r\n                reverseOrder={false}\r\n                toastOptions={{\r\n                    style: {\r\n                        fontSize: '14px'\r\n                    }\r\n                }}\r\n            />\r\n            <div\r\n                className='container rounded bg-white mb-5 mt-100'\r\n                style={{ boxShadow: 'rgb(38, 57, 77) 0px 20px 30px -10px' }}\r\n            >\r\n                <div className='row'>\r\n                    <div className='col-md-3 border-right'>\r\n                        <div className='d-flex flex-column align-items-center text-center p-3 py-5'>\r\n                            <img\r\n                                alt={name}\r\n                                className='rounded-circle mt-5 sidebar__element'\r\n                                src={pic}\r\n                                width='100px'\r\n                                height='100px'\r\n                            />\r\n                        </div>\r\n                        <Sidebar />\r\n                    </div>\r\n                    <div className='col-md-5 border-right'>\r\n                        <div className='p-3 py-5'>\r\n                            <div className='d-flex justify-content-between align-items-center mb-3'>\r\n                                <h4 className='text-right'>Profile Settings</h4>\r\n                            </div>\r\n                            <div className='row mt-2'>\r\n                                <div className='col-md-12'>\r\n                                    <label className='labels'>Name</label>\r\n                                    <input\r\n                                        type='text'\r\n                                        className='form-control'\r\n                                        placeholder='first name'\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className='row mt-3'>\r\n                                <div className='col-md-12'>\r\n                                    <label className='labels'>Gender</label>\r\n                                    <br />\r\n                                    <RadioGroup\r\n                                        name='gender'\r\n                                        selectedValue={gender}\r\n                                        onChange={(e) => setGender(e)}\r\n                                    >\r\n                                        {/* {console.log(gender)} */}\r\n                                        <Radio value='male' />\r\n                                        male\r\n                                        <br />\r\n                                        <Radio value='female' />\r\n                                        female\r\n                                    </RadioGroup>\r\n                                    <br />\r\n                                </div>\r\n                                <div className='col-md-12'>\r\n                                    <label className='labels'>Date of Birth</label>\r\n                                    {/* {console.log(dob)} */}\r\n                                    {/* {console.log(typeof dob)} */}\r\n\r\n                                    {/* <DatePicker\r\n                                        selected={dob}\r\n                                        onChange={(date) => setDob(date)}\r\n                                        dateFormat='yyyy/MM/dd'\r\n                                        isClearable\r\n                                        showYearDropdown\r\n                                        scrollableMonthYearDropdown\r\n                                    /> */}\r\n                                    <input\r\n                                        type='date'\r\n                                        value={dob}\r\n                                        onChange={(e) => setDob(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className='col-md-12'>\r\n                                    <label className='labels'>Address</label>\r\n                                    <input\r\n                                        type='text'\r\n                                        onChange={(e) => setAddress(e.target.value)}\r\n                                        className='form-control'\r\n                                        placeholder='enter address'\r\n                                        value={address}\r\n                                    />\r\n                                </div>\r\n                                <div className='col-md-12'>\r\n                                    <label className='labels'>City</label>\r\n                                    <input\r\n                                        type='text'\r\n                                        className='form-control'\r\n                                        placeholder='city'\r\n                                        value={city}\r\n                                        onChange={(e) => setCity(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className='row mt-3'>\r\n                                <div className='col-md-12'>\r\n                                    <Form className='sidebar'>\r\n                                        {/* <span className='font-weight-bold'>{name}</span>\r\n                                <br />\r\n                                <span className='text-black-50'>{email}</span> */}\r\n                                        <span> </span>\r\n                                        {/* deve */}\r\n                                        {picMessage && (\r\n                                            <ErrorMessage variant='danger'>\r\n                                                {picMessage}\r\n                                            </ErrorMessage>\r\n                                        )}\r\n                                        <br />\r\n                                        <br />\r\n                                        <div\r\n                                            style={{\r\n                                                display: 'flex',\r\n                                                // marginLeft: '140px',\r\n                                                wordWrap: 'break-word'\r\n                                            }}\r\n                                        >\r\n                                            <Form.File\r\n                                                onChange={(e) => postDetails(e.target.files[0])}\r\n                                                id='custom-file'\r\n                                                type='image/png'\r\n                                                // label='Upload'\r\n                                                style={{}}\r\n                                                custom\r\n                                                aria-label='File browser example'\r\n                                            />\r\n                                            <br />\r\n                                            {photoloading && <LoadingComponent loading />}\r\n                                        </div>\r\n                                        {/* deve */}\r\n                                    </Form>\r\n                                </div>\r\n                                <div className='col-md-12'>\r\n                                    <Form>\r\n                                        <Form.Label>Change Profile Picture</Form.Label>\r\n                                    </Form>\r\n                                </div>\r\n                            </div>\r\n                            <div className='mt-5 text-center'>\r\n                                <button\r\n                                    className='btn btn-primary profile-button'\r\n                                    type='button'\r\n                                    onClick={submitHandler}\r\n                                >\r\n                                    Update Profile\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-md-4'>\r\n                        <div className='p-3 py-5'>\r\n                            <div className='d-flex justify-content-between align-items-center experience'>\r\n                                <span>Edit Experience</span>\r\n                            </div>\r\n                            <br />\r\n                            <div className='col-md-12'>\r\n                                <label className='labels'>Email ID</label>\r\n                                <input\r\n                                    type='text'\r\n                                    className='form-control'\r\n                                    placeholder='enter email id'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                            </div>{' '}\r\n                            <br />\r\n                            <div className='col-md-12'>\r\n                                <label className='labels'>PhoneNumber</label>\r\n                                <input\r\n                                    type='text'\r\n                                    className='form-control'\r\n                                    placeholder='enter phone number'\r\n                                    value={phone}\r\n                                    onChange={(e) => setPhone(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className='col-md-12'>\r\n                                <label className='labels'>Country</label>\r\n                                <CountryDropdown\r\n                                    className='form-control'\r\n                                    value={country}\r\n                                    onChange={(country) => setCountry(country)}\r\n                                />\r\n                            </div>\r\n                            <div className='col-md-12'>\r\n                                <label className='labels'>State/Region</label>\r\n                                <RegionDropdown\r\n                                    className='form-control'\r\n                                    country={country}\r\n                                    value={state}\r\n                                    onChange={(state) => setState(state)}\r\n                                />\r\n                            </div>\r\n                            <div className='col-md-12'>\r\n                                <label className='labels'>Postal code</label>\r\n                                <input\r\n                                    type='text'\r\n                                    className='form-control'\r\n                                    placeholder='pin code'\r\n                                    value={pin}\r\n                                    onChange={(e) => setPin(e.target.value)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Profile;\r\n\r\n///\r\n\r\n///\r\n","//inside app password change\r\nimport React,{ useState} from \"react\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Toaster } from \"react-hot-toast\";\r\n// import \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"../../../../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\n// import { updatePasswordAction } from \"../../actions/user\";\r\nimport { updatePasswordAction } from \"../../../actions/user\";\r\n\r\n\r\n\r\nconst ChangePassword = () => {\r\n//   const { push } = useHistory();\r\n  const [state, setState] = useState({\r\n    current: \"\",\r\n    newPassword: \"\",\r\n    userId: null,\r\n  });\r\n  const dispatch = useDispatch();\r\n  \tconst user = useSelector((state) => state.user);\r\n      // console.log(user)\r\n\r\n\r\n\r\n  const updatePassword = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updatePasswordAction({\r\n        current: state.current,\r\n        newPassword: state.newPassword,\r\n        userId: user._id,\r\n      })\r\n    );\r\n     setState({ ...state, current: \"\", newPassword: \"\" });\r\n  };\r\n\r\n  return 1 ? (\r\n    <div className=\"container mt-100\">\r\n      <Helmet>\r\n        <title>Update Password</title>\r\n        <meta name=\"description\" content=\"update the user password\" />\r\n      </Helmet>\r\n      <Toaster\r\n        position=\"top-right\"\r\n        reverseOrder={false}\r\n        toastOptions={{\r\n          style: {\r\n            fontSize: \"14px\",\r\n          },\r\n        }}\r\n      />\r\n      <div className=\"row ml-minus-15 mr-minus-15\">\r\n        <div className=\"col-3 p-15\">\r\n          <Sidebar />\r\n        </div>\r\n        <div className=\"col-9 p-15\">\r\n          <div className=\"card\">\r\n            <h3 className=\"card__h3\">Change Password</h3>\r\n            <form onSubmit={updatePassword}>\r\n              <div className=\"group\">\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"\"\r\n                  className=\"group__control\"\r\n                  placeholder=\"Current Password\"\r\n                  onChange={(e) =>\r\n                    setState({ ...state, current: e.target.value })\r\n                  }\r\n                  value={state.current}\r\n                />\r\n              </div>\r\n              <div className=\"group\">\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"\"\r\n                  className=\"group__control\"\r\n                  placeholder=\"New Password\"\r\n                  onChange={(e) =>\r\n                    setState({ ...state, newPassword: e.target.value })\r\n                  }\r\n                  value={state.newPassword}\r\n                />\r\n              </div>\r\n              <div className=\"group\">\r\n                <button\r\n                  type=\"submit\"\r\n                  value=\"Update Password\"\r\n                  className=\"btn btn-success\"\r\n                >\r\n                  Update Password\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <h1>Loading</h1>\r\n  );\r\n};\r\nexport default ChangePassword;\r\n","import React from 'react';\n// import { Link } from 'react-router-dom';\n\nimport { Container, Row, Col } from 'reactstrap';\n\nimport Chart from 'react-google-charts';\n\nimport { connect } from 'react-redux';\n\nfunction Reports(props) {\n    const pendingTickets = props.tickets.filter((ticket) => !ticket.isResolved);\n    const pendingHighTickets = pendingTickets.filter((ticket) => ticket.priority === 'high').length;\n    const pendingMediumTickets = pendingTickets.filter(\n        (ticket) => ticket.priority === 'medium'\n    ).length;\n    const pendingLowTickets = pendingTickets.filter((ticket) => ticket.priority === 'low').length;\n    const piedata = [\n        ['Priority', 'Tickets per Category'],\n        ['High', pendingHighTickets],\n        ['Medium', pendingMediumTickets],\n        ['Low', pendingLowTickets]\n    ];\n    const options = {\n        title: 'Ticket Priority',\n        is3D: true\n    };\n\n    const chartdata = [];\n    const Header = ['Departments', 'Tickets', { role: 'style' }];\n    chartdata.push(Header);\n    props.departments.map((dept) => {\n        const temp = [];\n        temp.push(`${dept.name}`);\n        temp.push(\n            pendingTickets.filter(\n                (ticket) =>\n                    (ticket.department.name\n                        ? ticket.department.name\n                        : this.findDepartment(ticket.department).name) === dept.name\n            ).length\n        );\n        temp.push('blue');\n        chartdata.push(temp);\n        return dept;\n    });\n\n\n    const chartdataTickets = [\n        ['Tickets', 'Counts', { role: 'style' }],\n        ['Unresolved', pendingTickets.length, 'color: gray'],\n        ['Resolved', props.tickets.length - pendingTickets.length, 'color: #76A7FA']\n    ];\n\n    return (\n        <Container>\n            <h3 className='d-flex justify-content-center mb-3'>Data on Pending Tickets</h3>\n            <Row>\n                <Col md='6'>\n                    <Chart\n                        chartType='PieChart'\n                        width='100%'\n                        height='400px'\n                        data={piedata}\n                        options={options}\n                    />\n                </Col>\n\n                <Col md='6'>\n                    <Chart\n                        chartType='Bar'\n                        width='100%'\n                        height='400px'\n                        data={chartdata}\n                        options={{\n                            chart: {\n                                title: 'Tickets By Department'\n                            }\n                        }}\n                    />\n                </Col>\n                <Col md='6'>\n                    <Chart\n                        chartType='Bar'\n                        width='100%'\n                        height='400px'\n                        data={chartdataTickets}\n                        options={{\n                            chart: {\n                                title: 'Tickets By Department'\n                            }\n                        }}\n                    />\n                </Col>\n            </Row>\n        </Container>\n    );\n}\nconst mapsStateToProps = (state) => {\n    console.log(state.departments);\n    console.log(state.tickets);\n    return {\n        tickets: state.tickets,\n        departments: state.departments\n    };\n};\n\nexport default connect(mapsStateToProps)(Reports);\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport {connect} from 'react-redux'\n\nimport { Table,Button } from 'reactstrap'\n\nimport swal from 'sweetalert2'\n\n// import {startRemoveCustomer} from '../../actions/customers'\nimport {startRemoveCustomer} from '../../../actions/customers'\n\nclass CustomersList extends React.Component {\n\n    handleRemove = (id) => {\n        console.log(this.props.ticket)\n        var flag = 0;\n        this.props.ticket.map(tick=>{\n            if(tick.customer._id===id)\n            {\n              flag=1;\n\n            }\n        })\n       if(flag===0){\n         swal.fire({\n             title: \"Are you want to Delete?\",\n             icon: \"warning\",\n             buttons: true,\n             dangerMode: true,\n           })\n           .then((confirmRemove) => {\n             if (confirmRemove) {\n                 swal.fire(\n                     '',\n                     'You deleted successfully!',\n                     'success'\n                   )\n               this.props.dispatch(startRemoveCustomer(id))\n             }\n           })\n       }\n       else{\n         alert(\"cant delete customer, please delete all tickets of this customer first \")\n         flag=0\n       }\n\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <h2>Customers - {this.props.customers.length}</h2>\n\n                <Table striped>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Mobile</th>\n                            <th>Actions</th>\n                            <th>Remove</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.customers.map((customer,index)=>{\n                            return (\n                                <tr key ={customer._id}>\n                                    <td>{index+1}</td>\n                                    <td>{customer.name}</td>\n                                    <td>{customer.email}</td>\n                                    <td>{customer.mobile}</td>\n                                    <td>\n                                        <Link to={`/subcustomers/${customer._id}`}>\n                                        <Button color=\"info\">show</Button></Link>\n                                        </td>\n                                    <td>\n                                        <Button color=\"danger\" onClick={()=>{\n                                            this.handleRemove(customer._id)\n                                            }}>remove</Button></td>\n\n                                </tr>\n                            )\n\n                        })}\n                    </tbody>\n\n                </Table>\n\n                <Link to=\"subcustomers/new\" className=\"btn btn-primary\">Add Customer</Link>\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = (state) => {\n    return {\n      customers: state.customers,\n      ticket: state.tickets,\n    };\n}\n\nexport default connect(mapStateToProps)(CustomersList)","import React from 'react'\nimport { Button, Form, FormGroup, Label, Input} from 'reactstrap'\n\n\nclass CustomerForm extends React.Component { \n    constructor(props) {\n        console.log('form customer constructor')\n        super(props) \n        this.state = {\n            name: props.customer?props.customer.name : '',\n            email: props.customer?props.customer.email : '', \n            mobile: props.customer?props.customer.mobile : ''\n           \n        }\n      \n    }\n    \n\n    handleChange = (e) =>{\n        this.setState({ \n            [e.target.name] : e.target.value \n        })\n    }\n\n    \n    handleSubmit  = (e) => {\n        e.preventDefault()\n        const formData = {\n            name : this.state.name,\n            email : this.state.email,\n            mobile : this.state.mobile\n        }\n        console.log(formData)\n        this.props.handleSubmit(formData)\n    }\n    render() {\n        console.log('form customer render')\n        return (\n            <div> \n                <Form onSubmit={this.handleSubmit}> \n                    <FormGroup>\n                        <Label htmlFor=\"name\">Name</Label>\n                        <Input type=\"text\" id=\"name\" value={this.state.name} onChange={this.handleChange} name=\"name\" /> \n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label htmlFor=\"email\">Email</Label>\n                        <Input type=\"text\"  id=\"email\" value={this.state.email} onChange={this.handleChange} name=\"email\" />\n                    </FormGroup>\n​\n                    <FormGroup>\n                        <Label htmlFor=\"mobile\">Mobile</Label>\n                        <Input type=\"text\" value={this.state.mobile} onChange={this.handleChange} name=\"mobile\" />\n                    </FormGroup>\n​\n                    <Button type=\"submit\" value=\"submit\" >Submit</Button>\n                </Form> \n            </div>\n        )\n    }\n}\n\nexport default CustomerForm ","import React from 'react'\nimport CustomerForm from './Form'\n\nimport {connect} from 'react-redux'\nimport { startAddCustomer } from '../../../actions/customers'\n\n\nclass CustomerNew extends React.Component {\n    handleSubmit = (customer) => {\n\n        const redirect = () => this.props.history.push('/customers')\n        this.props.dispatch(startAddCustomer(customer,redirect))\n    }\n\n    render(){\n        return (\n            <div>\n                <h2>Add Customer</h2>\n                <CustomerForm handleSubmit={this.handleSubmit}/>\n            </div>\n        )\n    }\n}\n\nexport default connect()(CustomerNew)","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport axios from '../../../config/axios'\n\nimport {connect} from 'react-redux'\nimport {Card, Button, CardText, CardBody, Col, Row,\n    CardTitle, Container } from 'reactstrap'\n\n\n\nclass CustomerShow extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            tickets: []\n        }\n    }\n\n    componentDidMount(){\n        const id = this.props.match.params.id\n        axios.get(`/customers/${id}`,{\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then(response=>{\n             console.log(response.data);  \n            this.setState({tickets:response.data.tickets})\n\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n    }\n    findCustomer =  (id) => {\n        return this.props.customers.find(customer => customer._id === id )\n    }\n\n    findDepartment = (id) => {\n        return this.props.departments.find(department => department._id === id)\n    }\n\n    findEmployees = (id) => {\n        return this.props.employees.find(employee => employee._id === id)\n    }\n\n    render(){\n        return(\n            <div className=\"mt-3\">\n                {this.props.customer && (\n                    <Row>\n                    <Col md=\"9\">\n                         <h3>{this.props.customer.name} - {this.props.customer.email}</h3>\n                    </Col>\n                    <Col md= \"3\">\n                        <Link to={`/subcustomers/edit/${this.props.customer._id}`}> <h3>Edit Details</h3> </Link>\n                    </Col>\n\n                    </Row>\n                )}\n                <Container>\n                    <Row><Col><h6>Customer Tickets-{this.state.tickets.length}</h6></Col></Row>\n                    <Row>\n                        {\n                            this.state.tickets.map(ticket=>{\n                                console.log(ticket)\n                                return (\n                                    <Col md=\"3\"className=\"mb-1\" key={ticket._id}>\n                                        <Card>\n                                            <CardTitle className=\"text-center\">{ticket.code}</CardTitle>\n                                            <CardBody>\n                                                <CardText>Message : {ticket.message}</CardText>\n                                                <CardText> Ticket Status: {ticket.isResolved?<span style={{color:\"green\"}}>Resolved</span>:<span style={{color:\"red\"}}>Pending</span>}</CardText>\n                                                <Link to={`/subtickets/${ticket._id}`}><Button color=\"primary\">View Tickets</Button></Link>\n                                            </CardBody>\n                                        </Card>\n                                    </Col>\n\n                                )\n\n                            })\n                        }\n\n                    </Row>\n\n\n                </Container>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    return {\n        customer: state.customers.find(customer=> customer._id === id),\n        customers : state.customers,\n        departments: state.departments,\n        employees: state.employees\n    }\n}\n\nexport default connect(mapStateToProps)(CustomerShow)","import React from 'react'\nimport CustomerForm from './Form'\n\nimport {connect} from 'react-redux'\nimport { startEditCustomer } from '../../../actions/customers'\n\n class CustomerEdit extends React.Component{\n\n    handleSubmit = (customer) => {\n        const id = this.props.match.params.id\n        const redirect = () => this.props.history.push(`/customers/${id}`)\n        this.props.dispatch(startEditCustomer(customer,id,redirect))\n    }\n    render(){\n        return (\n            <div>\n                {this.props.customer && (\n                    <div>\n                    <h2>Edit Customer</h2>\n                     {this.props.customer.name && <CustomerForm customer = {this.props.customer} handleSubmit = {this.handleSubmit} />}\n                    </div>\n                )}\n\n            </div>\n        )}\n}\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    return {\n        customer: state.customers.find(customer=>customer._id == id)\n    }\n}\n\nexport default connect(mapStateToProps)(CustomerEdit)","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport {connect} from 'react-redux'\n\nimport { Table,Button } from 'reactstrap' \n\nimport swal from 'sweetalert2'\n\nimport {startRemoveDoctor} from '../../../actions/doctors'\n\n\nclass DoctorsList extends React.Component {\n\n    handleRemove = (id) => {\n        console.log(this.props.ticket);\n        var flag = 0;\n        this.props.ticket.map((tick) => {\n          tick.doctors.map(emp=>{\n              if(emp._id===id)\n              {\n                  flag=1;\n              }\n              return emp;\n          })\n          return tick;\n        });\n        if(flag===1)\n        {\n            alert(\"Cant delete doctor, please delete all tickets assigned to this doctor first\")\n        }\n       else{\n         swal.fire({\n             title: \"Are you sure you want to Delete?\",\n             icon: \"warning\",\n             buttons: true,\n             dangerMode: true,\n           })\n           .then((confirmRemove) => {\n               console.log(confirmRemove);\n             if (confirmRemove.isConfirmed) {\n               swal.fire(\"Successfully Deleted\", {\n                 icon: \"success\",\n               });\n               this.props.dispatch(startRemoveDoctor(id))\n             }\n           })\n       }\n    }\n\n    findDepartment(id) {\n         return this.props.departments.find(dept => dept._id === id)\n    }\n\n\n\n    render(){\n        return(\n            <div>\n                    <h2>Doctors - {this.props.doctors.length}</h2>\n                    <Table striped>\n                    <thead>\n                        <tr>\n                            <th>Id</th>\n                            <th>Name</th>\n                            <th>Email</th>\n                            <th>Mobile</th>\n                            <th>Department</th>\n                            <th>Actions</th>\n                            <th>Remove</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                                {this.props.doctors.map((doctor,index) => {\n                                    return (\n                                        <tr key={index}>\n                                            {console.log(this.props.doctors)}\n                                        <td>{index+1}</td>\n                                        <td>{doctor.name}</td>\n                                        <td>{doctor.email}</td>\n                                        <td>{doctor.mobile}</td>\n                                        <td>{doctor.department.name ? doctor.department.name : this.findDepartment(doctor.department).name}</td>\n                                        <td><Link to={`/subdoctors/${doctor._id}`}><Button color=\"info\">show</Button></Link></td>\n                                        <td><Button color=\"danger\" onClick = {()=>{\n                                             this.handleRemove(doctor._id)\n                                        }}>Remove</Button></td>\n                                    </tr>\n                                    )\n\n                                })}\n\n                   </tbody>\n\n                   </Table>\n                    <Link to=\"/subdoctors/new\" className=\"btn btn-primary\">Add Doctor</Link>\n            </div>\n            )\n        }\n    }\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n      doctors: state.doctors,\n      departments: state.departments,\n      ticket: state.tickets,\n    };\n}\n\nexport default connect(mapStateToProps)(DoctorsList);","import React from 'react'\nimport { Button, Form, FormGroup, Label, Input} from 'reactstrap'\n\nimport {connect} from 'react-redux'\n\n\n\nclass DoctorForm extends React.Component {\n    constructor(props){\n        super(props)\n        console.log(props.doctor)\n        this.state = {\n            name: props.doctor ? props.doctor.name : '',\n            email: props.doctor ? props.doctor.email : '',\n            mobile: props.doctor ? props.doctor.mobile : '',\n            department: props.doctor ? props.doctor.department._id : '',\n            id: props.doctor ? props.doctor._id : ''\n        };\n    }\n\n        handleChange = (e) => {\n            this.setState({\n                [e.target.name]:e.target.value\n            })\n        }\n\n        handleSubmit = (e) => {\n            e.preventDefault()\n            const formData = {\n                name:this.state.name,\n                email:this.state.email,\n                mobile:this.state.mobile,\n                department:this.state.department,\n                id:this.state.id\n            }\n            console.log(formData)\n            this.props.handleSubmit(formData)\n        }\n\n        // componentWillReceiveProps(nextProps){\n        //     if(nextProps.employee !== undefined){\n        //     const {name,email,mobile,department} = nextProps.employee\n        //     this.setState({name,email,mobile,department})\n        //     }\n        // }\n\n\n    render(){\n        //\n        return(\n            <div>\n                <Form onSubmit={this.handleSubmit}>\n\n                    <FormGroup>\n                    <Label htmlFor=\"name\">Name</Label>\n                    <Input type=\"text\" id=\"name\" value={this.state.name} onChange={this.handleChange} name=\"name\"/>\n                    </FormGroup>\n\n                    <FormGroup>\n                    <Label htmlFor=\"email\">Email</Label>\n                        <Input type=\"text\" id=\"email\" value={this.state.email} onChange={this.handleChange} name=\"email\"/>\n                    </FormGroup>\n\n                    <FormGroup>\n                    <Label htmlFor=\"mobile\">Mobile</Label>\n                        <Input type=\"text\" id=\"mobile\" value={this.state.mobile} onChange={this.handleChange} name=\"mobile\"/>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label htmlFor=\"department\">Department</Label>\n                        <Input type=\"select\" id=\"department\" value={this.state.department} onChange={this.handleChange} name=\"department\">\n                        <option value=\"\">select</option>\n                        {this.props.departments.map(department=>{\n                             return < option key={department._id} value={department._id}>{department.name} </option>\n                        })}\n                        </Input>\n                    </FormGroup>\n                    <Button type=\"submit\" value=\"submit\">Submit</Button>\n                </Form>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    return {\n        departments: state.departments\n    }\n}\n\nexport default connect(mapStateToProps)(DoctorForm);","import React from 'react'\nimport DoctorForm from './Form'\n\n\nimport {connect} from 'react-redux'\n// import {startAddEmployee} from '../../actions/employees'\nimport {startAddDoctor} from '../../../actions/doctors'\n\nclass DoctorNew extends React.Component{\n\n    handleSubmit = (doctor) => {\n\n            const redirect = () => this.props.history.push('/doctors')\n            this.props.dispatch(startAddDoctor(doctor,redirect))\n        }\n\n\n    render(){\n        return (\n            <div>\n                    <h2>Add Doctor</h2>\n                    <DoctorForm handleSubmit = {this.handleSubmit}/>\n\n            </div>\n        )\n    }\n}\n\nexport default connect()(DoctorNew);","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport {connect} from 'react-redux'\n\n\nclass DoctorShow extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            tickets: []\n        }\n    }\n\n    render(){\n        return (\n            <div>\n                {this.props.doctor && (\n                    <div>\n                        <h2>\n                            {this.props.doctor.name} - {this.props.doctor.email}\n                        </h2>\n                        <Link to={`/subdoctors/edit/${this.props.doctor._id}`}>Edit</Link>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    return {\n        doctor: state.doctors.find((doctor) => doctor._id === id)\n    };\n}\n\nexport default connect(mapStateToProps)(DoctorShow);","import React from 'react'\nimport DoctorForm from './Form'\n\n\nimport {connect} from 'react-redux'\nimport { startEditDoctor } from '../../../actions/doctors'\n\n\nclass DoctorEdit extends React.Component{\n\n\n    handleSubmit = (doctor) => {\n        const id = this.props.match.params.id\n        console.log(id)\n\n        const redirect = () => this.props.history.push(`/subdoctors/${doctor.id}`)\n        this.props.dispatch(startEditDoctor(doctor,redirect))\n    }\n\n    render(){\n        return (\n            <div>\n            {this.props.doctor && (\n                <div>\n                    <h2>Edit Doctor</h2>\n\n                    {this.props.doctor.name &&  <DoctorForm doctor = {this.props.doctor} handleSubmit = {this.handleSubmit}/>}\n                </div>\n            )}\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    return {\n        doctor: state.doctors.find(doctor=> doctor._id === id)\n    }\n}\n\nexport default connect(mapStateToProps)(DoctorEdit);","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { TabContent, Button, TabPane, Nav, NavItem, NavLink, Table } from 'reactstrap';\nimport classnames from 'classnames';\n\nimport { connect } from 'react-redux';\n\nclass TicketTab extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeTab: '1'\n        };\n    }\n\n    toggle = (tab) => {\n        if (this.state.activeTab !== tab) {\n            this.setState({ activeTab: tab });\n        }\n    };\n\n    findCustomer = async (id) => {\n        const temp = await this.props.customers.find((customer) => customer._id === id);\n        return temp;\n    };\n\n    findDepartment = async (id) => {\n        const temp2 = await this.props.departments.find((department) => department._id === id);\n        return temp2;\n    };\n\n    findEmployees = async (id) => {\n        const temp3 = await this.props.employees.find((employee) => employee._id === id);\n        return temp3;\n    };\n\n    // doctors test\n    findDoctors = async (id) => {\n        const temp4 = await this.props.doctors.find((doctor) => doctor._id === id);\n        return temp4;\n    };\n\n    // doctors test\n\n    render() {\n        const { tickets } = this.props;\n        return (\n            <div>\n                <Nav tabs className='mb-3'>\n                    <NavItem>\n                        <NavLink\n                            className={classnames({ active: this.state.activeTab === '1' })}\n                            onClick={() => {\n                                this.toggle('1');\n                            }}\n                        >\n                            <div style={{ cursor: 'pointer' }}>Pending</div>\n                        </NavLink>\n                    </NavItem>\n                    <NavItem>\n                        <NavLink\n                            className={classnames({ active: this.state.activeTab === '2' })}\n                            onClick={() => {\n                                this.toggle('2');\n                            }}\n                        >\n                            <div style={{ cursor: 'pointer' }}>Completed</div>\n                        </NavLink>\n                    </NavItem>\n                </Nav>\n                <TabContent activeTab={this.state.activeTab}>\n                    <TabPane tabId='1'>\n                        {this.state.activeTab === '1' ? (\n                            <div>\n                                <h2>\n                                    Tickets -{' '}\n                                    {tickets.filter((ticket) => !ticket.isResolved).length}\n                                </h2>\n                                <Table striped>\n                                    <thead>\n                                        <tr>\n                                            <th>Code No</th>\n                                            <th>Customer</th>\n                                            <th>Department</th>\n                                            <th>Employees</th>\n                                            <th>Doctors</th>\n                                            <th>Message</th>\n                                            <th>Priority</th>\n                                            <th>Actions</th>\n                                            {/* <th>Remove</th> */}\n                                            <th>Complete</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {tickets.map((ticket) => {\n                                            return (\n                                                !ticket.isResolved && (\n                                                    <tr key={ticket._id}>\n                                                        <td>{ticket.code}</td>\n                                                        <td>\n                                                            {ticket.customer.name\n                                                                ? ticket.customer.name\n                                                                : this.findCustomer(ticket.customer)\n                                                                      .name}{' '}\n                                                        </td>\n                                                        <td>\n                                                            {ticket.department.name\n                                                                ? ticket.department.name\n                                                                : this.findDepartment(\n                                                                      ticket.department\n                                                                  ).name}{' '}\n                                                        </td>\n                                                        <td>\n                                                            {ticket.employees[0].name\n                                                                ? ticket.employees.map(\n                                                                      (emp, index) =>\n                                                                          index ===\n                                                                          ticket.employees.length -\n                                                                              1\n                                                                              ? `${emp.name}`\n                                                                              : `${emp.name}, `\n                                                                  )\n                                                                : ticket.employees.map(\n                                                                      (emp, index) =>\n                                                                          index ===\n                                                                          ticket.employees.length -\n                                                                              1\n                                                                              ? `${\n                                                                                    this.findEmployees(\n                                                                                        emp\n                                                                                    ).name\n                                                                                }`\n                                                                              : `${\n                                                                                    this.findEmployees(\n                                                                                        emp\n                                                                                    ).name\n                                                                                }, `\n                                                                  )}\n                                                        </td>\n                                                        {/* doctors test */}\n                                                        <td>\n                                                            {ticket.doctors[0].name\n                                                                ? ticket.doctors.map((doc, index) =>\n                                                                      index ===\n                                                                      ticket.doctors.length - 1\n                                                                          ? `${doc.name}`\n                                                                          : `${doc.name}, `\n                                                                  )\n                                                                : ticket.doctors.map((doc, index) =>\n                                                                      index ===\n                                                                      ticket.doctors.length - 1\n                                                                          ? `${\n                                                                                this.findDoctors(\n                                                                                    doc\n                                                                                ).name\n                                                                            }`\n                                                                          : `${\n                                                                                this.findDoctors(\n                                                                                    doc\n                                                                                ).name\n                                                                            }, `\n                                                                  )}\n                                                        </td>\n                                                        {/* doctors test */}\n                                                        <td>{ticket.message} </td>\n                                                        <td>{ticket.priority}</td>\n                                                        <td>\n                                                            <Link to={`/subtickets/${ticket._id}`}>\n                                                                <Button color='info'>show</Button>\n                                                            </Link>\n                                                        </td>\n                                                        {/* <td>\n                                                            <Button\n                                                                color='danger'\n                                                                onClick={() => {\n                                                                    this.props.handleRemove(\n                                                                        ticket._id\n                                                                    );\n                                                                }}\n                                                            >\n                                                                remove\n                                                            </Button>\n                                                        </td> */}\n                                                        <td>\n                                                            <input\n                                                                type='checkbox'\n                                                                onClick={() => {\n                                                                    this.props.handleResolve(\n                                                                        ticket._id\n                                                                    );\n                                                                }}\n                                                            />\n                                                        </td>\n                                                    </tr>\n                                                )\n                                            );\n                                        })}\n                                    </tbody>\n                                </Table>\n                            </div>\n                        ) : null}\n                    </TabPane>\n                    <TabPane tabId='2'>\n                        {this.state.activeTab === '2' ? (\n                            <div>\n                                <h2>\n                                    Tickets - {tickets.filter((ticket) => ticket.isResolved).length}\n                                </h2>\n                                <Table striped>\n                                    <thead>\n                                        <tr>\n                                            <th>Code No</th>\n                                            <th>Customer</th>\n                                            <th>Department</th>\n                                            <th>Employees</th>\n                                            <th>Doctors</th>\n                                            <th>Message</th>\n                                            <th>Priority</th>\n                                            <th>Actions</th>\n                                            {/* <th>Remove</th> */}\n                                            <th>Not Complete</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {tickets.map((ticket) => {\n                                            console.log(ticket);\n                                            return (\n                                                ticket.isResolved && (\n                                                    <tr key={ticket._id}>\n                                                        <td>{ticket.code}</td>\n                                                        <td>\n                                                            {ticket.customer.name\n                                                                ? ticket.customer.name\n                                                                : this.findCustomer(ticket.customer)\n                                                                      .name}{' '}\n                                                        </td>\n                                                        {console.log(ticket.department)}\n                                                        <td>\n                                                            {ticket.department.name\n                                                                ? ticket.department.name\n                                                                : this.findCustomer(\n                                                                      ticket.department\n                                                                  ).name}{' '}\n                                                        </td>\n                                                        <td>\n                                                            {ticket.employees[0].name\n                                                                ? ticket.employees.map(\n                                                                      (emp, index) =>\n                                                                          index ===\n                                                                          ticket.employees.length -\n                                                                              1\n                                                                              ? `${emp.name}`\n                                                                              : `${emp.name}, `\n                                                                  )\n                                                                : ticket.employees.map(\n                                                                      (emp, index) =>\n                                                                          index ===\n                                                                          ticket.employees.length -\n                                                                              1\n                                                                              ? `${\n                                                                                    this.findEmployees(\n                                                                                        emp\n                                                                                    ).name\n                                                                                }`\n                                                                              : `${\n                                                                                    this.findEmployees(\n                                                                                        emp\n                                                                                    ).name\n                                                                                }, `\n                                                                  )}\n                                                        </td>\n\n                                                        {/* doctors test sec */}\n                                                        <td>\n                                                            {ticket.doctors[0].name\n                                                                ? ticket.doctors.map(\n                                                                      (doc, index) =>\n                                                                          index ===\n                                                                          ticket.doctors.length -\n                                                                              1\n                                                                              ? `${doc.name}`\n                                                                              : `${doc.name}, `\n                                                                  )\n                                                                : ticket.doctors.map(\n                                                                      (doc, index) =>\n                                                                          index ===\n                                                                          ticket.doctors.length -\n                                                                              1\n                                                                              ? `${\n                                                                                    this.findDoctors(\n                                                                                        doc\n                                                                                    ).name\n                                                                                }`\n                                                                              : `${\n                                                                                    this.findDoctors(\n                                                                                        doc\n                                                                                    ).name\n                                                                                }, `\n                                                                  )}\n                                                        </td>\n                                                        {/* doctors test sec */}\n\n                                                        <td>{ticket.message}</td>\n                                                        <td>{ticket.priority}</td>\n                                                        <td>\n                                                            <Link to={`/subtickets/${ticket._id}`}>\n                                                                <Button color='info'>show</Button>\n                                                            </Link>\n                                                        </td>\n                                                        {/* <td>\n                                                            <Button\n                                                                color='danger'\n                                                                onClick={() => {\n                                                                    this.props.handleRemove(\n                                                                        ticket._id\n                                                                    );\n                                                                }}\n                                                            >\n                                                                Remove\n                                                            </Button>\n                                                        </td> */}\n                                                        <td>\n                                                            <input\n                                                                type='checkbox'\n                                                                onClick={() => {\n                                                                    this.props.handleResolve(\n                                                                        ticket._id\n                                                                    );\n                                                                }}\n                                                            />\n                                                        </td>\n                                                    </tr>\n                                                )\n                                            );\n                                        })}\n                                    </tbody>\n                                </Table>\n                            </div>\n                        ) : null}\n                    </TabPane>\n                </TabContent>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        customers: state.customers,\n        departments: state.departments,\n        employees: state.employees,\n        doctors: state.doctors\n    };\n};\n\nexport default connect(mapStateToProps)(TicketTab);\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport TicketTab from './Tab'\n\nimport { Container, Row, Col } from 'reactstrap'\n\nimport swal from 'sweetalert2'\nimport {Progress} from 'reactstrap'\n\nimport {connect}  from 'react-redux'\n// import {startToggleResolve} from '../../actions/tickets'\nimport {startToggleResolve} from '../../../actions/tickets'\nimport {startRemoveTicket} from '../../../actions/tickets'\n\n\nclass TicketsList extends React.Component{\n    constructor(props){\n        console.log(props);\n        super(props)\n        this.state = {\n            search:'',\n            currentTickets: this.props.tickets\n        }\n    }\n\n    findDepartment = async (id) => {\n        const pleasewait = await this.props.departments.find(\n          (dept) => dept._id === id\n        );\n        return pleasewait;\n    }\n\n    handleRemove = (id) => {\n        swal.fire({\n            title: \"Are you sure you want to Delete?\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n          })\n          .then((confirmRemove) => {\n            if (confirmRemove) {\n              swal.fire(\"Successfully Deleted\", {\n                icon: \"success\",\n              });\n              this.props.dispatch(startRemoveTicket(id))\n              this.setState(prevState=>({\n                currentTickets: prevState.currentTickets.filter(ticket=>ticket._id !== id)\n            }))\n                }\n             })\n    }\n\n    handleResolve = (id) =>{\n        const ticket = this.props.tickets.find(ticket=>ticket._id === id)\n        const isResolved = ticket.isResolved\n\n        this.props.dispatch(startToggleResolve(id,isResolved))\n    }\n\n    handleSearch = (e) => {\n\n        let newTickets = this.props.tickets.filter(ticket=>ticket.code.includes(e.target.value))\n        this.setState({\n            search: e.target.value,\n            currentTickets: newTickets\n        })\n    }\n\n\n\n    calculatePercentage(){\n        const allTickets = this.props.tickets.length\n        const completedTickets = this.props.tickets.filter(ticket=>ticket.isResolved).length\n        const percent = Math.round((completedTickets/allTickets)*100)\n        return percent\n    }\n\n    render(){\n\n\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <form className=\"form-inline float-left mt-3\" onSubmit={this.handleSubmit}>\n                            <input className=\"form-control mr-sm-2\" type=\"search\"  placeholder=\"Search Code\" aria-label=\"Search\" onChange={this.handleSearch}/>\n                        </form>\n                    </Col>\n                    <Col>\n                    <div className=\"text-center\">Completed Tickets: {this.calculatePercentage()}%</div>\n                    <Progress className=\"mb-5\" striped value={`${this.calculatePercentage()}`}/>\n                    </Col>\n\n                </Row>\n                <Row> \n                <Col>\n                        {console.log(this.props)}\n                    <TicketTab tickets= {this.state.currentTickets.length === 0? this.props.tickets : this.state.currentTickets} handleResolve={this.handleResolve} handleRemove={this.handleRemove}/>\n\n                    <Link to =\"/subtickets/new\" className=\"mb-4 mt btn btn-primary\">Add Ticket</Link>\n                 </Col>\n\n\n\n             </Row>\n            </Container>\n        )\n\n    }\n}\n\nconst mapsStateToProps = (state) => {\n    console.log(state);\n    return {\n        tickets: state.tickets,\n        departments: state.departments\n    }\n}\n\nexport default connect(mapsStateToProps)(TicketsList)","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport {connect} from 'react-redux'\n\nimport { ListGroup, ListGroupItem } from 'reactstrap'\n\n class TicketShow extends React.Component {\n     findCustomer = (id) => {\n         return this.props.customers.find((customer) => customer._id === id);\n     };\n\n     findDepartment = (id) => {\n         return this.props.departments.find((department) => department._id === id);\n     };\n\n     findEmployees = (id) => {\n         return this.props.employees.find((employee) => employee._id === id);\n     };\n\n     // for doctors\n     findDoctors = (id) => {\n         return this.props.doctors.find((doctor) => doctor._id === id);\n     };\n     // for doctors\n\n     render() {\n         return (\n             <div>\n                 {this.props.ticket && (\n                     <div>\n                         <h2>Code Number - {this.props.ticket.code}</h2>\n                         <ListGroup>\n                             <ListGroupItem>\n                                 Customer -\n                                 {this.props.ticket.customer.name\n                                     ? this.props.ticket.customer.name\n                                     : this.findCustomer(this.props.ticket.customer).name}{' '}\n                             </ListGroupItem>\n                             <ListGroupItem>\n                                 Employees -{' '}\n                                 {this.props.ticket.employees[0].name\n                                     ? this.props.ticket.employees.map((emp, index) =>\n                                           index === this.props.ticket.employees.length - 1\n                                               ? `${emp.name}`\n                                               : `${emp.name}, `\n                                       )\n                                     : this.props.ticket.employees.map((emp, index) =>\n                                           index === this.props.ticket.employees.length - 1\n                                               ? `${this.findEmployees(emp).name}`\n                                               : `${this.findEmployees(emp).name}, `\n                                       )}{' '}\n                             </ListGroupItem>\n                             <ListGroupItem>\n                                 Doctors -{' '}\n                                 {this.props.ticket.doctors.length>0 && this.props.ticket.doctors[0].name\n                                     ? this.props.ticket.doctors.map((doc, index) =>\n                                           index === this.props.ticket.doctors.length - 1\n                                               ? `${doc.name}`\n                                               : `${doc.name}, `\n                                       )\n                                     : this.props.ticket.doctors.map((doc, index) =>\n                                           index === this.props.ticket.doctors.length - 1\n                                               ? `${this.findDoctors(doc).name}`\n                                               : `${this.findDoctors(doc).name}, `\n                                       )}{' '}\n                             </ListGroupItem>\n                             <ListGroupItem>\n                                 Department -{' '}\n                                 {this.props.ticket.department.name\n                                     ? this.props.ticket.department.name\n                                     : this.findDepartment(this.props.ticket.department).name}\n                             </ListGroupItem>\n                             <ListGroupItem>Message - {this.props.ticket.message}</ListGroupItem>\n                             <ListGroupItem>Priority - {this.props.ticket.priority}</ListGroupItem>\n                         </ListGroup>\n                         <Link className='ml-1' to={`/subtickets/edit/${this.props.ticket._id}`}>\n                             Edit\n                         </Link>\n                     </div>\n                 )}\n             </div>\n         );\n     }\n }\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    return {\n        ticket: state.tickets.find(ticket=> ticket._id === id ),\n        employees: state.employees,\n        customers: state.customers,\n        departments: state.departments,\n        doctors:state.doctors\n    }\n}\n\nexport default connect(mapStateToProps)(TicketShow)\n","import React from 'react'\nimport TicketForm from './Form'\n\nimport {connect} from 'react-redux'\n// import {startEditTicket} from '../../actions/tickets'\nimport {startEditTicket} from '../../../actions/tickets'\n\nclass TicketEdit extends React.Component{\n    handleSubmit = (ticket,x) => {\n        console.log(ticket);\n\n        const redirect = () => this.props.history.push(`/tickets/${ticket.id}`)\n        // const redirect = () => console.log(\"new testing\");\n        this.props.dispatch(startEditTicket(ticket,x,redirect))\n\n    }\n    render(){\n        return (\n            <div>\n                {this.props.ticket && (\n                    <div>\n                        <h2>Edit Ticket</h2>\n                         {this.props.ticket && <TicketForm ticket = {this.props.ticket} handleSubmit = {this.handleSubmit}/>}\n                     </div>\n                )}\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    console.log(state.tickets);\n    return {\n        ticket: state.tickets.find(ticket=>ticket._id === id)\n    }\n}\n\n\nexport default connect(mapStateToProps)(TicketEdit)\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className='sidebar__element'>\r\n                <h3>Setting</h3>\r\n            </div>\r\n            <div className='sidebar__element mt-1 btn' style={{ border: '1px solid red' }}>\r\n                <Link to='/subprofile' style={{ color: 'black', textDecoration: 'none' }}>\r\n                    Edit Profile\r\n                </Link>\r\n            </div>\r\n            <div className='sidebar__element mt-1 btn' style={{ border: '1px solid red' }}>\r\n                <Link to='/subupdatePassword' style={{ color: 'black', textDecoration: 'none' }}>\r\n                    Change Password\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Sidebar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n// import DatePicker from \"react-datepicker\";\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport { RadioGroup, Radio } from 'react-radio-group';\r\n// import moment from \"moment\";\r\n// import { Country, State, City } from 'country-state-city';\r\n// import { FormGroup, Label, Input } from 'reactstrap';\r\n\r\nimport { Form } from 'react-bootstrap';\r\n\r\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\r\n\r\nimport { updateProfile } from '../../../actions/user';\r\n// import axios from 'axios';\r\n// import Loader from \"./Loader\";\r\nimport Sidebar from './Sidebar';\r\nimport '../../user/commonProfile.css';\r\nimport LoadingComponent from 'components/loading';\r\nimport ErrorMessage from 'components/ErrorMessage';\r\n\r\nconst Profile = () => {\r\n    // console.log(Country.getAllCountries());\r\n    // console.log(State.getAllStates());\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useSelector((state) => state.user);\r\n    // console.log(user);\r\n    const history = useHistory();\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n\r\n    const [gender, setGender] = useState(null);\r\n    const [newgender, setNewender] = useState(null);\r\n    const [phone, setPhone] = useState('');\r\n    const [dob, setDob] = useState('');\r\n    const [address, setAddress] = useState('');\r\n\r\n    const [pin, setPin] = useState('');\r\n\r\n    const [country, setCountry] = useState('');\r\n    const [state, setState] = useState('');\r\n    const [city, setCity] = useState('');\r\n\r\n    const [pic, setPic] = useState();\r\n    const [picMessage, setPicMessage] = useState();\r\n    const [photoloading, setPhotoloading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            history.push('/');\r\n        } else {\r\n            setName(user.username);\r\n            setEmail(user.email);\r\n            setPic(user.pic);\r\n            setPin(user.pin);\r\n            setGender(user.gender);\r\n            setPhone(user.phone);\r\n            setDob(user.dob);\r\n            setAddress(user.address);\r\n            setCountry(user.country);\r\n            setState(user.state);\r\n            setCity(user.city);\r\n        }\r\n    }, [history, user]);\r\n\r\n    useEffect(() => {\r\n        //  setGender(gender)\r\n        setNewender(gender);\r\n    }, [gender]);\r\n\r\n    const postDetails = (pics) => {\r\n        setPhotoloading(true);\r\n        setPicMessage(null);\r\n        console.log(pics);\r\n        if (pics !== undefined) {\r\n            if (pics.type === 'image/jpeg' || pics.type === 'image/png') {\r\n                const data = new FormData();\r\n                data.append('file', pics);\r\n                data.append('upload_preset', 'ml_default');\r\n                data.append('cloud_name', 'vivekbhore');\r\n                fetch('https://api.cloudinary.com/v1_1/vivekbhore/image/upload', {\r\n                    method: 'post',\r\n                    body: data\r\n                })\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        setPic(data.url.toString());\r\n                        setPhotoloading(false);\r\n                        console.log(pic);\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err);\r\n                        setPhotoloading(false);\r\n                    });\r\n            } else {\r\n                setPhotoloading(false);\r\n                return setPicMessage('Please Select an Image');\r\n            }\r\n        } else {\r\n            setPhotoloading(false);\r\n        }\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const redirect = () => {\r\n            history.push('/subprofile');\r\n            window.location.reload(true);\r\n\r\n        };\r\n\r\n        dispatch(\r\n            updateProfile(\r\n                { name, email, pic, pin, state, country, city, phone, newgender, dob, address },\r\n                redirect\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>User Dashboard</title>\r\n                <meta name='description' content='User Dashboard' />\r\n            </Helmet>\r\n            <Toaster\r\n                position='top-center'\r\n                reverseOrder={false}\r\n                toastOptions={{\r\n                    style: {\r\n                        fontSize: '14px'\r\n                    }\r\n                }}\r\n            />\r\n            <div\r\n                className='container rounded bg-white mb-5 mt-100'\r\n                style={{ boxShadow: 'rgb(38, 57, 77) 0px 20px 30px -10px' }}\r\n            >\r\n                <div className='row'>\r\n                    <div className='col-md-3 border-right'>\r\n                        <div className='d-flex flex-column align-items-center text-center p-3 py-5'>\r\n                            <img\r\n                                alt={name}\r\n                                className='rounded-circle mt-5 sidebar__element'\r\n                                src={pic}\r\n                                width='100px'\r\n                                height='100px'\r\n                            />\r\n                        </div>\r\n                        <Sidebar />\r\n                    </div>\r\n                    <div className='col-md-5 border-right'>\r\n                        <div className='p-3 py-5'>\r\n                            <div className='d-flex justify-content-between align-items-center mb-3'>\r\n                                <h4 className='text-right'>Profile Settings</h4>\r\n                            </div>\r\n                            <div className='row mt-2'>\r\n                                <div className='col-md-12'>\r\n                                    <label className='labels'>Name</label>\r\n                                    <input\r\n                                        type='text'\r\n                                        className='form-control'\r\n                                        placeholder='first name'\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className='row mt-3'>\r\n                                <div className='col-md-12'>\r\n                                    <label className='labels'>Gender</label>\r\n                                    <br />\r\n                                    <RadioGroup\r\n                                        name='gender'\r\n                                        selectedValue={gender}\r\n                                        onChange={(e) => setGender(e)}\r\n                                    >\r\n                                        {/* {console.log(gender)} */}\r\n                                        <Radio value='male' />\r\n                                        male\r\n                                        <br />\r\n                                        <Radio value='female' />\r\n                                        female\r\n                                    </RadioGroup>\r\n                                    <br />\r\n                                </div>\r\n                                <div className='col-md-12'>\r\n                                    <label className='labels'>Date of Birth</label>\r\n                                    {/* {console.log(dob)} */}\r\n                                    {/* {console.log(typeof dob)} */}\r\n\r\n                                    {/* <DatePicker\r\n                                        selected={dob}\r\n                                        onChange={(date) => setDob(date)}\r\n                                        dateFormat='yyyy/MM/dd'\r\n                                        isClearable\r\n                                        showYearDropdown\r\n                                        scrollableMonthYearDropdown\r\n                                    /> */}\r\n                                    <input\r\n                                        type='date'\r\n                                        value={dob}\r\n                                        onChange={(e) => setDob(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className='col-md-12'>\r\n                                    <label className='labels'>Address</label>\r\n                                    <input\r\n                                        type='text'\r\n                                        onChange={(e) => setAddress(e.target.value)}\r\n                                        className='form-control'\r\n                                        placeholder='enter address'\r\n                                        value={address}\r\n                                    />\r\n                                </div>\r\n                                <div className='col-md-12'>\r\n                                    <label className='labels'>City</label>\r\n                                    <input\r\n                                        type='text'\r\n                                        className='form-control'\r\n                                        placeholder='city'\r\n                                        value={city}\r\n                                        onChange={(e) => setCity(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className='row mt-3'>\r\n                                <div className='col-md-12'>\r\n                                    <Form className='sidebar'>\r\n                                        {/* <span className='font-weight-bold'>{name}</span>\r\n                                <br />\r\n                                <span className='text-black-50'>{email}</span> */}\r\n                                        <span> </span>\r\n                                        {/* deve */}\r\n                                        {picMessage && (\r\n                                            <ErrorMessage variant='danger'>\r\n                                                {picMessage}\r\n                                            </ErrorMessage>\r\n                                        )}\r\n                                        <br />\r\n                                        <br />\r\n                                        <div\r\n                                            style={{\r\n                                                display: 'flex',\r\n                                                // marginLeft: '140px',\r\n                                                wordWrap: 'break-word'\r\n                                            }}\r\n                                        >\r\n                                            <Form.File\r\n                                                onChange={(e) => postDetails(e.target.files[0])}\r\n                                                id='custom-file'\r\n                                                type='image/png'\r\n                                                // label='Upload'\r\n                                                style={{}}\r\n                                                custom\r\n                                                aria-label='File browser example'\r\n                                            />\r\n                                            <br />\r\n                                            {photoloading && <LoadingComponent loading />}\r\n                                        </div>\r\n                                        {/* deve */}\r\n                                    </Form>\r\n                                </div>\r\n                                <div className='col-md-12'>\r\n                                    <Form>\r\n                                        <Form.Label>Change Profile Picture</Form.Label>\r\n                                    </Form>\r\n                                </div>\r\n                            </div>\r\n                            <div className='mt-5 text-center'>\r\n                                <button\r\n                                    className='btn btn-primary profile-button'\r\n                                    type='button'\r\n                                    onClick={submitHandler}\r\n                                >\r\n                                    Update Profile\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-md-4'>\r\n                        <div className='p-3 py-5'>\r\n                            <div className='d-flex justify-content-between align-items-center experience'>\r\n                                <span>Edit Experience</span>\r\n                            </div>\r\n                            <br />\r\n                            <div className='col-md-12'>\r\n                                <label className='labels'>Email ID</label>\r\n                                <input\r\n                                    type='text'\r\n                                    className='form-control'\r\n                                    placeholder='enter email id'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                            </div>{' '}\r\n                            <br />\r\n                            <div className='col-md-12'>\r\n                                <label className='labels'>PhoneNumber</label>\r\n                                <input\r\n                                    type='text'\r\n                                    className='form-control'\r\n                                    placeholder='enter phone number'\r\n                                    value={phone}\r\n                                    onChange={(e) => setPhone(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className='col-md-12'>\r\n                                <label className='labels'>Country</label>\r\n                                <CountryDropdown\r\n                                    className='form-control'\r\n                                    value={country}\r\n                                    onChange={(country) => setCountry(country)}\r\n                                />\r\n                            </div>\r\n                            <div className='col-md-12'>\r\n                                <label className='labels'>State/Region</label>\r\n                                <RegionDropdown\r\n                                    className='form-control'\r\n                                    country={country}\r\n                                    value={state}\r\n                                    onChange={(state) => setState(state)}\r\n                                />\r\n                            </div>\r\n                            <div className='col-md-12'>\r\n                                <label className='labels'>Postal code</label>\r\n                                <input\r\n                                    type='text'\r\n                                    className='form-control'\r\n                                    placeholder='pin code'\r\n                                    value={pin}\r\n                                    onChange={(e) => setPin(e.target.value)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Profile;\r\n\r\n///\r\n\r\n///\r\n","//inside app password change\r\nimport React,{ useState, useEffect } from \"react\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n// import \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\nimport { updatePasswordAction } from \"../../../actions/user\";\r\n\r\n\r\n\r\nconst ChangePassword = () => {\r\n//   const { push } = useHistory();\r\n  const [state, setState] = useState({\r\n    current: \"\",\r\n    newPassword: \"\",\r\n    userId: null,\r\n  });\r\n  const dispatch = useDispatch();\r\n  \tconst user = useSelector((state) => state.user);\r\n      // console.log(user)\r\n\r\n\r\n\r\n  const updatePassword = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updatePasswordAction({\r\n        current: state.current,\r\n        newPassword: state.newPassword,\r\n        userId: user._id,\r\n      })\r\n    );\r\n     setState({ ...state, current: \"\", newPassword: \"\" });\r\n  };\r\n\r\n  return 3 === 3 ? (\r\n    <div className=\"container mt-100\">\r\n      <Helmet>\r\n        <title>Update Password</title>\r\n        <meta name=\"description\" content=\"update the user password\" />\r\n      </Helmet>\r\n      <Toaster\r\n        position=\"top-right\"\r\n        reverseOrder={false}\r\n        toastOptions={{\r\n          style: {\r\n            fontSize: \"14px\",\r\n          },\r\n        }}\r\n      />\r\n      <div className=\"row ml-minus-15 mr-minus-15\">\r\n        <div className=\"col-3 p-15\">\r\n          <Sidebar />\r\n        </div>\r\n        <div className=\"col-9 p-15\">\r\n          <div className=\"card\">\r\n            <h3 className=\"card__h3\">Change Password</h3>\r\n            <form onSubmit={updatePassword}>\r\n              <div className=\"group\">\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"\"\r\n                  className=\"group__control\"\r\n                  placeholder=\"Current Password\"\r\n                  onChange={(e) =>\r\n                    setState({ ...state, current: e.target.value })\r\n                  }\r\n                  value={state.current}\r\n                />\r\n              </div>\r\n              <div className=\"group\">\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"\"\r\n                  className=\"group__control\"\r\n                  placeholder=\"New Password\"\r\n                  onChange={(e) =>\r\n                    setState({ ...state, newPassword: e.target.value })\r\n                  }\r\n                  value={state.newPassword}\r\n                />\r\n              </div>\r\n              <div className=\"group\">\r\n                <button\r\n                  type=\"submit\"\r\n                  value=\"Update Password\"\r\n                  className=\"btn btn-success\"\r\n                >\r\n                  Update Password\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <h1>Loading</h1>\r\n  );\r\n};\r\nexport default ChangePassword;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className='sidebar__element'>\r\n                <h3>Setting</h3>\r\n            </div>\r\n            <div className='sidebar__element mt-1 btn' style={{ border: '1px solid red' }}>\r\n                <Link to='/docprofile' style={{ color: 'black', textDecoration: 'none' }}>\r\n                    Edit Profile\r\n                </Link>\r\n            </div>\r\n            <div className='sidebar__element mt-1 btn' style={{ border: '1px solid red' }}>\r\n                <Link to='/docupdatePassword' style={{ color: 'black', textDecoration: 'none' }}>\r\n                    Change Password\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Sidebar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n// import DatePicker from \"react-datepicker\";\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport { RadioGroup, Radio } from 'react-radio-group';\r\n// import moment from \"moment\";\r\n// import { Country, State, City } from 'country-state-city';\r\n// import { FormGroup, Label, Input } from 'reactstrap';\r\n\r\nimport { Form } from 'react-bootstrap';\r\n\r\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\r\n\r\nimport { updateProfile } from '../../../actions/user';\r\n// import axios from 'axios';\r\n// import Loader from \"./Loader\";\r\nimport Sidebar from './Sidebar';\r\nimport '../../user/commonProfile.css';\r\nimport LoadingComponent from 'components/loading';\r\nimport ErrorMessage from 'components/ErrorMessage';\r\n\r\nconst Profile = () => {\r\n    // console.log(Country.getAllCountries());\r\n    // console.log(State.getAllStates());\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useSelector((state) => state.user);\r\n    // console.log(user);\r\n    const history = useHistory();\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n\r\n    const [gender, setGender] = useState(null);\r\n    const [newgender, setNewender] = useState(null);\r\n    const [phone, setPhone] = useState('');\r\n    const [dob, setDob] = useState('');\r\n    const [address, setAddress] = useState('');\r\n\r\n    const [pin, setPin] = useState('');\r\n\r\n    const [country, setCountry] = useState('');\r\n    const [state, setState] = useState('');\r\n    const [city, setCity] = useState('');\r\n\r\n    const [pic, setPic] = useState();\r\n    const [picMessage, setPicMessage] = useState();\r\n    const [photoloading, setPhotoloading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            history.push('/');\r\n        } else {\r\n            setName(user.username);\r\n            setEmail(user.email);\r\n            setPic(user.pic);\r\n            setPin(user.pin);\r\n            setGender(user.gender);\r\n            setPhone(user.phone);\r\n            setDob(user.dob);\r\n            setAddress(user.address);\r\n            setCountry(user.country);\r\n            setState(user.state);\r\n            setCity(user.city);\r\n        }\r\n    }, [history, user]);\r\n\r\n    useEffect(() => {\r\n        //  setGender(gender)\r\n        setNewender(gender);\r\n    }, [gender]);\r\n\r\n    const postDetails = (pics) => {\r\n        setPhotoloading(true);\r\n        setPicMessage(null);\r\n        console.log(pics);\r\n        if (pics !== undefined) {\r\n            if (pics.type === 'image/jpeg' || pics.type === 'image/png') {\r\n                const data = new FormData();\r\n                data.append('file', pics);\r\n                data.append('upload_preset', 'ml_default');\r\n                data.append('cloud_name', 'vivekbhore');\r\n                fetch('https://api.cloudinary.com/v1_1/vivekbhore/image/upload', {\r\n                    method: 'post',\r\n                    body: data\r\n                })\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        setPic(data.url.toString());\r\n                        setPhotoloading(false);\r\n                        console.log(pic);\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err);\r\n                        setPhotoloading(false);\r\n                    });\r\n            } else {\r\n                setPhotoloading(false);\r\n                return setPicMessage('Please Select an Image');\r\n            }\r\n        } else {\r\n            setPhotoloading(false);\r\n        }\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const redirect = () => {\r\n            history.push('/docprofile');\r\n            window.location.reload(true);\r\n            //   alert(\"testing\")\r\n        };\r\n\r\n        dispatch(\r\n            updateProfile(\r\n                { name, email, pic, pin, state, country, city, phone, newgender, dob, address },\r\n                redirect\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>User Dashboard</title>\r\n                <meta name='description' content='User Dashboard' />\r\n            </Helmet>\r\n            <Toaster\r\n                position='top-center'\r\n                reverseOrder={false}\r\n                toastOptions={{\r\n                    style: {\r\n                        fontSize: '14px'\r\n                    }\r\n                }}\r\n            />\r\n            <div\r\n                className='container rounded bg-white mb-5 mt-100'\r\n                style={{ boxShadow: 'rgb(38, 57, 77) 0px 20px 30px -10px' }}\r\n            >\r\n                <div className='row'>\r\n                    <div className='col-md-3 border-right'>\r\n                        <div className='d-flex flex-column align-items-center text-center p-3 py-5'>\r\n                            <img\r\n                                alt={name}\r\n                                className='rounded-circle mt-5 sidebar__element'\r\n                                src={pic}\r\n                                width='100px'\r\n                                height='100px'\r\n                            />\r\n                        </div>\r\n                        <Sidebar />\r\n                    </div>\r\n                    <div className='col-md-5 border-right'>\r\n                        <div className='p-3 py-5'>\r\n                            <div className='d-flex justify-content-between align-items-center mb-3'>\r\n                                <h4 className='text-right'>Profile Settings</h4>\r\n                            </div>\r\n                            <div className='row mt-2'>\r\n                                <div className='col-md-12'>\r\n                                    <label className='labels'>Name</label>\r\n                                    <input\r\n                                        type='text'\r\n                                        className='form-control'\r\n                                        placeholder='first name'\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className='row mt-3'>\r\n                                <div className='col-md-12'>\r\n                                    <label className='labels'>Gender</label>\r\n                                    <br />\r\n                                    <RadioGroup\r\n                                        name='gender'\r\n                                        selectedValue={gender}\r\n                                        onChange={(e) => setGender(e)}\r\n                                    >\r\n                                        {/* {console.log(gender)} */}\r\n                                        <Radio value='male' />\r\n                                        male\r\n                                        <br />\r\n                                        <Radio value='female' />\r\n                                        female\r\n                                    </RadioGroup>\r\n                                    <br />\r\n                                </div>\r\n                                <div className='col-md-12'>\r\n                                    <label className='labels'>Date of Birth</label>\r\n                                    {/* {console.log(dob)} */}\r\n                                    {/* {console.log(typeof dob)} */}\r\n\r\n                                    {/* <DatePicker\r\n                                        selected={dob}\r\n                                        onChange={(date) => setDob(date)}\r\n                                        dateFormat='yyyy/MM/dd'\r\n                                        isClearable\r\n                                        showYearDropdown\r\n                                        scrollableMonthYearDropdown\r\n                                    /> */}\r\n                                    <input\r\n                                        type='date'\r\n                                        value={dob}\r\n                                        onChange={(e) => setDob(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className='col-md-12'>\r\n                                    <label className='labels'>Address</label>\r\n                                    <input\r\n                                        type='text'\r\n                                        onChange={(e) => setAddress(e.target.value)}\r\n                                        className='form-control'\r\n                                        placeholder='enter address'\r\n                                        value={address}\r\n                                    />\r\n                                </div>\r\n                                <div className='col-md-12'>\r\n                                    <label className='labels'>City</label>\r\n                                    <input\r\n                                        type='text'\r\n                                        className='form-control'\r\n                                        placeholder='city'\r\n                                        value={city}\r\n                                        onChange={(e) => setCity(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className='row mt-3'>\r\n                                <div className='col-md-12'>\r\n                                    <Form className='sidebar'>\r\n                                        {/* <span className='font-weight-bold'>{name}</span>\r\n                                <br />\r\n                                <span className='text-black-50'>{email}</span> */}\r\n                                        <span> </span>\r\n                                        {/* deve */}\r\n                                        {picMessage && (\r\n                                            <ErrorMessage variant='danger'>\r\n                                                {picMessage}\r\n                                            </ErrorMessage>\r\n                                        )}\r\n                                        <br />\r\n                                        <br />\r\n                                        <div\r\n                                            style={{\r\n                                                display: 'flex',\r\n                                                // marginLeft: '140px',\r\n                                                wordWrap: 'break-word'\r\n                                            }}\r\n                                        >\r\n                                            <Form.File\r\n                                                onChange={(e) => postDetails(e.target.files[0])}\r\n                                                id='custom-file'\r\n                                                type='image/png'\r\n                                                // label='Upload'\r\n                                                style={{}}\r\n                                                custom\r\n                                                aria-label='File browser example'\r\n                                            />\r\n                                            <br />\r\n                                            {photoloading && <LoadingComponent loading />}\r\n                                        </div>\r\n                                        {/* deve */}\r\n                                    </Form>\r\n                                </div>\r\n                                <div className='col-md-12'>\r\n                                    <Form>\r\n                                        <Form.Label>Change Profile Picture</Form.Label>\r\n                                    </Form>\r\n                                </div>\r\n                            </div>\r\n                            <div className='mt-5 text-center'>\r\n                                <button\r\n                                    className='btn btn-primary profile-button'\r\n                                    type='button'\r\n                                    onClick={submitHandler}\r\n                                >\r\n                                    Update Profile\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-md-4'>\r\n                        <div className='p-3 py-5'>\r\n                            <div className='d-flex justify-content-between align-items-center experience'>\r\n                                <span>Edit Experience</span>\r\n                            </div>\r\n                            <br />\r\n                            <div className='col-md-12'>\r\n                                <label className='labels'>Email ID</label>\r\n                                <input\r\n                                    type='text'\r\n                                    className='form-control'\r\n                                    placeholder='enter email id'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                            </div>{' '}\r\n                            <br />\r\n                            <div className='col-md-12'>\r\n                                <label className='labels'>PhoneNumber</label>\r\n                                <input\r\n                                    type='text'\r\n                                    className='form-control'\r\n                                    placeholder='enter phone number'\r\n                                    value={phone}\r\n                                    onChange={(e) => setPhone(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className='col-md-12'>\r\n                                <label className='labels'>Country</label>\r\n                                <CountryDropdown\r\n                                    className='form-control'\r\n                                    value={country}\r\n                                    onChange={(country) => setCountry(country)}\r\n                                />\r\n                            </div>\r\n                            <div className='col-md-12'>\r\n                                <label className='labels'>State/Region</label>\r\n                                <RegionDropdown\r\n                                    className='form-control'\r\n                                    country={country}\r\n                                    value={state}\r\n                                    onChange={(state) => setState(state)}\r\n                                />\r\n                            </div>\r\n                            <div className='col-md-12'>\r\n                                <label className='labels'>Postal code</label>\r\n                                <input\r\n                                    type='text'\r\n                                    className='form-control'\r\n                                    placeholder='pin code'\r\n                                    value={pin}\r\n                                    onChange={(e) => setPin(e.target.value)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Profile;\r\n\r\n///\r\n\r\n///\r\n","//inside app password change\r\nimport React,{ useState, useEffect } from \"react\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n// import \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"../../../../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\nimport { updatePasswordAction } from \"../../../actions/user\";\r\n\r\n\r\n\r\nconst ChangePassword = () => {\r\n//   const { push } = useHistory();\r\n  const [state, setState] = useState({\r\n    current: \"\",\r\n    newPassword: \"\",\r\n    userId: null,\r\n  });\r\n  const dispatch = useDispatch();\r\n  \tconst user = useSelector((state) => state.user);\r\n      // console.log(user)\r\n\r\n\r\n\r\n  const updatePassword = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updatePasswordAction({\r\n        current: state.current,\r\n        newPassword: state.newPassword,\r\n        userId: user._id,\r\n      })\r\n    );\r\n     setState({ ...state, current: \"\", newPassword: \"\" });\r\n  };\r\n\r\n  return 3 === 3 ? (\r\n    <div className=\"container mt-100\">\r\n      <Helmet>\r\n        <title>Update Password</title>\r\n        <meta name=\"description\" content=\"update the user password\" />\r\n      </Helmet>\r\n      <Toaster\r\n        position=\"top-right\"\r\n        reverseOrder={false}\r\n        toastOptions={{\r\n          style: {\r\n            fontSize: \"14px\",\r\n          },\r\n        }}\r\n      />\r\n      <div className=\"row ml-minus-15 mr-minus-15\">\r\n        <div className=\"col-3 p-15\">\r\n          <Sidebar />\r\n        </div>\r\n        <div className=\"col-9 p-15\">\r\n          <div className=\"card\">\r\n            <h3 className=\"card__h3\">Change Password</h3>\r\n            <form onSubmit={updatePassword}>\r\n              <div className=\"group\">\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"\"\r\n                  className=\"group__control\"\r\n                  placeholder=\"Current Password\"\r\n                  onChange={(e) =>\r\n                    setState({ ...state, current: e.target.value })\r\n                  }\r\n                  value={state.current}\r\n                />\r\n              </div>\r\n              <div className=\"group\">\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"\"\r\n                  className=\"group__control\"\r\n                  placeholder=\"New Password\"\r\n                  onChange={(e) =>\r\n                    setState({ ...state, newPassword: e.target.value })\r\n                  }\r\n                  value={state.newPassword}\r\n                />\r\n              </div>\r\n              <div className=\"group\">\r\n                <button\r\n                  type=\"submit\"\r\n                  value=\"Update Password\"\r\n                  className=\"btn btn-success\"\r\n                >\r\n                  Update Password\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <h1>Loading</h1>\r\n  );\r\n};\r\nexport default ChangePassword;\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  TabContent,\n  Button,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Table,\n} from \"reactstrap\";\nimport classnames from \"classnames\";\n\nimport { connect } from \"react-redux\";\n\nclass TicketTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: \"1\",\n    };\n  }\n\n  toggle = (tab) => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab });\n    }\n  };\n\n  findCustomer = async (id) => {\n    const temp = await this.props.customers.find(\n      (customer) => customer._id == id\n    );\n    return temp;\n  };\n\n  findDepartment = async (id) => {\n      const temp2 = await this.props.departments.find(\n        (department) => department._id == id\n      );\n    return temp2;\n  };\n\n  findEmployees = async (id) => {\n      const temp3 = await this.props.employees.find((employee) => employee._id == id);\n    return temp3;\n  };\n\n  render() {\n    const { tickets } = this.props;\n    return (\n      <div>\n        <Nav tabs className=\"mb-3\">\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === \"1\" })}\n              onClick={() => {\n                this.toggle(\"1\");\n              }}\n            >\n              <div style={{ cursor: \"pointer\" }}>Pending</div>\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === \"2\" })}\n              onClick={() => {\n                this.toggle(\"2\");\n              }}\n            >\n              <div style={{ cursor: \"pointer\" }}>Completed</div>\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            {this.state.activeTab == 1 ? (\n              <div>\n                <h2>\n                  Tickets -{\" \"}\n                  {tickets.filter((ticket) => !ticket.isResolved).length}\n                </h2>\n                <Table striped>\n                  <thead>\n                    <tr>\n                      <th>Code No</th>\n                      <th>Customer</th>\n                      <th>Department</th>\n                      <th>Employees</th>\n                      <th>Message</th>\n                      <th>Priority</th>\n                      <th>Actions</th>\n                      {/* <th>Remove</th>\n                      <th>Complete</th> */}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {tickets.map((ticket) => {\n                      return (\n                        !ticket.isResolved && (\n                          <tr key={ticket._id}>\n                            <td>{ticket.code}</td>\n                            <td>\n                              {ticket.customer.name\n                                ? ticket.customer.name\n                                : this.findCustomer(ticket.customer).name}{\" \"}\n                            </td>\n                            <td>\n                              {ticket.department.name\n                                ? ticket.department.name\n                                : this.findDepartment(ticket.department)\n                                    .name}{\" \"}\n                            </td>\n                            <td>\n                              {ticket.employees[0].name\n                                ? ticket.employees.map((emp, index) =>\n                                    index === ticket.employees.length - 1\n                                      ? `${emp.name}`\n                                      : `${emp.name}, `\n                                  )\n                                : ticket.employees.map((emp, index) =>\n                                    index === ticket.employees.length - 1\n                                      ? `${this.findEmployees(emp).name}`\n                                      : `${this.findEmployees(emp).name}, `\n                                  )}\n                            </td>\n                            <td>{ticket.message} </td>\n                            <td>{ticket.priority}</td>\n                            <td>\n                              <Link to={`/doctickets/${ticket._id}`}>\n                                <Button color=\"info\">show</Button>\n                              </Link>\n                            </td>\n                            {/* <td>\n                              <Button\n                                color=\"danger\"\n                                onClick={() => {\n                                  this.props.handleRemove(ticket._id);\n                                }}\n                              >\n                                remove\n                              </Button>\n                            </td> */}\n                            {/* <td>\n                              <input\n                                type=\"checkbox\"\n                                onClick={() => {\n                                  this.props.handleResolve(ticket._id);\n                                }}\n                              />\n                            </td> */}\n                          </tr>\n                        )\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </div>\n            ) : null}\n          </TabPane>\n          <TabPane tabId=\"2\">\n            {this.state.activeTab == 2 ? (\n              <div>\n                <h2>\n                  Tickets -{\" \"}\n                  {tickets.filter((ticket) => ticket.isResolved).length}\n                </h2>\n                <Table striped>\n                  <thead>\n                    <tr>\n                      <th>Code No</th>\n                      <th>Customer</th>\n                      <th>Department</th>\n                      <th>Employees</th>\n                      <th>Message</th>\n                      <th>Priority</th>\n                      <th>Actions</th>\n                      {/* <th>Remove</th>\n                      <th>Not Complete</th> */}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {tickets.map((ticket) => {\n                      console.log(ticket);\n                      return (\n                        ticket.isResolved && (\n                          <tr key={ticket._id}>\n                            <td>{ticket.code}</td>\n                            <td>\n                              {ticket.customer.name\n                                ? ticket.customer.name\n                                : this.findCustomer(ticket.customer).name}{\" \"}\n                            </td>\n                            {console.log(ticket.department)}\n                            <td>\n                              {ticket.department.name\n                                ? ticket.department.name\n                                : this.findCustomer(ticket.department)\n                                    .name}{\" \"}\n                            </td>\n                            <td>\n                              {ticket.employees[0].name\n                                ? ticket.employees.map((emp, index) =>\n                                    index === ticket.employees.length - 1\n                                      ? `${emp.name}`\n                                      : `${emp.name}, `\n                                  )\n                                : ticket.employees.map((emp, index) =>\n                                    index === ticket.employees.length - 1\n                                      ? `${this.findEmployees(emp).name}`\n                                      : `${this.findEmployees(emp).name}, `\n                                  )}\n                            </td>\n                            <td>{ticket.message}</td>\n                            <td>{ticket.priority}</td>\n                            <td>\n                              <Link to={`/doctickets/${ticket._id}`}>\n                                <Button color=\"info\">show</Button>\n                              </Link>\n                            </td>\n                            {/* <td>\n                              <Button\n                                color=\"danger\"\n                                onClick={() => {\n                                  this.props.handleRemove(ticket._id);\n                                }}\n                              >\n                                Remove\n                              </Button>\n                            </td> */}\n                            {/* <td>\n                              <input\n                                type=\"checkbox\"\n                                onClick={() => {\n                                  this.props.handleResolve(ticket._id);\n                                }}\n                              />\n                            </td> */}\n                          </tr>\n                        )\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </div>\n            ) : null}\n          </TabPane>\n        </TabContent>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    customers: state.customers,\n    departments: state.departments,\n    employees: state.employees,\n  };\n};\n\nexport default connect(mapStateToProps)(TicketTab);\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport TicketTab from './Tab'\n\nimport { Container, Row, Col } from 'reactstrap'\n\nimport swal from 'sweetalert2'\nimport {Progress} from 'reactstrap'\n\nimport {connect}  from 'react-redux'\nimport {startToggleResolve} from '../../../actions/tickets'\nimport {startRemoveTicket} from '../../../actions/tickets'\n\n\nclass TicketsList extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            search:'',\n            currentTickets: this.props.tickets\n        }\n    }\n\n    findDepartment = async (id) => {\n        const pleasewait = await this.props.departments.find(\n          (dept) => dept._id == id\n        );\n        return pleasewait;\n    }\n\n    handleRemove = (id) => {\n        swal.fire({\n            title: \"Are you sure you want to Delete?\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n          })\n          .then((confirmRemove) => {\n            if (confirmRemove) {\n              swal.fire(\"Successfully Deleted\", {\n                icon: \"success\",\n              });\n              this.props.dispatch(startRemoveTicket(id))\n              this.setState(prevState=>({\n                currentTickets: prevState.currentTickets.filter(ticket=>ticket._id != id)\n            }))\n                }\n             })\n    }\n\n    handleResolve = (id) =>{\n        const ticket = this.props.tickets.find(ticket=>ticket._id == id)\n        const isResolved = ticket.isResolved\n\n        this.props.dispatch(startToggleResolve(id,isResolved))\n    }\n\n    handleSearch = (e) => {\n\n        let newTickets = this.props.tickets.filter(ticket=>ticket.code.includes(e.target.value))\n        this.setState({\n            search: e.target.value,\n            currentTickets: newTickets\n        })\n    }\n\n\n\n    calculatePercentage(){\n        const allTickets = this.props.tickets.length\n        const completedTickets = this.props.tickets.filter(ticket=>ticket.isResolved).length\n        const percent = Math.round((completedTickets/allTickets)*100)\n        return percent\n    }\n\n    render(){\n\n\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <form className=\"form-inline float-left mt-3\" onSubmit={this.handleSubmit}>\n                            <input className=\"form-control mr-sm-2\" type=\"search\"  placeholder=\"Search Code\" aria-label=\"Search\" onChange={this.handleSearch}/>\n                        </form>\n                    </Col>\n                    <Col>\n                    <div className=\"text-center\">Completed Tickets: {this.calculatePercentage()}%</div>\n                    <Progress className=\"mb-5\" striped value={`${this.calculatePercentage()}`}/>\n                    </Col>\n\n                </Row>\n                <Row>\n                <Col>\n\n                    <TicketTab tickets= {this.state.currentTickets.length == 0? this.props.tickets : this.state.currentTickets} handleResolve={this.handleResolve} handleRemove={this.handleRemove}/>\n\n                    <Link to =\"/tickets/new\" className=\"mb-4 mt btn btn-primary\">Add Ticket</Link>\n                 </Col>\n\n\n\n             </Row>\n            </Container>\n        )\n\n    }\n}\n\nconst mapsStateToProps = (state) => {\n    return {\n        tickets: state.tickets,\n        departments: state.departments\n    }\n}\n\nexport default connect(mapsStateToProps)(TicketsList) ","import React from \"react\";\nimport axios from \"../../../config/axios\";\nimport Select from \"react-select\";\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\n\nimport { connect } from \"react-redux\";\n\nclass TicketForm extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(props.ticket);\n    this.state = {\n      code: props.ticket ? props.ticket.code : \"\",\n      customer: props.ticket ? props.ticket.customer._id : \"\",\n      department: props.ticket ? props.ticket.department._id : \"\",\n      emps: [],\n      employee: props.ticket\n        ? props.ticket.employees.map((option) =>\n            Object.assign(\n              {},\n              {\n                id: option._id,\n                value: option._id,\n                label: option.name,\n                deptId: option.department,\n              }\n            )\n          )\n        : [],\n      employeesnew: [],\n      message: props.ticket ? props.ticket.message : \"\",\n      priority: props.ticket ? props.ticket.priority : \"\",\n      isResolved: props.ticket ? props.ticket.isResolved : \"\",\n    };\n  }\n  handleChange = async (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n\n    if (e.target.name === \"department\") {\n      console.log(e.target.value);\n      // var arr = []\n\n      const test = await this.state.emps.filter((employee) => {\n        console.log(employee);\n        if (employee.deptId === e.target.value) {\n          return employee;\n        }\n      });\n      //  arr.push(test)\n\n      this.setState({\n        employeesnew: test,\n      });\n      console.log(\"employeesnew\", this.state.employeesnew);\n    }\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const formData = {\n      code: this.state.code,\n      customer: this.state.customer,\n      department: this.state.department,\n      employees: this.state.employee,\n      message: this.state.message,\n      priority: this.state.priority,\n      isResolved: this.state.isResolved,\n    };\n    this.props.ticket && (formData.id = this.props.ticket._id);\n    this.props.handleSubmit(formData);\n    console.log(formData);\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"/employees\", {\n        headers: {\n          \"x-auth\": localStorage.getItem(\"authToken\"),\n        },\n      })\n      .then((response) => {\n        const employees = response.data;\n        let emps = [];\n        employees.map((employee) => {\n          return emps.push({\n            id: employee._id,\n            value: employee._id,\n            label: employee.name,\n            deptId: employee.department._id,\n          });\n        });\n        this.setState({ emps });\n      });\n  }\n\n  handleMultiChange = async (option) => {\n    console.log(option)\n    // console.log(this.state.employeesnew);\n\n\n      if (option === null) {\n        this.setState(() => {\n           while (this.state.employee.length) {\n             this.state.employee.pop();\n           }\n          // this.state.employee.splice(0, this.state.employee.length);\n        });\n      } else {\n        // this.state.employee.splice(0, this.state.employee.length);\n         while (this.state.employee.length) {\n           this.state.employee.pop();\n         }\n        option.map((it) => {\n          this.state.employee.push(it);\n        });\n      }\n    //   if (this.state.employeesnew.length !== 0) {\n    //     await this.state.employeesnew.map((itemo) => {\n    //       this.setState(() => {\n    //         console.log(option.id);\n    //         this.state.employee.push(itemo);\n    //         this.state.employeesnew.splice(0, this.state.employeesnew.length);\n    //       });\n    //     });\n    //   } else {\n\n    //      await option.map((itemo) => {\n    //      const index = this.state.employee.indexOf(itemo);\n    //      if (index > -1) {\n    //        this.state.employee.splice(index);\n    //      }\n    //        this.setState(() => {\n    //          console.log(itemo);\n    //          this.state.employee.push(itemo);\n    //        });\n    //      });\n\n    //   }\n    // }\n\n    console.log(\"employee\", this.state.employee);\n    // console.log(\"option\", option);\n    // //   }\n  };\n\n  render() {\n    return (\n      <div>\n        <Form onSubmit={this.handleSubmit}>\n          <FormGroup>\n            <Label htmlFor=\"code\">Code</Label>\n            <Input\n              type=\"text\"\n              id=\"code\"\n              value={this.state.code}\n              onChange={this.handleChange}\n              name=\"code\"\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"customer\">Customer</Label>\n            <Input\n              type=\"select\"\n              id=\"customer\"\n              value={this.state.customer}\n              onChange={this.handleChange}\n              name=\"customer\"\n            >\n              <option value=\"\">select</option>\n              {this.props.customers.map((customer) => {\n                return (\n                  <option key={customer._id} value={customer._id}>\n                    {customer.name}{\" \"}\n                  </option>\n                );\n              })}\n            </Input>\n          </FormGroup>\n\n          <FormGroup>\n            <Label htmlFor=\"department\">Department</Label>\n            <Input\n              type=\"select\"\n              id=\"department\"\n              value={this.state.department}\n              onChange={this.handleChange}\n              name=\"department\"\n            >\n              <option value=\"\">select</option>\n              {this.props.departments.map((department) => {\n                return (\n                  <option key={department._id} value={department._id}>\n                    {department.name}\n                  </option>\n                );\n              })}\n            </Input>\n          </FormGroup>\n\n          <label>Employees</label>\n          <Select\n            name=\"employee\"\n            placeholder=\"Select\"\n            defaultValue={this.state.employee}\n            options={this.state.employeesnew}\n            onChange={this.handleMultiChange}\n            isMulti\n          />\n          {console.log(this.state.employeenew)}\n          <br />\n          <FormGroup>\n            <Label htmlFor=\"message\">Message</Label>\n            <Input\n              type=\"textarea\"\n              value={this.state.message}\n              onChange={this.handleChange}\n              name=\"message\"\n            />\n          </FormGroup>\n\n          <FormGroup tag=\"fieldset\">\n            <legend>Priority</legend>\n            <FormGroup check>\n              <Label check>\n                <Input\n                  type=\"radio\"\n                  value=\"high\"\n                  checked={this.state.priority === \"high\"}\n                  onChange={this.handleChange}\n                  name=\"priority\"\n                />{\" \"}\n                High\n              </Label>\n            </FormGroup>\n            <FormGroup check>\n              <Label check>\n                <Input\n                  type=\"radio\"\n                  value=\"medium\"\n                  checked={this.state.priority === \"medium\"}\n                  onChange={this.handleChange}\n                  name=\"priority\"\n                />{\" \"}\n                Medium\n              </Label>\n            </FormGroup>\n            <FormGroup check>\n              <Label check>\n                <Input\n                  type=\"radio\"\n                  value=\"low\"\n                  checked={this.state.priority === \"low\"}\n                  onChange={this.handleChange}\n                  name=\"priority\"\n                />{\" \"}\n                Low\n              </Label>\n            </FormGroup>\n          </FormGroup>\n          <br />\n\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state.departments);\n  return {\n    customers: state.customers,\n    departments: state.departments,\n    employees: state.employees,\n  };\n};\n\nexport default connect(mapStateToProps)(TicketForm);\n","import React from 'react'\n\nimport TicketForm from './Form'\n\nimport {connect} from 'react-redux'\nimport {startAddTicket} from '../../../actions/tickets'\n\nclass TicketNew extends React.Component{\n    handleSubmit = (ticket) => {\n\n        const redirect = () => this.props.history.push('/tickets')\n        this.props.dispatch(startAddTicket(ticket,redirect))\n        setTimeout(() => {\n            window.location.reload();\n        }, 1000);\n}\n\n    render(){\n        return (\n            <div>\n                <h2>Add Ticket</h2>\n                <TicketForm handleSubmit = {this.handleSubmit}/>\n            </div>\n        )\n    }\n}\n\n\n\nexport default connect()(TicketNew)\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport {connect} from 'react-redux'\n\nimport { ListGroup, ListGroupItem } from 'reactstrap'\n\n class TicketShow extends React.Component{\n\n    findCustomer =  (id) => {\n        return this.props.customers.find(customer => customer._id == id )\n    }\n\n    findDepartment = (id) => {\n        return this.props.departments.find(department => department._id == id)\n    }\n\n    findEmployees = (id) => {\n        return this.props.employees.find(employee => employee._id == id)\n    }\n\n    render(){\n        return (\n            <div>\n                {this.props.ticket && (\n                    <div>\n                    <h2>Code Number - {this.props.ticket.code}</h2>\n                    <ListGroup>\n                    <ListGroupItem>Customer -{this.props.ticket.customer.name? this.props.ticket.customer.name : this.findCustomer(this.props.ticket.customer).name}  </ListGroupItem>\n                    <ListGroupItem>Employees - {this.props.ticket.employees[0].name ? this.props.ticket.employees.map((emp,index)=>(index===this.props.ticket.employees.length-1)?`${emp.name}`: `${emp.name}, `): this.props.ticket.employees.map((emp,index)=>(index===this.props.ticket.employees.length-1)?`${this.findEmployees(emp).name}`: `${this.findEmployees(emp).name}, `)} </ListGroupItem>\n                    <ListGroupItem>Department - {this.props.ticket.department.name? this.props.ticket.department.name: this.findDepartment(this.props.ticket.department).name}</ListGroupItem>\n                    <ListGroupItem>Message - {this.props.ticket.message}</ListGroupItem>\n                    <ListGroupItem>Priority - {this.props.ticket.priority}</ListGroupItem>\n                    </ListGroup>\n                    <Link className=\"ml-1\" to={`/doctickets/edit/${this.props.ticket._id}`}>Edit</Link>\n                    </div>\n                )}\n\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    return {\n        ticket: state.tickets.find(ticket=> ticket._id == id ),\n        employees: state.employees,\n        customers: state.customers,\n        departments: state.departments,\n    }\n}\n\nexport default connect(mapStateToProps)(TicketShow)\n","import React from 'react'\nimport TicketForm from './Form'\n\nimport {connect} from 'react-redux'\nimport {startEditTicketTwoDoc} from '../../../actions/tickets'\n\nclass TicketEdit extends React.Component{\n    handleSubmit = (ticket) => {\n\n        const redirect = () => this.props.history.push(`/doctickets/${ticket.id}`)\n        this.props.dispatch(startEditTicketTwoDoc(ticket,redirect))\n\n    }\n    render(){\n        return (\n            <div>\n                {this.props.ticket && (\n                    <div>\n                        <h2>Edit Ticket</h2>\n                         {this.props.ticket && <TicketForm ticket = {this.props.ticket} handleSubmit = {this.handleSubmit}/>}\n                     </div>\n                )}\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    return {\n        ticket: state.tickets.find(ticket=>ticket._id == id)\n    }\n}\n\n\nexport default connect(mapStateToProps)(TicketEdit)\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst Sidebar = () => {\r\n    return (\r\n        <div className='sidebar'>\r\n            <div className='sidebar__element'> \r\n                <h3>Setting</h3>\r\n            </div>\r\n            <div className='sidebar__element mt-1 btn' style={{ border: '1px solid red' }}>\r\n                <Link to='/patprofile' style={{ color: 'black', textDecoration: 'none' }}>\r\n                    Edit Profile\r\n                </Link>\r\n            </div>\r\n            <div className='sidebar__element mt-1 btn' style={{ border: '1px solid red' }}>\r\n                <Link to='/patupdatePassword' style={{ color: 'black', textDecoration: 'none' }}>\r\n                    Change Password\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Sidebar;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\n// import DatePicker from \"react-datepicker\";\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport { Toaster } from 'react-hot-toast';\r\nimport { RadioGroup, Radio } from 'react-radio-group';\r\n// import moment from \"moment\";\r\n// import { Country, State, City } from 'country-state-city';\r\n// import { FormGroup, Label, Input } from 'reactstrap';\r\n\r\nimport { Form } from 'react-bootstrap';\r\n\r\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\r\n\r\nimport { updateProfile } from '../../../actions/user';\r\n// import axios from 'axios';\r\n// import Loader from \"./Loader\";\r\nimport Sidebar from './Sidebar';\r\nimport '../../user/commonProfile.css';\r\nimport LoadingComponent from 'components/loading';\r\nimport ErrorMessage from 'components/ErrorMessage';\r\n\r\nconst Profile = () => {\r\n    // console.log(Country.getAllCountries());\r\n    // console.log(State.getAllStates());\r\n    const dispatch = useDispatch();\r\n\r\n    const user = useSelector((state) => state.user);\r\n    // console.log(user);\r\n    const history = useHistory();\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n\r\n    const [gender, setGender] = useState(null);\r\n    const [newgender, setNewender] = useState(null);\r\n    const [mobile, setPhone] = useState('');\r\n    const [dob, setDob] = useState('');\r\n    const [address, setAddress] = useState('');\r\n\r\n    const [pin, setPin] = useState('');\r\n\r\n    const [country, setCountry] = useState('');\r\n    const [state, setState] = useState('');\r\n    const [city, setCity] = useState('');\r\n\r\n    const [pic, setPic] = useState();\r\n    const [picMessage, setPicMessage] = useState();\r\n    const [photoloading, setPhotoloading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!user) {\r\n            history.push('/');\r\n        } else {\r\n            setName(user.username);\r\n            setEmail(user.email);\r\n            setPic(user.pic);\r\n            setPin(user.pin);\r\n            setGender(user.gender);\r\n            setPhone(user.mobile);\r\n            setDob(user.dob);\r\n            setAddress(user.address);\r\n            setCountry(user.country);\r\n            setState(user.state);\r\n            setCity(user.city);\r\n        }\r\n    }, [history, user]);\r\n\r\n    useEffect(() => {\r\n        //  setGender(gender)\r\n        setNewender(gender);\r\n    }, [gender]);\r\n\r\n    const postDetails = (pics) => {\r\n        setPhotoloading(true);\r\n        setPicMessage(null);\r\n        console.log(pics);\r\n        if (pics !== undefined) {\r\n            if (pics.type === 'image/jpeg' || pics.type === 'image/png') {\r\n                const data = new FormData();\r\n                data.append('file', pics);\r\n                data.append('upload_preset', 'ml_default');\r\n                data.append('cloud_name', 'vivekbhore');\r\n                fetch('https://api.cloudinary.com/v1_1/vivekbhore/image/upload', {\r\n                    method: 'post',\r\n                    body: data\r\n                })\r\n                    .then((res) => res.json())\r\n                    .then((data) => {\r\n                        setPic(data.url.toString());\r\n                        setPhotoloading(false);\r\n                        console.log(pic);\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err);\r\n                        setPhotoloading(false);\r\n                    });\r\n            } else {\r\n                setPhotoloading(false);\r\n                return setPicMessage('Please Select an Image');\r\n            }\r\n        } else {\r\n            setPhotoloading(false);\r\n        }\r\n    };\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const redirect = () => {\r\n            history.push('/patprofile');\r\n            window.location.reload(true);\r\n            //   alert(\"testing\")\r\n        };\r\n\r\n        dispatch(\r\n            updateProfile(\r\n                { name, email, pic, pin, state, country, city, mobile, newgender, dob, address },\r\n                redirect\r\n            )\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <title>User Dashboard</title>\r\n                <meta name='description' content='User Dashboard' />\r\n            </Helmet>\r\n            <Toaster\r\n                position='top-center'\r\n                reverseOrder={false}\r\n                toastOptions={{\r\n                    style: {\r\n                        fontSize: '14px'\r\n                    }\r\n                }}\r\n            />\r\n            <div\r\n                className='container rounded bg-white mb-5 mt-100'\r\n                style={{ boxShadow: 'rgb(38, 57, 77) 0px 20px 30px -10px' }}\r\n            >\r\n                <div className='row'>\r\n                    <div className='col-md-3 border-right'>\r\n                        <div className='d-flex flex-column align-items-center text-center p-3 py-5'>\r\n                            <img\r\n                                alt={name}\r\n                                className='rounded-circle mt-5 sidebar__element'\r\n                                src={pic}\r\n                                width='100px'\r\n                                height='100px'\r\n                            />\r\n                        </div>\r\n                        <Sidebar />\r\n                    </div>\r\n                    <div className='col-md-5 border-right'>\r\n                        <div className='p-3 py-5'>\r\n                            <div className='d-flex justify-content-between align-items-center mb-3'>\r\n                                <h4 className='text-right'>Profile Settings</h4>\r\n                            </div>\r\n                            <div className='row mt-2'>\r\n                                <div className='col-md-12'>\r\n                                    <label className='labels'>Name</label>\r\n                                    <input\r\n                                        type='text'\r\n                                        className='form-control'\r\n                                        placeholder='first name'\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className='row mt-3'>\r\n                                <div className='col-md-12'>\r\n                                    <label className='labels'>Gender</label>\r\n                                    <br />\r\n                                    <RadioGroup\r\n                                        name='gender'\r\n                                        selectedValue={gender}\r\n                                        onChange={(e) => setGender(e)}\r\n                                    >\r\n                                        {/* {console.log(gender)} */}\r\n                                        <Radio value='male' />\r\n                                        male\r\n                                        <br />\r\n                                        <Radio value='female' />\r\n                                        female\r\n                                    </RadioGroup>\r\n                                    <br />\r\n                                </div>\r\n                                <div className='col-md-12'>\r\n                                    <label className='labels'>Date of Birth</label>\r\n                                    {/* {console.log(dob)} */}\r\n                                    {/* {console.log(typeof dob)} */}\r\n\r\n                                    {/* <DatePicker\r\n                                        selected={dob}\r\n                                        onChange={(date) => setDob(date)}\r\n                                        dateFormat='yyyy/MM/dd'\r\n                                        isClearable\r\n                                        showYearDropdown\r\n                                        scrollableMonthYearDropdown\r\n                                    /> */}\r\n                                    <input\r\n                                        type='date'\r\n                                        value={dob}\r\n                                        onChange={(e) => setDob(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                                <div className='col-md-12'>\r\n                                    <label className='labels'>Address</label>\r\n                                    <input\r\n                                        type='text'\r\n                                        onChange={(e) => setAddress(e.target.value)}\r\n                                        className='form-control'\r\n                                        placeholder='enter address'\r\n                                        value={address}\r\n                                    />\r\n                                </div>\r\n                                <div className='col-md-12'>\r\n                                    <label className='labels'>City</label>\r\n                                    <input\r\n                                        type='text'\r\n                                        className='form-control'\r\n                                        placeholder='city'\r\n                                        value={city}\r\n                                        onChange={(e) => setCity(e.target.value)}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                            <div className='row mt-3'>\r\n                                <div className='col-md-12'>\r\n                                    <Form className='sidebar'>\r\n                                        {/* <span className='font-weight-bold'>{name}</span>\r\n                                <br />\r\n                                <span className='text-black-50'>{email}</span> */}\r\n                                        <span> </span>\r\n                                        {/* deve */}\r\n                                        {picMessage && (\r\n                                            <ErrorMessage variant='danger'>\r\n                                                {picMessage}\r\n                                            </ErrorMessage>\r\n                                        )}\r\n                                        <br />\r\n                                        <br />\r\n                                        <div\r\n                                            style={{\r\n                                                display: 'flex',\r\n                                                // marginLeft: '140px',\r\n                                                wordWrap: 'break-word'\r\n                                            }}\r\n                                        >\r\n                                            <Form.File\r\n                                                onChange={(e) => postDetails(e.target.files[0])}\r\n                                                id='custom-file'\r\n                                                type='image/png'\r\n                                                // label='Upload'\r\n                                                style={{}}\r\n                                                custom\r\n                                                aria-label='File browser example'\r\n                                            />\r\n                                            <br />\r\n                                            {photoloading && <LoadingComponent loading />}\r\n                                        </div>\r\n                                        {/* deve */}\r\n                                    </Form>\r\n                                </div>\r\n                                <div className='col-md-12'>\r\n                                    <Form>\r\n                                        <Form.Label>Change Profile Picture</Form.Label>\r\n                                    </Form>\r\n                                </div>\r\n                            </div>\r\n                            <div className='mt-5 text-center'>\r\n                                <button\r\n                                    className='btn btn-primary profile-button'\r\n                                    type='button'\r\n                                    onClick={submitHandler}\r\n                                >\r\n                                    Update Profile\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col-md-4'>\r\n                        <div className='p-3 py-5'>\r\n                            <div className='d-flex justify-content-between align-items-center experience'>\r\n                                <span>Edit Experience</span>\r\n                            </div>\r\n                            <br />\r\n                            <div className='col-md-12'>\r\n                                <label className='labels'>Email ID</label>\r\n                                <input\r\n                                    type='text'\r\n                                    className='form-control'\r\n                                    placeholder='enter email id'\r\n                                    value={email}\r\n                                    onChange={(e) => setEmail(e.target.value)}\r\n                                />\r\n                            </div>{' '}\r\n                            <br />\r\n                            <div className='col-md-12'>\r\n                                <label className='labels'>PhoneNumber</label>\r\n                                <input\r\n                                    type='text'\r\n                                    className='form-control'\r\n                                    placeholder='enter mobile number'\r\n                                    value={mobile}\r\n                                    onChange={(e) => setPhone(e.target.value)}\r\n                                />\r\n                            </div>\r\n                            <div className='col-md-12'>\r\n                                <label className='labels'>Country</label>\r\n                                <CountryDropdown\r\n                                    className='form-control'\r\n                                    value={country}\r\n                                    onChange={(country) => setCountry(country)}\r\n                                />\r\n                            </div>\r\n                            <div className='col-md-12'>\r\n                                <label className='labels'>State/Region</label>\r\n                                <RegionDropdown\r\n                                    className='form-control'\r\n                                    country={country}\r\n                                    value={state}\r\n                                    onChange={(state) => setState(state)}\r\n                                />\r\n                            </div>\r\n                            <div className='col-md-12'>\r\n                                <label className='labels'>Postal code</label>\r\n                                <input\r\n                                    type='text'\r\n                                    className='form-control'\r\n                                    placeholder='pin code'\r\n                                    value={pin}\r\n                                    onChange={(e) => setPin(e.target.value)}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\nexport default Profile;\r\n\r\n///\r\n\r\n///\r\n","//inside app password change\r\nimport React,{ useState} from \"react\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Toaster } from \"react-hot-toast\";\r\n// import \"../../../node_modules/bootstrap/dist/css/bootstrap.min.css\"\r\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport { updatePasswordAction } from \"../../../actions/user\";\r\n\r\n\r\n\r\nconst ChangePassword = () => {\r\n//   const { push } = useHistory();\r\n  const [state, setState] = useState({\r\n    current: \"\",\r\n    newPassword: \"\",\r\n    userId: null,\r\n  });\r\n  const dispatch = useDispatch();\r\n  \tconst user = useSelector((state) => state.user);\r\n      // console.log(user)\r\n\r\n\r\n\r\n  const updatePassword = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updatePasswordAction({\r\n        current: state.current,\r\n        newPassword: state.newPassword,\r\n        userId: user._id,\r\n      })\r\n    );\r\n     setState({ ...state, current: \"\", newPassword: \"\" });\r\n  };\r\n\r\n  return 1 ? (\r\n    <div className=\"container mt-100\">\r\n      <Helmet>\r\n        <title>Update Password</title>\r\n        <meta name=\"description\" content=\"update the user password\" />\r\n      </Helmet>\r\n      <Toaster\r\n        position=\"top-right\"\r\n        reverseOrder={false}\r\n        toastOptions={{\r\n          style: {\r\n            fontSize: \"14px\",\r\n          },\r\n        }}\r\n      />\r\n      <div className=\"row ml-minus-15 mr-minus-15\">\r\n        <div className=\"col-3 p-15\">\r\n          <Sidebar />\r\n        </div>\r\n        <div className=\"col-9 p-15\">\r\n          <div className=\"card\">\r\n            <h3 className=\"card__h3\">Change Password</h3>\r\n            <form onSubmit={updatePassword}>\r\n              <div className=\"group\">\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"\"\r\n                  className=\"group__control\"\r\n                  placeholder=\"Current Password\"\r\n                  onChange={(e) =>\r\n                    setState({ ...state, current: e.target.value })\r\n                  }\r\n                  value={state.current}\r\n                />\r\n              </div>\r\n              <div className=\"group\">\r\n                <input\r\n                  type=\"password\"\r\n                  name=\"\"\r\n                  className=\"group__control\"\r\n                  placeholder=\"New Password\"\r\n                  onChange={(e) =>\r\n                    setState({ ...state, newPassword: e.target.value })\r\n                  }\r\n                  value={state.newPassword}\r\n                />\r\n              </div>\r\n              <div className=\"group\">\r\n                <button\r\n                  type=\"submit\"\r\n                  value=\"Update Password\"\r\n                  className=\"btn btn-success\"\r\n                >\r\n                  Update Password\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <h1>Loading</h1>\r\n  );\r\n};\r\nexport default ChangePassword;\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  TabContent,\n  Button,\n  TabPane,\n  Nav,\n  NavItem,\n  NavLink,\n  Table,\n} from \"reactstrap\";\nimport classnames from \"classnames\";\n\nimport { connect } from \"react-redux\";\n\nclass TicketTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeTab: \"1\",\n    };\n  }\n\n  toggle = (tab) => {\n    if (this.state.activeTab !== tab) {\n      this.setState({ activeTab: tab });\n    }\n  };\n\n  findCustomer = async (id) => {\n    const temp = await this.props.customers.find(\n      (customer) => customer._id == id\n    );\n    return temp;\n  };\n\n  findDepartment = async (id) => {\n      const temp2 = await this.props.departments.find(\n        (department) => department._id == id\n      );\n    return temp2;\n  };\n\n  findEmployees = async (id) => {\n      const temp3 = await this.props.employees.find((employee) => employee._id == id);\n    return temp3;\n  };\n\n  render() {\n    const { tickets } = this.props;\n    return (\n      <div>\n        <Nav tabs className=\"mb-3\">\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === \"1\" })}\n              onClick={() => {\n                this.toggle(\"1\");\n              }}\n            >\n              <div style={{ cursor: \"pointer\" }}>Pending</div>\n            </NavLink>\n          </NavItem>\n          <NavItem>\n            <NavLink\n              className={classnames({ active: this.state.activeTab === \"2\" })}\n              onClick={() => {\n                this.toggle(\"2\");\n              }}\n            >\n              <div style={{ cursor: \"pointer\" }}>Completed</div>\n            </NavLink>\n          </NavItem>\n        </Nav>\n        <TabContent activeTab={this.state.activeTab}>\n          <TabPane tabId=\"1\">\n            {this.state.activeTab == 1 ? (\n              <div>\n                <h2>\n                  Tickets -{\" \"}\n                  {tickets.filter((ticket) => !ticket.isResolved).length}\n                </h2>\n                <Table striped>\n                  <thead>\n                    <tr>\n                      <th>Code No</th>\n                      {/* <th>Customer</th> */}\n                      <th>Department</th>\n                      <th>Agents</th>\n                      <th>Message</th>\n                      <th>Priority</th>\n                      <th>Actions</th>\n                      {/* <th>Remove</th>\n                      <th>Complete</th> */}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {tickets.map((ticket) => {\n                      return (\n                        !ticket.isResolved && (\n                          <tr key={ticket._id}>\n                            <td>{ticket.code}</td>\n                            {/* <td>\n                              {ticket.customer.name\n                                ? ticket.customer.name\n                                : this.findCustomer(ticket.customer).name}{\" \"}\n                            </td> */}\n                            <td>\n                              {ticket.department.name\n                                ? ticket.department.name\n                                : this.findDepartment(ticket.department)\n                                    .name}{\" \"}\n                            </td>\n                            <td>\n                              {ticket.employees[0].name\n                                ? ticket.employees.map((emp, index) =>\n                                    index === ticket.employees.length - 1\n                                      ? `${emp.name}`\n                                      : `${emp.name}, `\n                                  )\n                                : ticket.employees.map((emp, index) =>\n                                    index === ticket.employees.length - 1\n                                      ? `${this.findEmployees(emp).name}`\n                                      : `${this.findEmployees(emp).name}, `\n                                  )}\n                            </td>\n                            <td>{ticket.message} </td>\n                            <td>{ticket.priority}</td>\n                            <td>\n                              <Link to={`/pattickets/${ticket._id}`}>\n                                <Button color=\"info\">show</Button>\n                              </Link>\n                            </td>\n                            {/* <td>\n                              <Button\n                                color=\"danger\"\n                                onClick={() => {\n                                  this.props.handleRemove(ticket._id);\n                                }}\n                              >\n                                remove\n                              </Button>\n                            </td> */}\n                            {/* <td>\n                              <input\n                                type=\"checkbox\"\n                                onClick={() => {\n                                  this.props.handleResolve(ticket._id);\n                                }}\n                              />\n                            </td> */}\n                          </tr>\n                        )\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </div>\n            ) : null}\n          </TabPane>\n          <TabPane tabId=\"2\">\n            {this.state.activeTab == 2 ? (\n              <div>\n                <h2>\n                  Tickets -{\" \"}\n                  {tickets.filter((ticket) => ticket.isResolved).length}\n                </h2>\n                <Table striped>\n                  <thead>\n                    <tr>\n                      <th>Code No</th>\n                      {/* <th>Customer</th> */}\n                      <th>Department</th>\n                      <th>Agents</th>\n                      <th>Message</th>\n                      <th>Priority</th>\n                      <th>Actions</th>\n                      {/* <th>Remove</th>\n                      <th>Not Complete</th> */}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {tickets.map((ticket) => {\n                      console.log(ticket);\n                      return (\n                        ticket.isResolved && (\n                          <tr key={ticket._id}>\n                            <td>{ticket.code}</td>\n                            {/* <td>\n                              {ticket.customer.name\n                                ? ticket.customer.name\n                                : this.findCustomer(ticket.customer).name}{\" \"}\n                            </td> */}\n                            {console.log(ticket.department)}\n                            <td>\n                              {ticket.department.name\n                                ? ticket.department.name\n                                : this.findCustomer(ticket.department)\n                                    .name}{\" \"}\n                            </td>\n                            <td>\n                              {ticket.employees[0].name\n                                ? ticket.employees.map((emp, index) =>\n                                    index === ticket.employees.length - 1\n                                      ? `${emp.name}`\n                                      : `${emp.name}, `\n                                  )\n                                : ticket.employees.map((emp, index) =>\n                                    index === ticket.employees.length - 1\n                                      ? `${this.findEmployees(emp).name}`\n                                      : `${this.findEmployees(emp).name}, `\n                                  )}\n                            </td>\n                            <td>{ticket.message}</td>\n                            <td>{ticket.priority}</td>\n                            <td>\n                              <Link to={`/pattickets/${ticket._id}`}>\n                                <Button color=\"info\">show</Button>\n                              </Link>\n                            </td>\n                            {/* <td>\n                              <Button\n                                color=\"danger\"\n                                onClick={() => {\n                                  this.props.handleRemove(ticket._id);\n                                }}\n                              >\n                                Remove\n                              </Button>\n                            </td> */}\n                            {/* <td>\n                              <input\n                                type=\"checkbox\"\n                                onClick={() => {\n                                  this.props.handleResolve(ticket._id);\n                                }}\n                              />\n                            </td> */}\n                          </tr>\n                        )\n                      );\n                    })}\n                  </tbody>\n                </Table>\n              </div>\n            ) : null}\n          </TabPane>\n        </TabContent>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    customers: state.customers,\n    departments: state.departments,\n    employees: state.employees,\n  };\n};\n\nexport default connect(mapStateToProps)(TicketTab);\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport TicketTab from './Tab'\n\nimport { Container, Row, Col } from 'reactstrap'\n \nimport swal from 'sweetalert2'\nimport {Progress} from 'reactstrap'\n\nimport {connect}  from 'react-redux';\nimport {startToggleResolve} from '../../../actions/tickets'\nimport {startRemoveTicket} from '../../../actions/tickets'\n\n\nclass TicketsList extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            search:'',\n            currentTickets: this.props.tickets\n        }\n    }\n\n    findDepartment = async (id) => {\n        const pleasewait = await this.props.departments.find(\n          (dept) => dept._id == id\n        );\n        return pleasewait;\n    }\n\n    handleRemove = (id) => {\n        swal.fire({\n            title: \"Are you sure you want to Delete?\",\n            icon: \"warning\",\n            buttons: true,\n            dangerMode: true,\n          })\n          .then((confirmRemove) => {\n            if (confirmRemove) {\n              swal.fire(\"Successfully Deleted\", {\n                icon: \"success\",\n              });\n              this.props.dispatch(startRemoveTicket(id))\n              this.setState(prevState=>({\n                currentTickets: prevState.currentTickets.filter(ticket=>ticket._id != id)\n            }))\n                }\n             })\n    }\n\n    handleResolve = (id) =>{\n        const ticket = this.props.tickets.find(ticket=>ticket._id == id)\n        const isResolved = ticket.isResolved\n\n        this.props.dispatch(startToggleResolve(id,isResolved))\n    }\n\n    handleSearch = (e) => {\n\n        let newTickets = this.props.tickets.filter(ticket=>ticket.code.includes(e.target.value))\n        this.setState({\n            search: e.target.value,\n            currentTickets: newTickets\n        })\n    }\n\n\n\n    calculatePercentage(){\n        console.log(this.props.tickets);\n        const allTickets = this.props.tickets.length\n        const completedTickets = this.props.tickets.filter(ticket=>ticket.isResolved).length\n        const percent = Math.round((completedTickets/allTickets)*100)\n        return percent\n    }\n\n    render(){\n\n\n        return (\n            <Container>\n                <Row>\n                    <Col>\n                        <form className=\"form-inline float-left mt-3\" onSubmit={this.handleSubmit}>\n                            <input className=\"form-control mr-sm-2\" type=\"search\"  placeholder=\"Search Code\" aria-label=\"Search\" onChange={this.handleSearch}/>\n                        </form>\n                    </Col>\n                    <Col>\n                    <div className=\"text-center\">Completed Tickets: {this.calculatePercentage()}%</div>\n                    <Progress className=\"mb-5\" striped value={`${this.calculatePercentage()}`}/>\n                    </Col> \n\n                </Row>\n                <Row>\n                <Col>\n\n                    <TicketTab tickets= {this.state.currentTickets.length == 0? this.props.tickets : this.state.currentTickets} handleResolve={this.handleResolve} handleRemove={this.handleRemove}/>\n\n                    <Link to =\"/pattickets/new\" className=\"mb-4 mt btn btn-primary\">Add Ticket</Link>\n                 </Col>\n\n\n\n             </Row>\n            </Container>\n        )\n\n    }\n}\n\nconst mapsStateToProps = (state) => {\n    return {\n        tickets: state.tickets,\n        departments: state.departments\n    }\n}\n\nexport default connect(mapsStateToProps)(TicketsList)","import React from \"react\";\nimport axios from \"../../../config/axios\";\nimport Select from \"react-select\";\nimport { Button, Form, FormGroup, Label, Input } from \"reactstrap\";\n\nimport { connect } from \"react-redux\";\n\n\nclass TicketForm extends React.Component {\n  constructor(props) {\n    super(props);\n    // console.log(props.ticket);\n    this.state = {\n      code: props.ticket ? props.ticket.code : \"\",\n      customer: props.ticket ? props.ticket.customer._id : \"\",\n      department: props.ticket ? props.ticket.department._id : \"\",\n      emps: [],\n      employee: props.ticket\n        ? props.ticket.employees.map((option) =>\n            Object.assign(\n              {},\n              {\n                id: option._id,\n                value: option._id,\n                label: option.name,\n                deptId: option.department,\n              }\n            )\n          )\n        : [],\n      employeesnew: [],\n      message: props.ticket ? props.ticket.message : \"\",\n      priority: props.ticket ? props.ticket.priority : \"\",\n      isResolved: props.ticket ? props.ticket.isResolved : \"\",\n      \n    \n    };\n  }\n  handleChange = async (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n\n    if (e.target.name === \"department\") {\n      console.log(e.target.value);\n      // var arr = []\n\n      const test = await this.state.emps.filter((employee) => {\n        console.log(employee);\n        if (employee.deptId === e.target.value) {\n          return employee;\n        }\n      });\n      //  arr.push(test)\n\n      this.setState({\n        employeesnew: test,\n      });\n      console.log(\"employeesnew\", this.state.employeesnew);\n    }\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const formData = {\n      code:this.props.fromnew==\"fromnew\"? this.props.gencpassword:this.state.code,\n      customer: this.state.customer? this.state.customer:\"6127236b6030eb0b400608a1\",\n      department: this.state.department? this.state.department:\"60ffbd59c32d8b4678bc4072\",\n      employees: this.state.employee? this.state.employee:[{id:\"61004b665ded5e36f0b67e86\"}],\n      message: this.state.message,\n      priority: this.state.priority?this.state.priority:\"medium\",\n      isResolved: this.state.isResolved,\n      doctors:[],\n      empviv:\"61004b665ded5e36f0b67e86\",\n      doctviv:\"6114066484e79038f41849f9\"\n    };\n    this.props.ticket && (formData.id = this.props.ticket._id);\n    this.props.handleSubmit(formData);\n    console.log(formData);\n  };\n\n  componentDidMount() {\n\n    console.log(this.props.user);\n    console.log(this.props.user._id);\n   \n    axios\n      .get(\"/employees\", {\n        headers: {\n          \"x-auth\": localStorage.getItem(\"authToken\"),\n        },\n      })\n      .then((response) => {\n        const employees = response.data;\n        let emps = [];\n        employees.map((employee) => {\n          return emps.push({\n            id: employee._id,\n            value: employee._id,\n            label: employee.name,\n            deptId: employee.department._id,\n          });\n        });\n        this.setState({ emps });\n      });\n  }\n\n  handleMultiChange = async (option) => {\n    console.log(option)\n    // console.log(this.state.employeesnew);\n\n\n      if (option === null) {\n        this.setState(() => {\n           while (this.state.employee.length) {\n             this.state.employee.pop();\n           }\n          // this.state.employee.splice(0, this.state.employee.length);\n        });\n      } else {\n        // this.state.employee.splice(0, this.state.employee.length);\n         while (this.state.employee.length) {\n           this.state.employee.pop();\n         }\n        option.map((it) => {\n          this.state.employee.push(it);\n        });\n      }\n    //   if (this.state.employeesnew.length !== 0) {\n    //     await this.state.employeesnew.map((itemo) => {\n    //       this.setState(() => {\n    //         console.log(option.id);\n    //         this.state.employee.push(itemo);\n    //         this.state.employeesnew.splice(0, this.state.employeesnew.length);\n    //       });\n    //     });\n    //   } else {\n\n    //      await option.map((itemo) => {\n    //      const index = this.state.employee.indexOf(itemo);\n    //      if (index > -1) {\n    //        this.state.employee.splice(index);\n    //      }\n    //        this.setState(() => {\n    //          console.log(itemo);\n    //          this.state.employee.push(itemo);\n    //        });\n    //      });\n\n    //   }\n    // }\n\n    console.log(\"employee\", this.state.employee);\n    // console.log(\"option\", option);\n    // //   }\n  };\n\n  render() {\n    return (\n      <div>\n        <Form onSubmit={this.handleSubmit}>\n          {this.props.fromnew==\"fromnew\" && (\n            <FormGroup>\n            <Label htmlFor=\"code\">Code</Label>\n            <Input\n              type=\"text\"\n              id=\"code\"\n              value={this.props.gencpassword}\n              onChange={this.handleChange}\n              name=\"code\"\n              disabled\n            />\n          </FormGroup>\n          )}\n          {/* <FormGroup>\n            <Label htmlFor=\"code\">Code</Label>\n            <Input\n              type=\"text\"\n              id=\"code\"\n              value={this.state.code}\n              onChange={this.handleChange}\n              name=\"code\"\n            />\n          </FormGroup> */}\n\n          {/* <FormGroup>\n            <Label htmlFor=\"customer\">Customer</Label>\n            <Input\n              type=\"select\"\n              id=\"customer\"\n              value={this.state.customer}\n              onChange={this.handleChange}\n              name=\"customer\"\n            >\n              <option value=\"\">select</option>\n              {this.props.customers.map((customer) => {\n                return (\n                  <option key={customer._id} value={customer._id}>\n                    {customer.name}{\" \"}\n                  </option>\n                );\n              })}\n            </Input>\n          </FormGroup> */}\n\n          {/* <FormGroup>\n            <Label htmlFor=\"department\">Department</Label>\n            <Input\n              type=\"select\"\n              id=\"department\"\n              value={this.state.department}\n              onChange={this.handleChange}\n              name=\"department\"\n            >\n              <option value=\"\">select</option>\n              {this.props.departments.map((department) => {\n                return (\n                  <option key={department._id} value={department._id}>\n                    {department.name}\n                  </option>\n                );\n              })}\n            </Input>\n          </FormGroup> */}\n\n          {/* <label>Employees</label>\n          <Select\n            name=\"employee\"\n            placeholder=\"Select\"\n            defaultValue={this.state.employee}\n            options={this.state.employeesnew}\n            onChange={this.handleMultiChange}\n            isMulti\n          />\n          {console.log(this.state.employeenew)} */}\n          <br />\n          <FormGroup>\n            <Label htmlFor=\"message\">Message</Label>\n            <Input\n              type=\"textarea\"\n              value={this.state.message}\n              onChange={this.handleChange}\n              name=\"message\"\n            />\n          </FormGroup>\n\n          {/* <FormGroup tag=\"fieldset\">\n            <legend>Priority</legend>\n            <FormGroup check>\n              <Label check>\n                <Input\n                  type=\"radio\"\n                  value=\"high\"\n                  checked={this.state.priority === \"high\"}\n                  onChange={this.handleChange}\n                  name=\"priority\"\n                />{\" \"}\n                High\n              </Label>\n            </FormGroup>\n            <FormGroup check>\n              <Label check>\n                <Input\n                  type=\"radio\"\n                  value=\"medium\"\n                  checked={this.state.priority === \"medium\"}\n                  onChange={this.handleChange}\n                  name=\"priority\"\n                />{\" \"}\n                Medium\n              </Label>\n            </FormGroup>\n            <FormGroup check>\n              <Label check>\n                <Input\n                  type=\"radio\"\n                  value=\"low\"\n                  checked={this.state.priority === \"low\"}\n                  onChange={this.handleChange}\n                  name=\"priority\"\n                />{\" \"}\n                Low\n              </Label>\n            </FormGroup>\n          </FormGroup>\n          <br /> */}\n\n          <Button type=\"submit\">Submit</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state.departments);\n  return {\n    customers: state.customers,\n    departments: state.departments,\n    employees: state.employees,\n    user:state.user\n  };\n};\n\nexport default connect(mapStateToProps)(TicketForm);\n","import React from 'react'\n\nimport TicketForm from './Form'\nimport generatePassword from \"generate-password\";\n\nimport {connect} from 'react-redux'\nimport {startAddTicketTwo} from '../../../actions/tickets'\n\nclass TicketNew extends React.Component{\n\n    constructor(props){\n        super(props);\n           this.state={genpassword:\"\"}\n    }\n\n    handleSubmit = (ticket) => {\n\n        const redirect = () => this.props.history.push('/pattickets')\n        this.props.dispatch(startAddTicketTwo(ticket,redirect))\n        setTimeout(() => {\n            window.location.reload();\n        }, 1000);\n}\n\ncomponentDidMount(){\n     // jfjnj\n\n     var gencpassword = generatePassword.generate({\n        length: 6,\n        numbers: true,\n      });\n      this.setState({genpassword:gencpassword})\n     \n      // jfjnj\n}\n \n    render(){\n        return (\n            <div>\n                <h2>Add Ticket</h2>\n                <TicketForm fromnew=\"fromnew\" gencpassword={this.state.genpassword} handleSubmit = {this.handleSubmit}/>\n            </div>\n        )\n    }\n}\n\n\n\nexport default connect()(TicketNew)\n","import React from 'react'\nimport {Link} from 'react-router-dom'\n\nimport {connect} from 'react-redux'\n\nimport { ListGroup, ListGroupItem } from 'reactstrap'\n\n class TicketShow extends React.Component{\n\n    findCustomer =  (id) => {\n        return this.props.customers.find(customer => customer._id == id )\n    }\n\n    findDepartment = (id) => {\n        return this.props.departments.find(department => department._id == id)\n    }\n\n    findEmployees = (id) => {\n        return this.props.employees.find(employee => employee._id == id)\n    }\n\n    findDoctors = (id) => {\n        return this.props.doctors.find(doctor => doctor._id == id)\n    }\n\n    render(){ \n        return (\n            <div>\n                {this.props.ticket && (\n                    <div>\n                    <h2>Code Number - {this.props.ticket.code}</h2>\n                    <ListGroup>\n                    <ListGroupItem>Customer -{this.props.ticket.customer.name? this.props.ticket.customer.name : this.findCustomer(this.props.ticket.customer).name}  </ListGroupItem>\n                    <ListGroupItem>Agents - {this.props.ticket.employees[0].name ? this.props.ticket.employees.map((emp,index)=>(index===this.props.ticket.employees.length-1)?`${emp.name}`: `${emp.name}, `): this.props.ticket.employees.map((emp,index)=>(index===this.props.ticket.employees.length-1)?`${this.findEmployees(emp).name}`: `${this.findEmployees(emp).name}, `)} </ListGroupItem>\n                    <ListGroupItem>Doctors - {this.props.ticket.doctors[0].name ? this.props.ticket.doctors.map((doc,index)=>(index===this.props.ticket.doctors.length-1)?`${doc.name}`: `${doc.name}, `): this.props.ticket.doctors.map((doc,index)=>(index===this.props.ticket.doctors.length-1)?`${this.findDoctors(doc).name}`: `${this.findDoctors(doc).name}, `)} </ListGroupItem>\n                    <ListGroupItem>Department - {this.props.ticket.department.name? this.props.ticket.department.name: this.findDepartment(this.props.ticket.department).name}</ListGroupItem>\n                    <ListGroupItem>Message - {this.props.ticket.message}</ListGroupItem>\n                    <ListGroupItem>Priority - {this.props.ticket.priority}</ListGroupItem>\n                    </ListGroup>\n                    <Link className=\"ml-1\" to={`/pattickets/edit/${this.props.ticket._id}`}>Edit</Link>\n                    </div>\n                )}\n\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    return {\n        ticket: state.tickets.find(ticket=> ticket._id == id ),\n        employees: state.employees,\n        customers: state.customers,\n        departments: state.departments,\n    }\n}\n\nexport default connect(mapStateToProps)(TicketShow)\n","import React from 'react'\nimport TicketForm from './Form'\n\nimport {connect} from 'react-redux'\nimport {startEditTicketTwo} from '../../../actions/tickets'\n\nclass TicketEdit extends React.Component{\n    handleSubmit = (ticket) => {\n\n        const redirect = () => this.props.history.push(`/pattickets/${ticket.id}`)\n        this.props.dispatch(startEditTicketTwo(ticket,redirect))\n        setTimeout(() => {\n            window.location.reload();\n        }, 1000);\n    }\n    render(){\n        return (\n            <div>\n                {this.props.ticket && (\n                    <div>\n                        <h2>Edit Ticket</h2>\n                         {this.props.ticket && <TicketForm ticket = {this.props.ticket} handleSubmit = {this.handleSubmit}/>}\n                     </div>\n                )}\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state,props) => {\n    const id = props.match.params.id\n    return {\n        ticket: state.tickets.find(ticket=>ticket._id == id)\n    }\n}\n\n\nexport default connect(mapStateToProps)(TicketEdit)\n","import React, { Suspense, lazy, useEffect } from 'react';\nimport {  Route, Switch, useLocation } from 'react-router-dom';\nimport SLUGS from 'resources/slugs';\nimport LoadingComponent from 'components/loading';\n\nimport { useSelector } from 'react-redux';\n\nimport AdminRoute from './auth/AdminRoutes';\nimport DoctorRoute from './auth/DoctorRoute';\nimport PatientRoute from './auth/PatientRoute';\nimport SubAdminRoute from './auth/SubAdminRoute';\nimport CommonProfRoute from './auth/CommonProfRoute';\n\n \n\n// admin\n\nimport CustomersList from './admin/customers/List';\nimport CustomerNew from './admin/customers/New';\nimport CustomerShow from './admin/customers/Show';\nimport CustomerEdit from './admin/customers/Edit';\n\nimport DepartmentsList from './admin/departments/List';\nimport DepartmentShow from './admin/departments/Show';\nimport DepartmentEdit from './admin/departments/Edit';\n\nimport SubDepartmentsList from './subadmin/departments/List';\nimport SubDepartmentShow from './subadmin/departments/Show';\nimport SubDepartmentEdit from './subadmin/departments/Edit';\n\nimport EmployeesList from './admin/employees/List';\nimport EmployeeNew from './admin/employees/New';\nimport EmployeeShow from './admin/employees/Show';\nimport EmployeeEdit from './admin/employees/Edit';\n\n\nimport DoctorsList from './admin/doctors/List';\nimport DoctorNew from './admin/doctors/New';\nimport DoctorShow from './admin/doctors/Show';\nimport DoctorEdit from './admin/doctors/Edit';\n\nimport TicketsList from './admin/tickets/List';\nimport TicketNew from './admin/tickets/New';\nimport SubTicketNew from './subadmin/tickets/New';\nimport TicketShow from './admin/tickets/Show';\nimport TicketEdit from './admin/tickets/Edit';\n\nimport Reports from './admin/tickets/Reports';\nimport Profile from './admin/profile/Profile';\n// import EditProfile from './admin/profile/EditProfile';\n// import CreateNewPassword from './admin/profile/createNewPassword';\nimport ChangePassword from './admin/profile/ChangePassword';\n\n// admin\n\n\n//subadmin\n\nimport SubReports from './subadmin/tickets/Reports';\n\n\nimport SubCustomersList from './subadmin/customers/List'; \nimport SubCustomerNew from './subadmin/customers/New';\nimport SubCustomerShow from './subadmin/customers/Show';\nimport SubCustomerEdit from './subadmin/customers/Edit'; \n\n\n\nimport SubDoctorsList from './subadmin/doctors/List';\nimport SubDoctorNew from './subadmin/doctors/New';\nimport SubDoctorShow from './subadmin/doctors/Show';\nimport SubDoctorEdit from './subadmin/doctors/Edit';\n\n\n\nimport SubTicketsList from './subadmin/tickets/List';\n// import SubTicketNew from './subadmin/tickets/New';\nimport SubTicketShow from './subadmin/tickets/Show';\nimport SubTicketEdit from './subadmin/tickets/Edit';\n\n// import SubDoctorsList from './subadmin/'\n\nimport SubProfile from './subadmin/profile/Profile';\n// import SubCreateNewPassword from './subadmin/profile/createNewPassword';\nimport SubChangePassword from './subadmin/profile/ChangePassword';\n\n//subadmin\n\n//doctor\nimport DocProfile from './doctor/profile/Profile';\n// import DocCreateNewPassword from './doctor/profile/createNewPassword';\nimport DocChangePassword from './doctor/profile/ChangePassword';\n\n\nimport DocTicketsList from './doctor/tickets/List';\nimport DocTicketNew from './doctor/tickets/New';\nimport DocTicketShow from './doctor/tickets/Show';\nimport DocTicketEdit from './doctor/tickets/Edit';\n\n\n//doctor\n\n//patient\nimport PatProfile from './patient/profile/Profile';\n// import PatCreateNewPassword from './patient/profile/createNewPassword';\nimport PatChangePassword from './patient/profile/ChangePassword';\n\n\nimport PatTicketsList from './patient/tickets/List';\nimport PatTicketNew from './patient/tickets/New';\nimport PatTicketShow from './patient/tickets/Show';\nimport PatTicketEdit from './patient/tickets/Edit';\n// import NotFound from './user/NotFound';\n\n\n\n\n//patient\n\nconst AdminDashboard = lazy(() => import('./admin/dashboard'));\nconst SubAdminDashboard = lazy(() => import('./subadmin/dashboard'));\nconst DoctorDashboard = lazy(() => import('./doctor/dashboard'));\nconst PatientDashboard = lazy(() => import('./patient/dashboard'));\n\n// const PatientDashboard=()=>{\n//     console.log('inside redirect testing ');\n\n//     return(\n//         <h1>hello patient</h1>\n//     )\n// }\n\nfunction PrivateRoutes() {\n\n    const user = useSelector(state => state.user)\n\n    const { pathname } = useLocation();\n    // eslint-disable-next-line no-unused-vars\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n    return (\n        <Suspense fallback={<LoadingComponent loading />}>\n            <Switch>\n                {/* admin */}\n                <AdminRoute exact path={SLUGS.admindashboard} component={AdminDashboard} />\n                <AdminRoute exact path={SLUGS.adprofile} component={Profile} />\n                {/* <AdminRoute exact path={SLUGS.updateadprofile} component={EditProfile} /> */}\n\n                <AdminRoute path='/customers' component={CustomersList} exact={true} />\n                <AdminRoute exact path='/customers/new' component={CustomerNew} />\n                <AdminRoute exact path='/customers/edit/:id' component={CustomerEdit} />\n                <AdminRoute exact path='/customers/:id' component={CustomerShow} />\n\n                <AdminRoute path='/departments' component={DepartmentsList} exact={true} />\n                <AdminRoute exact path='/departments/edit/:id' component={DepartmentEdit} />\n                <AdminRoute exact path='/departments/:id' component={DepartmentShow} />\n\n                <AdminRoute path='/employees' component={EmployeesList} exact={true} />\n                <AdminRoute exact path='/employees/new' component={EmployeeNew} />\n                <AdminRoute exact path='/employees/edit/:id' component={EmployeeEdit} />\n                <AdminRoute exact path='/employees/:id' component={EmployeeShow} />\n\n                <AdminRoute path='/doctors' component={DoctorsList} exact={true} />\n                <AdminRoute exact path='/doctors/new' component={DoctorNew} />\n                <AdminRoute exact path='/doctors/edit/:id' component={DoctorEdit} />\n                <AdminRoute exact path='/doctors/:id' component={DoctorShow} />\n\n                <AdminRoute path='/tickets' component={TicketsList} exact={true} />\n                <AdminRoute exact path='/tickets/new' component={TicketNew} />\n                <AdminRoute exact path='/tickets/edit/:id' component={TicketEdit} />\n                <AdminRoute exact path='/tickets/:id' component={TicketShow} />\n                <AdminRoute exact path='/reports' component={Reports} />\n                {/* <AdminRoute exact path='/createNewPassword/:token' component={CreateNewPassword} /> */}\n                <AdminRoute exact path='/updatePassword' component={ChangePassword} />\n\n                {/* admin */}\n                {/* subadmin */}\n                <SubAdminRoute exact path={SLUGS.subadmindashboard} component={SubAdminDashboard} />\n\n                <SubAdminRoute exact path={SLUGS.subprofile} component={SubProfile} />\n\n                {/* <SubAdminRoute path='/customers' component={CustomersList} exact={true} />\n                <SubAdminRoute exact path='/customers/new' component={CustomerNew} />\n                <SubAdminRoute exact path='/customers/edit/:id' component={CustomerEdit} />\n                <SubAdminRoute exact path='/customers/:id' component={CustomerShow} /> */}\n\n                <SubAdminRoute path='/subtickets' component={SubTicketsList} exact={true} />\n                <SubAdminRoute exact path='/subtickets/new' component={SubTicketNew} />\n                <SubAdminRoute exact path='/subtickets/edit/:id' component={SubTicketEdit} />\n                <SubAdminRoute exact path='/subtickets/:id' component={SubTicketShow} />\n\n                <SubAdminRoute exact path='/subupdatePassword' component={SubChangePassword} />\n                {/* <SubAdminRoute path='/subdoctors' component={SubDoctorsList} exact={true} /> */}\n\n                <SubAdminRoute path='/subdoctors' component={SubDoctorsList} exact={true} />\n                <SubAdminRoute exact path='/subdoctors/new' component={SubDoctorNew} />\n                <SubAdminRoute exact path='/subdoctors/edit/:id' component={SubDoctorEdit} />\n                <SubAdminRoute exact path='/subdoctors/:id' component={SubDoctorShow} />\n\n                <SubAdminRoute path='/subdepartments' component={SubDepartmentsList} exact={true} />\n                <SubAdminRoute exact path='/subdepartments/edit/:id' component={SubDepartmentEdit} />\n                <SubAdminRoute exact path='/subdepartments/:id' component={SubDepartmentShow} />\n\n\n                <SubAdminRoute path='/subcustomers' component={SubCustomersList} exact={true} />\n                <SubAdminRoute exact path='/subcustomers/new' component={SubCustomerNew} />\n                <SubAdminRoute exact path='/subcustomers/edit/:id' component={SubCustomerEdit} />\n                <SubAdminRoute exact path='/subcustomers/:id' component={SubCustomerShow} />\n                \n                <SubAdminRoute exact path='/subreports' component={SubReports} />\n\n\n                {/* <AdminRoute\n                    exact\n                    path='/subcreateNewPassword/:token'\n                    component={SubCreateNewPassword}  \n                /> */} \n\n                {/* subadmin */}\n                {/* doctor */}\n                <DoctorRoute exact path={SLUGS.docdashboard} component={DoctorDashboard} />\n                <DoctorRoute exact path={SLUGS.docprofile} component={DocProfile} />\n                <DoctorRoute path='/doctickets' component={DocTicketsList} exact={true} />\n                <DoctorRoute exact path='/doctickets/new' component={DocTicketNew} />\n                <DoctorRoute exact path='/doctickets/edit/:id' component={DocTicketEdit} />\n                <DoctorRoute exact path='/doctickets/:id' component={DocTicketShow} />\n                <DoctorRoute exact path='/docupdatePassword' component={DocChangePassword} />\n\n                {/* doctor */}\n                {/* patient */}\n                <PatientRoute path={SLUGS.patdashboard} exact component={PatientDashboard} />\n                <PatientRoute exact path={SLUGS.patprofile} component={PatProfile} />\n\n                <PatientRoute exact path='/patupdatePassword' component={PatChangePassword} />\n                <PatientRoute path={SLUGS.patTicketsList} component={PatTicketsList} exact={true} />\n                <PatientRoute exact path='/pattickets/new' component={PatTicketNew} />\n                <PatientRoute exact path='/pattickets/edit/:id' component={PatTicketEdit} />\n                <PatientRoute exact path='/pattickets/:id' component={PatTicketShow} />\n                {/* patient */}\n                {/* <Route exact path={SLUGS.overviewTwo} render={() => <div>overviewTwo</div>} />\n                <Route exact path={SLUGS.overviewThree} render={() => <div>overviewThree</div>} />\n                <Route exact path={SLUGS.overview} render={() => <div>overview</div>} />\n                <Route exact path={SLUGS.tickets} render={() => <div>tickets</div>} />\n                <Route exact path={SLUGS.ideasTwo} render={() => <div>ideasTwo</div>} />\n                <Route exact path={SLUGS.ideasThree} render={() => <div>ideasThree</div>} />\n                <Route exact path={SLUGS.ideas} render={() => <div>ideas</div>} />\n                <Route exact path={SLUGS.contacts} render={() => <div>contacts</div>} />\n                <Route exact path={SLUGS.agents} render={() => <div>agents</div>} />\n                <Route exact path={SLUGS.articles} render={() => <div>articles</div>} />\n                <Route exact path={SLUGS.settings} render={() => <div>settings</div>} />\n                <Route exact path={SLUGS.subscription} render={() => <div>subscription</div>} /> */}\n                {/* <Route component={NotFound}></Route> */}\n\n                {user.role === 1 && <Route component={AdminDashboard} />}\n                {user.role === 2 && <Route component={SubAdminDashboard} />}\n                {user.role === 3 && <Route component={DoctorDashboard} />}\n                {user.role === 4 && <Route component={PatientDashboard} />}\n            </Switch>\n        </Suspense>\n    );\n}\n\nexport default PrivateRoutes;\n","import React from 'react';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { Column, Row } from 'simple-flexbox';\nimport { SidebarComponent, SidebarContext } from 'components/sidebar';\nimport HeaderComponent from 'components/header/HeaderComponent';\nimport PrivateRoutes from './PrivateRoutes';\n\nconst useStyles = createUseStyles({\n    container: {\n        height: '100%',\n        minHeight: 850\n    },\n    mainBlock: {\n        marginLeft: 255,\n        padding: 30,\n        '@media (max-width: 1080px)': {\n            marginLeft: 0\n        }\n    },\n    contentBlock: {\n        marginTop: 54\n    }\n});\n\nfunction PrivateSection() {\n    const theme = useTheme();\n    const classes = useStyles({ theme });\n\n    return (\n        <SidebarContext>\n            <Row className={classes.container}>\n                <SidebarComponent />\n                <Column flexGrow={1} className={classes.mainBlock}>\n                    <HeaderComponent />\n                    <div className={classes.contentBlock}>\n                        <PrivateRoutes />\n                    </div>\n                </Column>\n            </Row>\n        </SidebarContext>\n    );\n}\n\nexport default PrivateSection;\n","//changing password after email authentication\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Container, Row, Col, Form, Button, Alert } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\n// import Loader from \"./loader\";\r\nimport { resetPassword } from \"../../actions/user\";\r\n\r\nconst CreateNewPassword = ({ match }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [newPass, setNewPass] = useState(\"\");\r\n  const [conPass, setConPass] = useState(\"\");\r\n\r\n  const token = match.params.token;\r\n\r\n  const passReset = useSelector((state) => state.passReset);\r\n  const { loading, error, message } = passReset;\r\n\r\n  useEffect(() => {}, [dispatch]);\r\n\r\n  const resetPasswordHandler = () => {\r\n    dispatch(resetPassword(token, newPass, conPass));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"mt-5 justify-content-center\">\r\n        <Col md={4} className=\"m-3 p-3\" style={{ border: \"1px solid #ddd\" }}>\r\n          <Form>\r\n            <h2>Reset Password</h2>\r\n            <Form.Group>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Create new password\"\r\n                value={newPass}\r\n                onChange={(e) => setNewPass(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Retype new password\"\r\n                value={conPass}\r\n                onChange={(e) => setConPass(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button\r\n              onClick={resetPasswordHandler}\r\n              className=\"btn-block btn-warning\"\r\n            >\r\n              RESET\r\n            </Button>\r\n          </Form>\r\n          <LinkContainer className=\"mt-3\" to=\"/login\">\r\n            <Button\r\n              type=\"button\"\r\n              className=\"btn-block\"\r\n              variant=\"outline-secondary\"\r\n            >\r\n              Back to Login\r\n            </Button>\r\n          </LinkContainer>\r\n          <Row className=\"mt-3\">\r\n            <Col>\r\n              {loading ? (\r\n                <h1>loading</h1>\r\n              ) : error ? (\r\n                <Alert variant=\"danger\">\r\n                  <i className=\"fas fa-exclamation-triangle\"></i>\r\n                  {error}\r\n                </Alert>\r\n              ) : (\r\n                message && <Alert variant=\"success\">{message}</Alert>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CreateNewPassword;\r\n","//outside app add recovery mail\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Container, Row, Col, Form, Button, Alert } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { LinkContainer } from \"react-router-bootstrap\";\r\nimport { getResetPasswordLink } from \"../../actions/user\"; \r\n// import Loader from \"./loader\";\r\n\r\nconst ForgotPassword = () => {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const passResetLink = useSelector((state) => state.passResetLink);\r\n  const { loading, error, message } = passResetLink;\r\n  console.log(passResetLink);\r\n\r\n  useEffect(() => {}, [dispatch]);\r\n\r\n  const getPasswordResetLinkHandler = () => {\r\n    if (email) {\r\n      dispatch(getResetPasswordLink(email));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"mt-5 justify-content-center\">\r\n        <Col md={4} className=\"m-3 p-3\" style={{ border: \"1px solid #ddd\" }}>\r\n          <Form>\r\n            <h2>Recover Password</h2>\r\n            <Form.Group>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                placeholder=\"Enter your registered email address\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button\r\n              onClick={getPasswordResetLinkHandler}\r\n              className=\"btn-block btn-warning\"\r\n            >\r\n              Get Reset Link\r\n            </Button>\r\n          </Form>\r\n          <LinkContainer className=\"mt-3\" to=\"/login\">\r\n            <Button\r\n              type=\"button\"\r\n              className=\"btn-block\"\r\n              variant=\"outline-secondary\"\r\n            >\r\n              Back to Login\r\n            </Button>\r\n          </LinkContainer>\r\n          <Row className=\"mt-3\">\r\n            <Col>\r\n              {loading ? (\r\n                <h1>Loading</h1>\r\n              ) : error ? (\r\n                <Alert variant=\"danger\">\r\n                  <i className=\"fas fa-exclamation-triangle\"></i>\r\n                  {error}\r\n                </Alert>\r\n              ) : (\r\n                message && <Alert variant=\"success\">{message}</Alert>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavbarToggler,\r\n   } from 'reactstrap';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\n// import swal from 'sweetalert2';\r\n\r\nfunction PublicNavbar(props) {\r\n    const [collapsed, setCollapsed] = useState(true);\r\n    const toggleNavbar = () => setCollapsed(!collapsed);\r\n    return (\r\n        <>\r\n            <Navbar color='blue' dark expand='md' className='mb-5 bg-primary'>\r\n                <NavbarBrand>OneSmarter HealthCare</NavbarBrand>\r\n                <NavbarToggler onClick={toggleNavbar} className='mr-2' />\r\n                <Collapse isOpen={!collapsed} navbar>\r\n                    <Nav className='ml-auto' navbar>\r\n                        <NavItem>\r\n                            <Link className='nav-link text-white' to='/publicdashboard'>\r\n                                Home\r\n                            </Link>\r\n                        </NavItem>\r\n                        <>\r\n                            <NavItem>\r\n                                <Link className='nav-link text-white' to='/login'>\r\n                                    Login\r\n                                </Link>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <Link className='nav-link text-white' to='/signup'>\r\n                                    Register\r\n                                </Link>\r\n                            </NavItem>\r\n                        </>\r\n                    </Nav>\r\n                </Collapse>\r\n            </Navbar>\r\n        </>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.user\r\n    };\r\n};\r\n\r\n// export default connect(mapStateToProps)(App);\r\n\r\nexport default connect(mapStateToProps)(PublicNavbar);\r\n","import React, { useState } from 'react';\nimport { startSetUser } from '../../actions/user';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useDispatch} from 'react-redux';\n// import SLUGS from '../../resources/slugs';\nimport { useHistory } from 'react-router-dom';\n\nimport PublicNavbar from './PublicNavbar'\n\n\nimport {Link} from \"react-router-dom\"\n\nconst Login = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const dispatch = useDispatch();\n    let history = useHistory();\n\n    const handleSubmit = (e) => {\n        console.log(email);\n        console.log(password);\n        e.preventDefault();\n        const loginData = {\n            email: email,\n            password: password\n        };\n\n        const redirect = (user) => {\n            if (user) {\n                 if (user && user.role === 1) {\n                     history.push('/admindashboard');\n                 } else if (user && user.role === 2) {\n                     history.push('/subadmindashboard');\n                 } else if (user && user.role === 3) {\n                     history.push('/docdashboard');\n                 } else if (user && user.role === 4) {\n                    console.log('inside redirect');\n                    history.push('/patdashboard');\n                 } else {\n                     history.push('/publicdashboard');\n                 }\n\n            }\n        };\n\n         const redirectToPassChange = (user) => {\n             if (user) {\n                //  if (user && user.role === 1) {\n                //      return <Redirect to='/admin/dashboard' />;\n                //  } else {\n                //      return <Redirect to='/user/dashboard' />;\n                //  }\n                if (user && user.role === 1) {\n                    history.push('/admindashboard');\n                } else if (user && user.role === 2) {\n                    history.push('/subupdatePassword');\n                } else if (user && user.role === 3) {\n                    history.push('/docupdatePassword');\n                } else if (user && user.role === 4) {\n                    history.push('/patupdatePassword');\n                } else {\n                    history.push('/publicdashboard');\n                }\n             }\n         };\n        dispatch(startSetUser(loginData, redirect, redirectToPassChange));\n    };\n\n    return (\n        <>\n            <PublicNavbar />\n            <div className='justify-content-md-center '>\n                <form className='form-signin' onSubmit={handleSubmit}>\n                    <h1 className='h1 mb-3 font-weight-normal text-center'>Login</h1>\n\n                    <label htmlFor='email' className='sr-only'>\n                        Email\n                    </label>\n                    <input\n                        type='text'\n                        id='email'\n                        className='form-control mb-3'\n                        placeholder='Email'\n                        name='email'\n                        onChange={(e) => setEmail(e.target.value)}\n                    />\n\n                    <label htmlFor='password' className='sr-only'>\n                        Password\n                    </label>\n                    <input\n                        type='password'\n                        id='password'\n                        className='form-control mb-3'\n                        placeholder='Password'\n                        name='password'\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n\n                    <button className='btn btn-lg btn-primary btn-block' type='submit'>\n                        Login\n                    </button>\n\n                    <br />\n                    <br />\n                    <Link to='/forgot_password'>\n                        <button className='btn btn-lg btn-primary btn-block'>\n                            Forgot Password\n                        </button>\n                    </Link>\n                    <br />\n                    <hr />\n                    <h3>Admin login</h3>\n                    <h4>Username = vivekbhore50@gmail.com</h4>\n                    <h4>Password = Abc@123</h4>\n                    <br />\n                    <hr />\n                    <h3>SubAdmin login</h3>\n                    <h4>Username = vivekbhore5000@gmail.com</h4>\n                    <h4>Password = Mno@123</h4>\n                    <br />\n                    <hr />\n                    <h3>Doctor login</h3>\n                    <h4>Username = kalyanibhore2020@gmail.com</h4>\n                    <h4>Password = Pqr@123</h4>\n                    <br />\n                    <hr />\n                    <h3>Patient login</h3>\n                    <h4>Username = bhoresudhakar26@gmail.com</h4>\n                    <h4>Password = Xyz@123</h4>\n                    <br />\n                    <hr />\n                    <br />\n                    \n                </form>\n            </div>\n        </>\n    );\n};\n\nexport default Login;\n\n// import React from 'react'\n// import {connect} from 'react-redux'\n// // import \"bootstrap/dist/css/bootstrap.min.css\";\n\n// // import PublicNavbar from './PublicNavbar'\n\n// // import {startSetUser} from '../../actions/user'\n// import {startSetUser} from '../../actions/user'\n\n// class Login extends React.Component {\n\n//     constructor(props){\n//         super(props)\n//         this.state = {\n//             email: '',\n//             password: ''\n//         }\n//     }\n\n//     handleClick = (e) => {\n//         this.setState({\n//             [e.target.name]: e.target.value\n//         })\n//     }\n\n//     handleSubmit = (e) => {\n//         e.preventDefault()\n//         const loginData = {\n//             email: this.state.email,\n//             password: this.state.password\n//         }\n//         const redirect = () => this.props.history.push('/')\n//         this.props.dispatch(startSetUser(loginData,redirect))\n\n//     }\n\n//     render(){\n//         return (\n//             <>\n//             {/* <PublicNavbar /> */}\n//                 <div className='justify-content-md-center '>\n//                     <form className='form-signin' onSubmit={this.handleSubmit}>\n//                         <h1 className='h1 mb-3 font-weight-normal text-center'>Login</h1>\n\n//                         <label htmlFor='email' className='sr-only'>\n//                             Email\n//                         </label>\n//                         <input\n//                             type='text'\n//                             id='email'\n//                             className='form-control mb-3'\n//                             placeholder='Email'\n//                             name='email'\n//                             onChange={this.handleClick}\n//                         />\n\n//                         <label htmlFor='password' className='sr-only'>\n//                             Password\n//                         </label>\n//                         <input\n//                             type='password'\n//                             id='password'\n//                             className='form-control mb-3'\n//                             placeholder='Password'\n//                             name='password'\n//                             onChange={this.handleClick}\n//                         />\n\n//                         <button className='btn btn-lg btn-primary btn-block' type='submit'>\n//                             Login\n//                         </button>\n//                     </form>\n//                 </div>\n//             </>\n//         );\n//     }\n// }\n\n// const mapsStateToProps = (state) => {\n//     return {\n//        user:state.user\n//     }\n// }\n\n// export default connect(mapsStateToProps)(Login)\n","import React from 'react'\r\nimport PublicNavbar from './PublicNavbar'\r\n\r\n\r\n\r\nfunction PublicDashboard() {\r\n    return (\r\n        <div>\r\n            <PublicNavbar />\r\n            <h1>This is public dashboard</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PublicDashboard\r\n","import React from 'react'\n\nimport {connect} from 'react-redux'\n\nimport PublicNavbar from './PublicNavbar';\n\n// import {startAddUser} from '../../actions/user'\nimport { startAddUser } from '../../actions/user';\n\n\nclass Register extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            username: '',\n            email: '',\n            password: ''\n        }\n    }\n\n    handleClick = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault()\n        const registerData = {\n            username: this.state.username,\n            email: this.state.email,\n            password: this.state.password\n        }\n        console.log(registerData)\n\n        const redirect = () => this.props.history.push('/login')\n        this.props.dispatch(startAddUser(registerData,redirect))\n\n\n    }\n\n    render(){\n        return (\n            <>\n                <PublicNavbar />\n                <div className='justify-content-md-center'>\n                    <form className='form-signin' onSubmit={this.handleSubmit}>\n                        <h1 className='h1 mb-3 font-weight-normal text-center'>Register</h1>\n\n                        <label htmlFor='username' className='sr-only'>\n                            Username\n                        </label>\n                        <input\n                            type='text'\n                            id='username'\n                            className='form-control mb-3'\n                            placeholder='Username'\n                            name='username'\n                            onChange={this.handleClick}\n                        />\n\n                        <label htmlFor='email' className='sr-only'>\n                            Email\n                        </label>\n                        <input\n                            type='text'\n                            id='email'\n                            className='form-control mb-3'\n                            placeholder='Email'\n                            name='email'\n                            onChange={this.handleClick}\n                        />\n\n                        <label htmlFor='password' className='sr-only'>\n                            Password\n                        </label>\n                        <input\n                            type='password'\n                            id='password'\n                            className='form-control mb-3'\n                            placeholder='Password'\n                            name='password'\n                            onChange={this.handleClick}\n                        />\n\n                        <button className='btn btn-lg btn-primary btn-block' type='submit'>\n                            Register\n                        </button>\n                    </form>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default  connect()(Register)","import LoadingComponent from 'components/loading';\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport SLUGS from 'resources/slugs';\nimport CreateNewPassword from './user/createNewPassword';\nimport ForgotPassword from './user/ForgotPassword';\n\nimport Login from './user/Login';\n// import NotFound from './user/NotFound';\nimport PublicDashboard from './user/PublicDashboard';\nimport Register from './user/Register';\n\nfunction PublicRoutes() {\n    return (\n        <Switch>\n            <Route exact path=\"/\" component={Login} />\n            <Route exact path={SLUGS.login} component={Login} />\n            <Route exact path={SLUGS.publicdashboard} component={PublicDashboard} />\n            <Route exact path={SLUGS.signup} component={Register} />\n            <Route exact path='/forgot_password' component={ForgotPassword} />;\n            <Route exact path='/createNewPassword/:token' component={CreateNewPassword} />\n            <Route component={LoadingComponent}></Route>\n            {/* <Redirect to={SLUGS.login} /> */}\n        </Switch>\n    );\n}\n\nexport default PublicRoutes;\n","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport useWindowSize from 'hooks/useWindowSize';\nimport PrivateSection from 'route/PrivateSection';\nimport PublicRoutes from 'route/PublicRoutes';\nimport { useSelector } from 'react-redux';\n\nfunction Routes() {\n    const { pathname } = useLocation();\n    // eslint-disable-next-line no-unused-vars\n    const [width, height] = useWindowSize();\n      const user = useSelector((state) => state.user);\n\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    }, [pathname]);\n// console.log(user);\n    return user.role ? <PrivateSection /> : <PublicRoutes />;\n}\n\nexport default Routes;\n","import { useLayoutEffect, useState } from 'react';\n\nexport default function useWindowSize() {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n        function updateSize() {\n            setSize([window.innerWidth, window.innerHeight]);\n        }\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    }, []);\n    return size;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n    PASSWORD_RESET_LINK_REQUEST,\n    PASSWORD_RESET_LINK_SUCCESS,\n    PASSWORD_RESET_LINK_FAIL,\n    PASSWORD_RESET_LINK_RESET,\n    RESET_PASSWORD_SUCCESS,\n    RESET_PASSWORD_FAIL,\n    RESET_PASSWORD_RESET,\n    RESET_PASSWORD_REQUEST,\n    USER_UPDATE_REQUEST,\n    USER_UPDATE_SUCCESS,\n    USER_UPDATE_FAIL\n} from '../constants/userConstant.js';\n\nexport const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case \"SET_USER\":\n      return { ...action.payload };\n    case \"REMOVE_USER\":\n      return {};\n    default:\n      return { ...state };\n  }\n};\n\n\n\nexport const passResetLinkReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PASSWORD_RESET_LINK_REQUEST:\n      return { loading: true };\n    case PASSWORD_RESET_LINK_SUCCESS:\n      return { loading: false, message: action.payload };\n    case PASSWORD_RESET_LINK_FAIL:\n      return { loading: false, error: action.payload };\n    case PASSWORD_RESET_LINK_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const passResetReducer = (state = {}, action) => {\n  switch (action.type) {\n    case RESET_PASSWORD_REQUEST:\n      return { loading: true };\n    case RESET_PASSWORD_SUCCESS:\n      return { loading: false, message: action.payload };\n    case RESET_PASSWORD_FAIL:\n      return { loading: false, error: action.payload };\n    case RESET_PASSWORD_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\n\n//profile\n\n\nexport const userUpdateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_UPDATE_REQUEST:\n            return { loading: true };\n        case USER_UPDATE_SUCCESS:\n            return { loading: false, userInfo: action.payload, success: true };\n        case USER_UPDATE_FAIL:\n            return { loading: false, error: action.payload, success: false };\n        default:\n            return state;\n    }\n};\n\n\n\nexport default userReducer;\n","\nconst customersReducer = (state =[],action) =>{\n    switch(action.type) {\n        case 'SET_CUSTOMERS': return [].concat(state,action.payload)\n\n        case 'REMOVE_CUSTOMER': {\n            return state.filter(customer=>{\n                return customer._id!== action.payload._id\n            })\n        }\n        case 'ADD_CUSTOMER': return [...state,action.payload]\n\n        case 'EDIT_CUSTOMER': return state.map(customer => {\n            if(customer._id === action.payload._id) {\n                return Object.assign({},customer,action.payload)\n            } else {\n                return Object.assign({},customer)\n            }\n        })\n        case 'SET_SUB_CUSTOMERS':return [].concat(state,action.payload)\n\n        default : return [...state]\n    }\n}\nexport default customersReducer\n","const departmentsReducer = (state=[],action) => {\n    switch(action.type){\n        case 'SET_DEPARTMENTS': return [].concat(state,action.payload)\n\n        case 'REMOVE_DEPARTMENT': return state.filter(department=>{\n            return department._id !== action.payload._id\n        })\n\n        case 'ADD_DEPARTMENT': return [...state,action.payload]\n\n        case 'EDIT_DEPARTMENT': return state.map(department=>{\n                                    if(department._id === action.payload._id){\n                                            return Object.assign({},department,action.payload)\n                                    } else {\n                                    return Object.assign({},department)\n                                    }\n                             })\n        default: return [...state]\n    }\n}\n\nexport default departmentsReducer","const employeesReducer = (state=[],action) => {\n    switch(action.type){\n        case 'SET_EMPLOYEES': return [].concat(state,action.payload)\n\n        case 'REMOVE_EMPLOYEE': return state.filter(employee=>{\n            return employee._id !== action.payload._id\n        })\n\n        case 'ADD_EMPLOYEE': return [...state,action.payload]\n\n        case 'UPDATE_EMPLOYEE_DEPARTMENT': {\n            return state.map(employee => {\n                if(employee.department._id === action.payload._id) {\n                    employee.department = action.payload._id\n                    return {...employee}\n                } else {\n                    return {...employee}\n                }\n            })\n        }\n\n        case 'EDIT_EMPLOYEE': return state.map(employee=>{\n                                    if(employee._id === action.payload._id){\n                                            return Object.assign({},employee,action.payload)\n                                    } else {\n                                    return Object.assign({},employee)\n                                    }\n                             })\n        default: return [...state]\n\n    }\n}\n\nexport default employeesReducer","const ticketsReducer = (state=[],action) => {\n    switch(action.type){\n        case 'SET_TICKETS': return [].concat(state,action.payload)\n\n        case 'REMOVE_TICKET': return state.filter(ticket=>{\n            return ticket._id !== action.payload._id\n        })\n\n        case 'ADD_TICKET': return [...state,action.payload]\n\n        case 'EDIT_TICKET': return state.map(ticket=>{\n                                    if(ticket._id === action.payload._id){\n                                            return Object.assign({},ticket,action.payload)\n                                    } else {\n                                    return Object.assign({},ticket)\n                                    }\n                             })\n        case 'TOGGLE_RESOLVE': return state.map(ticket=>{\n                                    if(ticket._id === action.payload){\n                                        console.log(ticket.isResolved)\n                                        ticket.isResolved = !ticket.isResolved\n                                        return ticket\n                                    } else {\n                                        return ticket\n                                    }\n\n        })\n\n        case 'UPDATE_TICKET_CUSTOMER': {\n            return state.map(ticket => {\n                if(ticket.customer._id === action.payload._id) {\n                    ticket.customer = action.payload._id\n                    return {...ticket}\n                } else {\n                    return {...ticket}\n                }\n            })\n        }\n\n        case 'UPDATE_TICKET_DEPARTMENT': {\n            return state.map(ticket=>{\n                if(ticket.department._id === action.payload._id){\n                    ticket.department = action.payload._id\n                    return {...ticket}\n                } else {\n                    return {...ticket}\n                }\n            })\n        }\n        case 'FILTER_SEARCH': return state.filter(ticket=>ticket.code.includes(action.payload))\n\n        default: return [...state]\n    }\n}\n\nexport default ticketsReducer","const doctorsReducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case 'SET_DOCTORS':\r\n            return [].concat(state, action.payload);\r\n\r\n        case 'REMOVE_DOCTOR':\r\n            return state.filter((doctor) => {\r\n                return doctor._id !== action.payload._id;\r\n            });\r\n\r\n        case 'ADD_DOCTOR':\r\n            return [...state, action.payload];\r\n\r\n        case 'UPDATE_DOCTOR_DEPARTMENT': {\r\n            return state.map((doctor) => {\r\n                if (doctor.department._id === action.payload._id) {\r\n                    doctor.department = action.payload._id;\r\n                    return { ...doctor };\r\n                } else {\r\n                    return { ...doctor };\r\n                }\r\n            });\r\n        }\r\n\r\n        case 'EDIT_DOCTOR':\r\n            return state.map((doctor) => {\r\n                if (doctor._id === action.payload._id) {\r\n                    return Object.assign({}, doctor, action.payload);\r\n                } else {\r\n                    return Object.assign({}, doctor);\r\n                }\r\n            });\r\n        case 'SET_SUB_DOCTORS':  \r\n           return [].concat(state, action.payload);  \r\n        default:\r\n            return [...state];\r\n    }\r\n};\r\n\r\nexport default doctorsReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ThemeProvider } from 'react-jss';\nimport Theme from 'resources/theme';\nimport Routes from 'route';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport configureStore from './store/configureStore';\nimport { setUser } from './actions/user';\nimport { startSetCustomers,startSetCustomersForSubadmins } from './actions/customers';\nimport { startSetDepartments } from './actions/departments';\nimport { startSetEmployees } from './actions/employees';\nimport { startSetTickets} from './actions/tickets';\n\n\n\nimport axios from './config/axios';\nimport { startSetDoctors,startSetDoctorsForSubadmins } from 'actions/doctors';\n\n// console.log(localStorage.getItem(\"authToken\"));\nconst store = configureStore();\nif (localStorage.getItem('authToken')) {\n    axios\n        .get('/users/account', {\n            headers: {\n                'x-auth': localStorage.getItem('authToken')\n            }\n        })\n        .then((response) => {\n            const user = response.data;\n            // console.log(user);\n            store.dispatch(setUser(user));\n            store.dispatch(startSetDepartments());\n            store.dispatch(startSetEmployees());\n            store.dispatch(startSetTickets(user.role,user.email));\n             if(user.role==2)\n                {\n                    store.dispatch(startSetDoctorsForSubadmins()); \n                    store.dispatch(startSetCustomersForSubadmins()); \n                }\n                else\n                {\n                    store.dispatch(startSetDoctors()); \n                    store.dispatch(startSetCustomers());\n\n\n                }\n        \n            \n        });\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <ThemeProvider theme={Theme}>\n            <Router>\n                <Routes />\n            </Router>\n        </ThemeProvider>\n        </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {createStore,combineReducers,applyMiddleware} from 'redux'\nimport thunk from 'redux-thunk'\n\nimport {\n  userReducer,\n  passResetLinkReducer,\n  passResetReducer,\n} from \"../reducers/userReducer\";\nimport customersReducer from '../reducers/customersReducer'\nimport departmentsReducer from '../reducers/departmentsReducer'\n\nimport employeesReducer from '../reducers/employeesReducer'\nimport ticketsReducer from '../reducers/ticketsReducer'\nimport doctorsReducer from 'reducers/doctorsReducer';\n\n\n\nconst configureStore = () => {\n    const store = createStore(\n        combineReducers({\n            user: userReducer,\n            passResetLink: passResetLinkReducer,\n            passReset: passResetReducer,\n            customers: customersReducer,\n            departments: departmentsReducer,\n            employees: employeesReducer,\n            tickets: ticketsReducer,\n            doctors: doctorsReducer\n        }),\n        applyMiddleware(thunk)\n    );\n    return store\n}\n\nexport default configureStore"],"sourceRoot":""}